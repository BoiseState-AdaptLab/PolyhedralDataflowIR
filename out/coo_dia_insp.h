// 'coo_dia_insp' code generated by 'edavis' at 10/01/2019 14:42:43
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <math.h>
#include <string.h>

#define min(x,y) (((x)<(y))?(x):(y))
#define max(x,y) (((x)>(y))?(x):(y))
#define abs(x) ((x)<0?-(x):(x))
#define floord(x,y) ((x)/(y))
#define offset2(i,j,M) ((j)+(i)*(M))
#define offset3(i,j,k,M,N) ((k)+((j)+(i)*(M))*(N))
#define offset4(i,j,k,l,M,N,P) ((l)+((k)+((j)+(i)*(M))*(N))*(P))
#define arrinit(ptr,val,size) for(unsigned __i__=0;__i__<(size);__i__++) (ptr)[__i__]=(val)
#define arrprnt(name,arr,size) {\
fprintf(stderr,"%s={",(name));\
for(unsigned __i__=0;__i__<(size);__i__++) fprintf(stderr,"%lg,",(arr)[__i__]);\
fprintf(stderr,"}\n");}
#define val(n) val[(n)]
#define doff(d) (*doff)[(d)]
#define dval(d,i) (*dval)[offset2((d),(i),N)]
#define col(n) col[(n)]
#define row(n) row[(n)]

#define did(d,i,j) {\
(n)=(j)-(i)+(N-1);\
if(dset[(n)]<0)dset[(n)]=D;\
(d)=dset[(n)];\
}

int coo_dia_insp(const double* val, const unsigned M, const unsigned* col, const unsigned* row, double** dval, int** doff);
inline int coo_dia_insp(const double* val, const unsigned M, const unsigned* col, const unsigned* row, double** dval, int** doff) {
    int t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15;
    int N, D = 0;
    int n, d;
    int* dset;

// inspN+inspD1+inspD2+inspD3+inspD4
#undef s0
#define s0() N=row(M-1)+1
#undef s1
#define s1(n,i,j) did(d,(i),(j))
#undef s2
#define s2(n,i,j) if (d >= D) D=d+1
#undef s3
#define s3(n,i,j) doff(d)=(j)-(i)
#undef s4
#define s4(n,i,j) dval(d,(i))=val((n))

s0();

*doff = (int*) malloc(2*N * sizeof(int));
*dval = (double*) calloc(N*N, sizeof(double));
dset = (int*) malloc((2*N-1) * sizeof(int));
memset(dset, -1, (2*N-1) * sizeof(int));

for(t2 = 0; t2 <= M-1; t2++) {
  t4=row(t2);
  t6=col(t2);
  s1(t2,t4,t6);
  s2(t2,t4,t6);
  s3(t2,t4,t6);
  s4(t2,t4,t6);
}

*doff = (int*) realloc(*doff, D * sizeof(int));
*dval = (double*) realloc(*dval, D * N * sizeof(double));

    return (D);
}    // coo_dia_insp

#undef min
#undef max
#undef abs
#undef floord
#undef offset2
#undef offset3
#undef offset4
#undef arrinit
#undef arrprnt
#undef val
#undef dval
#undef col
#undef row
#undef doff
