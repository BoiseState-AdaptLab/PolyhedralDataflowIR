.TH "iegenlib::VisitorGetString" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
iegenlib::VisitorGetString
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBVisitor\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVisitorGetString\fP ()"
.br
.ti -1c
.RI "void \fBpreVisitExp\fP (\fBiegenlib::Exp\fP *\fBe\fP)"
.br
.ti -1c
.RI "void \fBpreVisitConjunction\fP (\fBiegenlib::Conjunction\fP *\fBc\fP)"
.br
.ti -1c
.RI "void \fBpostVisitConjunction\fP (\fBiegenlib::Conjunction\fP *\fBc\fP)"
.br
.ti -1c
.RI "void \fBpreVisitSet\fP (\fBiegenlib::Set\fP *s)"
.br
.RI "Indicate, we are traversing a \fBSet\fP\&. "
.ti -1c
.RI "void \fBpreVisitRelation\fP (\fBiegenlib::Relation\fP *r)"
.br
.RI "Indicate, we are traversing a \fBRelation\fP\&. "
.ti -1c
.RI "string \fBgetString\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Vistor Class used in getString to getting a string representation of a \fBSet\fP or \fBRelation\fP 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "iegenlib::VisitorGetString::VisitorGetString ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "string iegenlib::VisitorGetString::getString ()\fC [inline]\fP"

.SS "void iegenlib::VisitorGetString::postVisitConjunction (\fBiegenlib::Conjunction\fP * c)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBVisitor\fP\&.
.SS "void iegenlib::VisitorGetString::preVisitConjunction (\fBiegenlib::Conjunction\fP * c)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBVisitor\fP\&.
.SS "void iegenlib::VisitorGetString::preVisitExp (\fBiegenlib::Exp\fP * e)\fC [inline]\fP, \fC [virtual]\fP"
We build our string one expression at a time before visiting each expression\&. Note, we cannot build the expression at term granularity, because at that level would not know which term to put at which side of an inequality\&. 
.PP
Reimplemented from \fBVisitor\fP\&.
.SS "void iegenlib::VisitorGetString::preVisitRelation (\fBiegenlib::Relation\fP * r)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Indicate, we are traversing a \fBRelation\fP\&. 
.PP
Reimplemented from \fBVisitor\fP\&.
.SS "void iegenlib::VisitorGetString::preVisitSet (\fBiegenlib::Set\fP * s)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Indicate, we are traversing a \fBSet\fP\&. 
.PP
Reimplemented from \fBVisitor\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
