.TH "lib/chill/cudaize_codegen_v2_helper_funcs.cc" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/chill/cudaize_codegen_v2_helper_funcs.cc
.SH SYNOPSIS
.br
.PP
\fC#include 'loop_cuda_chill\&.hh'\fP
.br
\fC#include <code_gen/CG_stringBuilder\&.h>\fP
.br
\fC#include <omega/code_gen/include/codegen\&.h>\fP
.br
\fC#include <code_gen/CG_utils\&.h>\fP
.br
\fC#include <code_gen/CG_outputRepr\&.h>\fP
.br
\fC#include 'loop\&.hh'\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include 'omegatools\&.hh'\fP
.br
\fC#include 'ir_cudachill\&.hh'\fP
.br
\fC#include 'chill_error\&.hh'\fP
.br
\fC#include <vector>\fP
.br
\fC#include <strings\&.h>\fP
.br

.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBio_dir\fP { \fBio_dir::write_only\fP = 1, \fBio_dir::read_only\fP = 2, \fBio_dir::read_write\fP = write_only | read_only }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBget_io_refs\fP (\fBconst\fP \fBIR_Code\fP *ir, \fBconst\fP \fBstd::map\fP< std::string, int > &array_dims, \fBconst\fP std::vector< \fBchillAST_ArraySubscriptExpr\fP * > &refs, std::vector< \fBCudaIOVardef\fP > &arrayVars) noexcept"
.br
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBio_dir\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIwrite_only \fP\fP
.TP
\fB\fIread_only \fP\fP
.TP
\fB\fIread_write \fP\fP
.SH "Function Documentation"
.PP 
.SS "void get_io_refs (\fBconst\fP \fBIR_Code\fP * ir, \fBconst\fP \fBstd::map\fP< std::string, int > & array_dims, \fBconst\fP std::vector< \fBchillAST_ArraySubscriptExpr\fP * > & refs, std::vector< \fBCudaIOVardef\fP > & arrayVars)\fC [noexcept]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
