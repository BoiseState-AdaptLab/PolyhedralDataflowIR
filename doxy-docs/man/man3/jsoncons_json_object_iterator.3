.TH "jsoncons::json_object_iterator< IteratorT, NonConstIteratorT >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jsoncons::json_object_iterator< IteratorT, NonConstIteratorT >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json_structures\&.hpp>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef IteratorT \fBiterator\fP"
.br
.ti -1c
.RI "typedef std::iterator_traits< IteratorT >::\fBvalue_type\fP \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef std::iterator_traits< IteratorT >::\fBdifference_type\fP \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef std::iterator_traits< IteratorT >::\fBpointer\fP \fBpointer\fP"
.br
.ti -1c
.RI "typedef std::iterator_traits< IteratorT >::\fBreference\fP \fBreference\fP"
.br
.ti -1c
.RI "typedef std::bidirectional_iterator_tag \fBiterator_category\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBjson_object_iterator\fP (bool \fBempty\fP=false)"
.br
.ti -1c
.RI "\fBjson_object_iterator\fP (\fBiterator\fP it)"
.br
.ti -1c
.RI "\fBjson_object_iterator\fP (\fBconst\fP \fBjson_object_iterator\fP< NonConstIteratorT, NonConstIteratorT > &it)"
.br
.ti -1c
.RI "\fBjson_object_iterator\fP & \fBoperator=\fP (\fBjson_object_iterator\fP \fBrhs\fP)"
.br
.ti -1c
.RI "\fBjson_object_iterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBjson_object_iterator\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBjson_object_iterator\fP & \fBoperator\-\-\fP ()"
.br
.ti -1c
.RI "\fBjson_object_iterator\fP \fBoperator\-\-\fP (int)"
.br
.ti -1c
.RI "\fBreference\fP \fBoperator*\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBpointer\fP \fBoperator\->\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBempty\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBiterator\fP \fBget\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBempty_\fP"
.br
.ti -1c
.RI "IteratorT \fBit_\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "bool \fBoperator==\fP (\fBconst\fP \fBjson_object_iterator\fP &it1, \fBconst\fP \fBjson_object_iterator\fP &it2)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBconst\fP \fBjson_object_iterator\fP &it1, \fBconst\fP \fBjson_object_iterator\fP &it2)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBjson_object_iterator\fP &\fBlhs\fP, \fBjson_object_iterator\fP &\fBrhs\fP)"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<class IteratorT , class NonConstIteratorT > typedef std::iterator_traits<IteratorT>::\fBdifference_type\fP \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::\fBdifference_type\fP"

.SS "template<class IteratorT , class NonConstIteratorT > typedef IteratorT \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::\fBiterator\fP"

.SS "template<class IteratorT , class NonConstIteratorT > typedef std::bidirectional_iterator_tag \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::\fBiterator_category\fP"

.SS "template<class IteratorT , class NonConstIteratorT > typedef std::iterator_traits<IteratorT>::\fBpointer\fP \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::\fBpointer\fP"

.SS "template<class IteratorT , class NonConstIteratorT > typedef std::iterator_traits<IteratorT>::\fBreference\fP \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::\fBreference\fP"

.SS "template<class IteratorT , class NonConstIteratorT > typedef std::iterator_traits<IteratorT>::\fBvalue_type\fP \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::\fBvalue_type\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class IteratorT , class NonConstIteratorT > \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::\fBjson_object_iterator\fP (bool empty = \fCfalse\fP)\fC [inline]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::\fBjson_object_iterator\fP (\fBiterator\fP it)\fC [inline]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::\fBjson_object_iterator\fP (\fBconst\fP \fBjson_object_iterator\fP< NonConstIteratorT, NonConstIteratorT > & it)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<class IteratorT , class NonConstIteratorT > bool \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::empty () const\fC [inline]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > \fBiterator\fP \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::get ()\fC [inline]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > \fBreference\fP \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::operator* () const\fC [inline]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > \fBjson_object_iterator\fP& \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::operator++ ()\fC [inline]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > \fBjson_object_iterator\fP \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::operator++ (int)\fC [inline]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > \fBjson_object_iterator\fP& \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::operator\-\- ()\fC [inline]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > \fBjson_object_iterator\fP \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::operator\-\- (int)\fC [inline]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > \fBpointer\fP \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::operator\-> () const\fC [inline]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > \fBjson_object_iterator\fP& \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::operator= (\fBjson_object_iterator\fP< IteratorT, NonConstIteratorT > rhs)\fC [inline]\fP"

.SH "Friends And Related Function Documentation"
.PP 
.SS "template<class IteratorT , class NonConstIteratorT > bool operator!= (\fBconst\fP \fBjson_object_iterator\fP< IteratorT, NonConstIteratorT > & it1, \fBconst\fP \fBjson_object_iterator\fP< IteratorT, NonConstIteratorT > & it2)\fC [friend]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > bool operator== (\fBconst\fP \fBjson_object_iterator\fP< IteratorT, NonConstIteratorT > & it1, \fBconst\fP \fBjson_object_iterator\fP< IteratorT, NonConstIteratorT > & it2)\fC [friend]\fP"

.SS "template<class IteratorT , class NonConstIteratorT > void swap (\fBjson_object_iterator\fP< IteratorT, NonConstIteratorT > & lhs, \fBjson_object_iterator\fP< IteratorT, NonConstIteratorT > & rhs)\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<class IteratorT , class NonConstIteratorT > bool \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::empty_"

.SS "template<class IteratorT , class NonConstIteratorT > IteratorT \fBjsoncons::json_object_iterator\fP< IteratorT, NonConstIteratorT >::it_"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
