.TH "lib/iegenlib/src/set_relation/expression_test.cc" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/iegenlib/src/set_relation/expression_test.cc \- Test for the Expression classes and Term classes\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'expression\&.h'\fP
.br
\fC#include 'set_relation\&.h'\fP
.br
\fC#include 'SubMap\&.h'\fP
.br
\fC#include '\&.\&./util/util\&.h'\fP
.br
\fC#include <gtest/gtest\&.h>\fP
.br
\fC#include <utility>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <fstream>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBExpTest\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, TermMethods)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, VarTermMethods)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, TupleVarTermMethods)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, UFCallTermMethods)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, ExpMethods)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, ExposeUFCallNotElimBug)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, ExpMethodsAdvanced)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, ExpSubstitute)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, ExpSubstituteSwap)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, ExpSolving)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, ExpDependsOn)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, ExpTermCompare)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, JIRA_85)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, ExpRemapLocs)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, ExpIsConst)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, PrettyPrintString)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, ToDotString)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, SymbolIterator)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, OperatorLessThan)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, OperatorEqualsExp)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, UFCallTermWithIndexing)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, InvertFuncToExposeFactorFuncInverse)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, \fBTupleExpTerm\fP)"
.br
.ti -1c
.RI "\fBTEST_F\fP (\fBExpTest\fP, HasIndexedUFCall)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Test for the Expression classes and Term classes\&. 

This file is to test all of the Expression and Term classes, along with the related classes: EqExp, IneqExp, UFCallTerm, VarTerm, and TupleVarTerm\&.
.PP
\fBAuthors\fP
.RS 4
Michelle Strout and Joe Strout
.RE
.PP
Copyright (c) 2012, Colorado State University 
.br
 Copyright (c) 2015, University of Arizona 
.br
 All rights reserved\&. 
.br
 See \&.\&./\&.\&./COPYING for details\&. 
.br
 
.SH "Function Documentation"
.PP 
.SS "TEST_F (\fBExpTest\fP, ExpDependsOn)"

.SS "TEST_F (\fBExpTest\fP, ExpIsConst)"

.SS "TEST_F (\fBExpTest\fP, ExpMethods)"

.SS "TEST_F (\fBExpTest\fP, ExpMethodsAdvanced)"

.SS "TEST_F (\fBExpTest\fP, ExposeUFCallNotElimBug)"

.SS "TEST_F (\fBExpTest\fP, ExpRemapLocs)"

.SS "TEST_F (\fBExpTest\fP, ExpSolving)"

.SS "TEST_F (\fBExpTest\fP, ExpSubstitute)"

.SS "TEST_F (\fBExpTest\fP, ExpSubstituteSwap)"

.SS "TEST_F (\fBExpTest\fP, ExpTermCompare)"

.SS "TEST_F (\fBExpTest\fP, HasIndexedUFCall)"

.SS "TEST_F (\fBExpTest\fP, InvertFuncToExposeFactorFuncInverse)"

.SS "TEST_F (\fBExpTest\fP, JIRA_85)"

.SS "TEST_F (\fBExpTest\fP, OperatorEqualsExp)"

.SS "TEST_F (\fBExpTest\fP, OperatorLessThan)"

.SS "TEST_F (\fBExpTest\fP, PrettyPrintString)"

.SS "TEST_F (\fBExpTest\fP, SymbolIterator)"

.SS "TEST_F (\fBExpTest\fP, TermMethods)"

.SS "TEST_F (\fBExpTest\fP, ToDotString)"

.SS "TEST_F (\fBExpTest\fP, \fBTupleExpTerm\fP)"

.SS "TEST_F (\fBExpTest\fP, TupleVarTermMethods)"

.SS "TEST_F (\fBExpTest\fP, UFCallTermMethods)"

.SS "TEST_F (\fBExpTest\fP, UFCallTermWithIndexing)"

.SS "TEST_F (\fBExpTest\fP, VarTermMethods)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
