.TH "lib/isl/include/isl/deprecated/polynomial_int.h" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/isl/include/isl/deprecated/polynomial_int.h
.SH SYNOPSIS
.br
.PP
\fC#include <isl/deprecated/int\&.h>\fP
.br
\fC#include <isl/polynomial\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fB__isl_give\fP \fBisl_qpolynomial\fP * \fBisl_qpolynomial_rat_cst_on_domain\fP (\fB__isl_take\fP \fBisl_space\fP *space, \fBconst\fP \fBisl_int\fP \fBn\fP, \fBconst\fP \fBisl_int\fP d)"
.br
.ti -1c
.RI "int \fBisl_qpolynomial_is_cst\fP (\fB__isl_keep\fP \fBisl_qpolynomial\fP *qp, \fBisl_int\fP *\fBn\fP, \fBisl_int\fP *d)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_qpolynomial\fP * \fBisl_qpolynomial_scale\fP (\fB__isl_take\fP \fBisl_qpolynomial\fP *qp, \fBisl_int\fP v)"
.br
.ti -1c
.RI "void \fBisl_term_get_num\fP (\fB__isl_keep\fP \fBisl_term\fP *term, \fBisl_int\fP *\fBn\fP)"
.br
.ti -1c
.RI "void \fBisl_term_get_den\fP (\fB__isl_keep\fP \fBisl_term\fP *term, \fBisl_int\fP *d)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_qpolynomial_fold\fP * \fBisl_qpolynomial_fold_scale\fP (\fB__isl_take\fP \fBisl_qpolynomial_fold\fP *fold, \fBisl_int\fP v)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_pw_qpolynomial_fold\fP * \fBisl_pw_qpolynomial_fold_fix_dim\fP (\fB__isl_take\fP \fBisl_pw_qpolynomial_fold\fP *pwf, enum \fBisl_dim_type\fP type, unsigned \fBn\fP, \fBisl_int\fP v)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fB__isl_give\fP \fBisl_pw_qpolynomial_fold\fP* isl_pw_qpolynomial_fold_fix_dim (\fB__isl_take\fP \fBisl_pw_qpolynomial_fold\fP * pwf, enum \fBisl_dim_type\fP type, unsigned n, \fBisl_int\fP v)"

.SS "\fB__isl_give\fP \fBisl_qpolynomial_fold\fP* isl_qpolynomial_fold_scale (\fB__isl_take\fP \fBisl_qpolynomial_fold\fP * fold, \fBisl_int\fP v)"

.SS "int isl_qpolynomial_is_cst (\fB__isl_keep\fP \fBisl_qpolynomial\fP * qp, \fBisl_int\fP * n, \fBisl_int\fP * d)"

.SS "\fB__isl_give\fP \fBisl_qpolynomial\fP* isl_qpolynomial_rat_cst_on_domain (\fB__isl_take\fP \fBisl_space\fP * space, \fBconst\fP \fBisl_int\fP n, \fBconst\fP \fBisl_int\fP d)"

.SS "\fB__isl_give\fP \fBisl_qpolynomial\fP* isl_qpolynomial_scale (\fB__isl_take\fP \fBisl_qpolynomial\fP * qp, \fBisl_int\fP v)"

.SS "void isl_term_get_den (\fB__isl_keep\fP \fBisl_term\fP * term, \fBisl_int\fP * d)"

.SS "void isl_term_get_num (\fB__isl_keep\fP \fBisl_term\fP * term, \fBisl_int\fP * n)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
