.TH "jsoncons::name_value_pair< StringT, ValueT >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jsoncons::name_value_pair< StringT, ValueT >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json_structures\&.hpp>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef StringT \fBstring_type\fP"
.br
.ti -1c
.RI "typedef StringT::value_type \fBchar_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBname_value_pair\fP ()"
.br
.ti -1c
.RI "\fBname_value_pair\fP (\fBconst\fP \fBstring_type\fP &\fBname\fP)"
.br
.ti -1c
.RI "\fBname_value_pair\fP (\fBstring_type\fP &&\fBname\fP)"
.br
.ti -1c
.RI "\fBname_value_pair\fP (\fBconst\fP \fBstring_type\fP &\fBname\fP, \fBconst\fP ValueT &\fBval\fP)"
.br
.ti -1c
.RI "\fBname_value_pair\fP (\fBstring_type\fP &&\fBname\fP, \fBconst\fP ValueT &\fBval\fP)"
.br
.ti -1c
.RI "\fBname_value_pair\fP (\fBconst\fP \fBstring_type\fP &\fBname\fP, ValueT &&\fBval\fP)"
.br
.ti -1c
.RI "\fBname_value_pair\fP (\fBstring_type\fP &&\fBname\fP, ValueT &&\fBval\fP)"
.br
.ti -1c
.RI "\fBname_value_pair\fP (\fBconst\fP \fBname_value_pair\fP &member)"
.br
.ti -1c
.RI "\fBname_value_pair\fP (\fBname_value_pair\fP &&member)"
.br
.ti -1c
.RI "\fBconst\fP \fBstring_type\fP & \fBname\fP () \fBconst\fP"
.br
.ti -1c
.RI "ValueT & \fBvalue\fP ()"
.br
.ti -1c
.RI "\fBconst\fP ValueT & \fBvalue\fP () \fBconst\fP"
.br
.ti -1c
.RI "void \fBvalue\fP (\fBconst\fP ValueT &value)"
.br
.ti -1c
.RI "void \fBvalue\fP (ValueT &&value)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBname_value_pair\fP &member)"
.br
.ti -1c
.RI "\fBname_value_pair\fP & \fBoperator=\fP (\fBconst\fP \fBname_value_pair\fP &member)"
.br
.ti -1c
.RI "\fBname_value_pair\fP & \fBoperator=\fP (\fBname_value_pair\fP &&member)"
.br
.ti -1c
.RI "void \fBshrink_to_fit\fP ()"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<class StringT , class ValueT > typedef StringT::value_type \fBjsoncons::name_value_pair\fP< StringT, ValueT >::\fBchar_type\fP"

.SS "template<class StringT , class ValueT > typedef StringT \fBjsoncons::name_value_pair\fP< StringT, ValueT >::\fBstring_type\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class StringT , class ValueT > \fBjsoncons::name_value_pair\fP< StringT, ValueT >::\fBname_value_pair\fP ()\fC [inline]\fP"

.SS "template<class StringT , class ValueT > \fBjsoncons::name_value_pair\fP< StringT, ValueT >::\fBname_value_pair\fP (\fBconst\fP \fBstring_type\fP & name)\fC [inline]\fP"

.SS "template<class StringT , class ValueT > \fBjsoncons::name_value_pair\fP< StringT, ValueT >::\fBname_value_pair\fP (\fBstring_type\fP && name)\fC [inline]\fP"

.SS "template<class StringT , class ValueT > \fBjsoncons::name_value_pair\fP< StringT, ValueT >::\fBname_value_pair\fP (\fBconst\fP \fBstring_type\fP & name, \fBconst\fP ValueT & val)\fC [inline]\fP"

.SS "template<class StringT , class ValueT > \fBjsoncons::name_value_pair\fP< StringT, ValueT >::\fBname_value_pair\fP (\fBstring_type\fP && name, \fBconst\fP ValueT & val)\fC [inline]\fP"

.SS "template<class StringT , class ValueT > \fBjsoncons::name_value_pair\fP< StringT, ValueT >::\fBname_value_pair\fP (\fBconst\fP \fBstring_type\fP & name, ValueT && val)\fC [inline]\fP"

.SS "template<class StringT , class ValueT > \fBjsoncons::name_value_pair\fP< StringT, ValueT >::\fBname_value_pair\fP (\fBstring_type\fP && name, ValueT && val)\fC [inline]\fP"

.SS "template<class StringT , class ValueT > \fBjsoncons::name_value_pair\fP< StringT, ValueT >::\fBname_value_pair\fP (\fBconst\fP \fBname_value_pair\fP< StringT, ValueT > & member)\fC [inline]\fP"

.SS "template<class StringT , class ValueT > \fBjsoncons::name_value_pair\fP< StringT, ValueT >::\fBname_value_pair\fP (\fBname_value_pair\fP< StringT, ValueT > && member)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<class StringT , class ValueT > \fBconst\fP \fBstring_type\fP& \fBjsoncons::name_value_pair\fP< StringT, ValueT >::name () const\fC [inline]\fP"

.SS "template<class StringT , class ValueT > \fBname_value_pair\fP& \fBjsoncons::name_value_pair\fP< StringT, ValueT >::operator= (\fBconst\fP \fBname_value_pair\fP< StringT, ValueT > & member)\fC [inline]\fP"

.SS "template<class StringT , class ValueT > \fBname_value_pair\fP& \fBjsoncons::name_value_pair\fP< StringT, ValueT >::operator= (\fBname_value_pair\fP< StringT, ValueT > && member)\fC [inline]\fP"

.SS "template<class StringT , class ValueT > void \fBjsoncons::name_value_pair\fP< StringT, ValueT >::shrink_to_fit ()\fC [inline]\fP"

.SS "template<class StringT , class ValueT > void \fBjsoncons::name_value_pair\fP< StringT, ValueT >::swap (\fBname_value_pair\fP< StringT, ValueT > & member)\fC [inline]\fP"

.SS "template<class StringT , class ValueT > ValueT& \fBjsoncons::name_value_pair\fP< StringT, ValueT >::value ()\fC [inline]\fP"

.SS "template<class StringT , class ValueT > \fBconst\fP ValueT& \fBjsoncons::name_value_pair\fP< StringT, ValueT >::value () const\fC [inline]\fP"

.SS "template<class StringT , class ValueT > void \fBjsoncons::name_value_pair\fP< StringT, ValueT >::value (\fBconst\fP ValueT & value)\fC [inline]\fP"

.SS "template<class StringT , class ValueT > void \fBjsoncons::name_value_pair\fP< StringT, ValueT >::value (ValueT && value)\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
