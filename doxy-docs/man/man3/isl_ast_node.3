.TH "isl_ast_node" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
isl_ast_node
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <isl_ast_private\&.h>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "int \fBref\fP"
.br
.ti -1c
.RI "\fBisl_ctx\fP * \fBctx\fP"
.br
.ti -1c
.RI "enum \fBisl_ast_node_type\fP \fBtype\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      isl_ast_node_list * \fBchildren\fP"
.br
.ti -1c
.RI "   } \fBb\fP"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      \fBisl_ast_expr\fP * \fBguard\fP"
.br
.ti -1c
.RI "      \fBisl_ast_node\fP * \fBthen\fP"
.br
.ti -1c
.RI "      \fBisl_ast_node\fP * \fBelse_node\fP"
.br
.ti -1c
.RI "   } \fBi\fP"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      unsigned \fBdegenerate\fP: 1"
.br
.ti -1c
.RI "      \fBisl_ast_expr\fP * \fBiterator\fP"
.br
.ti -1c
.RI "      \fBisl_ast_expr\fP * \fBinit\fP"
.br
.ti -1c
.RI "      \fBisl_ast_expr\fP * \fBcond\fP"
.br
.ti -1c
.RI "      \fBisl_ast_expr\fP * \fBinc\fP"
.br
.ti -1c
.RI "      \fBisl_ast_node\fP * \fBbody\fP"
.br
.ti -1c
.RI "   } \fBf\fP"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      \fBisl_ast_expr\fP * \fBexpr\fP"
.br
.ti -1c
.RI "   } \fBe\fP"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      \fBisl_id\fP * \fBmark\fP"
.br
.ti -1c
.RI "      \fBisl_ast_node\fP * \fBnode\fP"
.br
.ti -1c
.RI "   } \fBm\fP"
.br
.ti -1c
.RI "} \fBu\fP"
.br
.ti -1c
.RI "\fBisl_id\fP * \fBannotation\fP"
.br
.in -1c
.SH "Member Data Documentation"
.PP 
.SS "\fBisl_id\fP* isl_ast_node::annotation"

.SS "struct { \&.\&.\&. }  isl_ast_node::b"

.SS "\fBisl_ast_node\fP* isl_ast_node::body"

.SS "isl_ast_node_list* isl_ast_node::children"

.SS "\fBisl_ast_expr\fP* isl_ast_node::cond"

.SS "\fBisl_ctx\fP* isl_ast_node::ctx"

.SS "unsigned isl_ast_node::degenerate"

.SS "struct { \&.\&.\&. }  isl_ast_node::e"

.SS "\fBisl_ast_node\fP* isl_ast_node::else_node"

.SS "\fBisl_ast_expr\fP* isl_ast_node::expr"

.SS "struct { \&.\&.\&. }  isl_ast_node::f"

.SS "\fBisl_ast_expr\fP* isl_ast_node::guard"

.SS "struct { \&.\&.\&. }  isl_ast_node::i"

.SS "\fBisl_ast_expr\fP* isl_ast_node::inc"

.SS "\fBisl_ast_expr\fP* isl_ast_node::init"

.SS "\fBisl_ast_expr\fP* isl_ast_node::iterator"

.SS "struct { \&.\&.\&. }  isl_ast_node::m"

.SS "\fBisl_id\fP* isl_ast_node::mark"

.SS "\fBisl_ast_node\fP* isl_ast_node::node"

.SS "int isl_ast_node::ref"

.SS "\fBisl_ast_node\fP* isl_ast_node::then"

.SS "enum \fBisl_ast_node_type\fP isl_ast_node::type"

.SS "union { \&.\&.\&. }  isl_ast_node::u"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
