.TH "memory_mapping" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
memory_mapping
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <mem_mapping_utils\&.hh>\fP
.PP
Inherited by \fBconstant_memory_mapping\fP, and \fBtexture_memory_mapping\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmemory_mapping\fP ()"
.br
.ti -1c
.RI "\fBmemory_mapping\fP (bool used, \fBconst\fP char *array_name)"
.br
.ti -1c
.RI "void \fBadd\fP (\fBconst\fP char *array_name)"
.br
.ti -1c
.RI "bool \fBis_mem_used\fP ()"
.br
.ti -1c
.RI "bool \fBis_array_mapped\fP (\fBconst\fP char *array_name)"
.br
.ti -1c
.RI "void \fBset_mapped_symbol\fP (\fBconst\fP char *array_name, SgVariableSymbol *sym)"
.br
.ti -1c
.RI "void \fBset_vardef\fP (\fBconst\fP char *array_name, \fBCudaIOVardef\fP *vardef)"
.br
.ti -1c
.RI "SgVarRefExp * \fBget_mapped_symbol_exp\fP (\fBconst\fP char *array_name)"
.br
.ti -1c
.RI "\fBCudaIOVardef\fP * \fBget_vardef\fP (\fBconst\fP char *vardef_name)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "memory_mapping::memory_mapping ()"

.SS "memory_mapping::memory_mapping (bool used, \fBconst\fP char * array_name)"

.SH "Member Function Documentation"
.PP 
.SS "void memory_mapping::add (\fBconst\fP char * array_name)"

.SS "SgVarRefExp* memory_mapping::get_mapped_symbol_exp (\fBconst\fP char * array_name)"

.SS "\fBCudaIOVardef\fP* memory_mapping::get_vardef (\fBconst\fP char * vardef_name)"

.SS "bool memory_mapping::is_array_mapped (\fBconst\fP char * array_name)"

.SS "bool memory_mapping::is_mem_used ()"

.SS "void memory_mapping::set_mapped_symbol (\fBconst\fP char * array_name, SgVariableSymbol * sym)"

.SS "void memory_mapping::set_vardef (\fBconst\fP char * array_name, \fBCudaIOVardef\fP * vardef)"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
