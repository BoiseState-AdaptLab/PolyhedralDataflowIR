.TH "lib/chill/dep.hh" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/chill/dep.hh \- Data dependence vector and graph\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <omega\&.h>\fP
.br
\fC#include 'graph\&.hh'\fP
.br
\fC#include 'ir_code\&.hh'\fP
.br
\fC#include 'chill_error\&.hh'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBDependenceVector\fP"
.br
.ti -1c
.RI "class \fBDependenceGraph\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef std::vector< \fBDependenceVector\fP > \fBDependenceList\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBDependenceType\fP { \fBDEP_W2R\fP, \fBDEP_R2W\fP, \fBDEP_W2W\fP, \fBDEP_R2R\fP, \fBDEP_CONTROL\fP, \fBDEP_UNKNOWN\fP }"
.br
.in -1c
.SH "Detailed Description"
.PP 
Data dependence vector and graph\&. 

All dependence vectors are normalized, i\&.e\&., the first non-zero distance must be positve\&. Thus the correct dependence meaning can be given based on source/destination pair's read/write type\&. Suppose for a dependence vector 1, 0~5, -3), we want to permute the first and the second dimension, the result would be two dependence vectors (0, 1, -3) and (1~5, 1, -3)\&. All operations on dependence vectors are non-destructive, i\&.e\&., new dependence vectors are returned\&. 
.SH "Typedef Documentation"
.PP 
.SS "typedef std::vector<\fBDependenceVector\fP> \fBDependenceList\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBDependenceType\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIDEP_W2R \fP\fP
.TP
\fB\fIDEP_R2W \fP\fP
.TP
\fB\fIDEP_W2W \fP\fP
.TP
\fB\fIDEP_R2R \fP\fP
.TP
\fB\fIDEP_CONTROL \fP\fP
.TP
\fB\fIDEP_UNKNOWN \fP\fP
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
