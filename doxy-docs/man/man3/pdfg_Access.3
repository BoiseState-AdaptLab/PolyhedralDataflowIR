.TH "pdfg::Access" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pdfg::Access
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <GraphIL\&.hpp>\fP
.PP
Inherits \fBpdfg::Expr\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAccess\fP (\fBconst\fP string &\fBspace\fP, \fBconst\fP \fBTuple\fP &iters, char \fBrefchar\fP='(', \fBconst\fP vector< int > &\fBoffsets\fP={})"
.br
.ti -1c
.RI "\fBAccess\fP (\fBconst\fP string &\fBspace\fP, initializer_list< \fBExpr\fP > \fBtuple\fP, char \fBrefchar\fP='(', \fBconst\fP vector< int > &\fBoffsets\fP={})"
.br
.ti -1c
.RI "\fBAccess\fP (\fBconst\fP string &\fBspace\fP, \fBconst\fP vector< \fBExpr\fP > &\fBtuple\fP, char \fBrefchar\fP='(', \fBconst\fP vector< int > &\fBoffsets\fP={})"
.br
.ti -1c
.RI "\fBAccess\fP (\fBconst\fP \fBAccess\fP &other)"
.br
.ti -1c
.RI "\fBAccess\fP & \fBoperator=\fP (\fBconst\fP \fBExpr\fP &expr) override"
.br
.ti -1c
.RI "\fBMath\fP \fBoperator=\fP (\fBconst\fP \fBMath\fP &math)"
.br
.ti -1c
.RI "\fBconst\fP string & \fBspace\fP () \fBconst\fP"
.br
.ti -1c
.RI "char \fBrefchar\fP () \fBconst\fP"
.br
.ti -1c
.RI "vector< \fBExpr\fP > \fBtuple\fP () \fBconst\fP"
.br
.ti -1c
.RI "vector< int > \fBoffsets\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBmap\fP< string, int > \fBoffset_map\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBhas_iters\fP () \fBconst\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBAccess\fP \fBfrom_str\fP (\fBconst\fP string &\fBtext\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBinit\fP (initializer_list< \fBExpr\fP > \fBtuple\fP, char \fBrefchar\fP='(', \fBconst\fP vector< int > &\fBoffsets\fP={})"
.br
.ti -1c
.RI "void \fBinit\fP (\fBconst\fP vector< \fBExpr\fP > &\fBtuple\fP, char \fBrefchar\fP='(', \fBconst\fP vector< int > &\fBoffsets\fP={})"
.br
.ti -1c
.RI "void \fBcopy\fP (\fBconst\fP \fBAccess\fP &other)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "string \fB_space\fP"
.br
.ti -1c
.RI "char \fB_refchar\fP"
.br
.ti -1c
.RI "vector< \fBExpr\fP > \fB_tuple\fP"
.br
.ti -1c
.RI "vector< int > \fB_offsets\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "pdfg::Access::Access (\fBconst\fP string & space, \fBconst\fP \fBTuple\fP & iters, char refchar = \fC'('\fP, \fBconst\fP vector< int > & offsets = \fC{}\fP)\fC [inline]\fP"

.SS "pdfg::Access::Access (\fBconst\fP string & space, initializer_list< \fBExpr\fP > tuple, char refchar = \fC'('\fP, \fBconst\fP vector< int > & offsets = \fC{}\fP)\fC [inline]\fP"

.SS "pdfg::Access::Access (\fBconst\fP string & space, \fBconst\fP vector< \fBExpr\fP > & tuple, char refchar = \fC'('\fP, \fBconst\fP vector< int > & offsets = \fC{}\fP)\fC [inline]\fP"

.SS "pdfg::Access::Access (\fBconst\fP \fBAccess\fP & other)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void pdfg::Access::copy (\fBconst\fP \fBAccess\fP & other)\fC [inline]\fP, \fC [protected]\fP"

.SS "static \fBAccess\fP pdfg::Access::from_str (\fBconst\fP string & text)\fC [inline]\fP, \fC [static]\fP"

.SS "bool pdfg::Access::has_iters () const\fC [inline]\fP"

.SS "void pdfg::Access::init (\fBconst\fP vector< \fBExpr\fP > & tuple, char refchar = \fC'('\fP, \fBconst\fP vector< int > & offsets = \fC{}\fP)\fC [inline]\fP, \fC [protected]\fP"

.SS "void pdfg::Access::init (initializer_list< \fBExpr\fP > tuple, char refchar = \fC'('\fP, \fBconst\fP vector< int > & offsets = \fC{}\fP)\fC [inline]\fP, \fC [protected]\fP"

.SS "\fBmap\fP<string, int> pdfg::Access::offset_map () const\fC [inline]\fP"

.SS "vector<int> pdfg::Access::offsets () const\fC [inline]\fP"

.SS "\fBAccess\fP& pdfg::Access::operator= (\fBconst\fP \fBExpr\fP & expr)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBpdfg::Expr\fP\&.
.SS "\fBMath\fP pdfg::Access::operator= (\fBconst\fP \fBMath\fP & math)\fC [inline]\fP"

.SS "char pdfg::Access::refchar () const\fC [inline]\fP"

.SS "\fBconst\fP string& pdfg::Access::space () const\fC [inline]\fP"

.SS "vector<\fBExpr\fP> pdfg::Access::tuple () const\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "vector<int> pdfg::Access::_offsets\fC [protected]\fP"

.SS "char pdfg::Access::_refchar\fC [protected]\fP"

.SS "string pdfg::Access::_space\fC [protected]\fP"

.SS "vector<\fBExpr\fP> pdfg::Access::_tuple\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
