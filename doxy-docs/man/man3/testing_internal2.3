.TH "testing::internal2" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
testing::internal2
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBTypeWithoutFormatter\fP"
.br
.ti -1c
.RI "class \fBTypeWithoutFormatter< T, kConvertibleToInteger >\fP"
.br
.ti -1c
.RI "class \fBTypeWithoutFormatter< T, kProtobuf >\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBTypeKind\fP { \fBkProtobuf\fP, \fBkConvertibleToInteger\fP, \fBkOtherType\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBGTEST_API_\fP void \fBPrintBytesInObjectTo\fP (\fBconst\fP unsigned char *obj_bytes, size_t \fBcount\fP, ::std::ostream *os)"
.br
.ti -1c
.RI "template<typename Char , typename CharTraits , typename T > ::std::basic_ostream< Char, CharTraits > & \fBoperator<<\fP (::std::basic_ostream< Char, CharTraits > &os, \fBconst\fP \fBT\fP &\fBx\fP)"
.br
.ti -1c
.RI "void \fBPrintBytesInObjectTo\fP (\fBconst\fP unsigned char *obj_bytes, size_t \fBcount\fP, ostream *os)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBconst\fP size_t \fBkProtobufOneLinerMaxLength\fP = 50"
.br
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBtesting::internal2::TypeKind\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIkProtobuf \fP\fP
.TP
\fB\fIkConvertibleToInteger \fP\fP
.TP
\fB\fIkOtherType \fP\fP
.SH "Function Documentation"
.PP 
.SS "template<typename Char , typename CharTraits , typename T > ::std::basic_ostream<Char, CharTraits>& testing::internal2::operator<< (::std::basic_ostream< Char, CharTraits > & os, \fBconst\fP \fBT\fP & x)"

.SS "\fBGTEST_API_\fP void testing::internal2::PrintBytesInObjectTo (\fBconst\fP unsigned char * obj_bytes, size_t count, ::std::ostream * os)"

.SS "void testing::internal2::PrintBytesInObjectTo (\fBconst\fP unsigned char * obj_bytes, size_t count, ostream * os)"

.SH "Variable Documentation"
.PP 
.SS "\fBconst\fP size_t testing::internal2::kProtobufOneLinerMaxLength = 50"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
