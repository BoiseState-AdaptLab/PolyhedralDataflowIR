.TH "jsoncons::basic_json< CharT, Alloc >::variant::string_data" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jsoncons::basic_json< CharT, Alloc >::variant::string_data
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json\&.hpp>\fP
.PP
Inherits string_allocator\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBconst\fP \fBchar_type\fP * \fBc_str\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBchar_type\fP * \fBdata\fP () \fBconst\fP"
.br
.ti -1c
.RI "size_t \fBlength\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBstring_allocator\fP \fBget_allocator\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBconst\fP \fBstring_data\fP &\fBrhs\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBstring_data\fP (\fBconst\fP \fBstring_allocator\fP &allocator)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBchar_type\fP * \fBp_\fP"
.br
.ti -1c
.RI "size_t \fBlength_\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename CharT , typename Alloc  = std::allocator<CharT>> \fBjsoncons::basic_json\fP< CharT, Alloc >::variant::string_data::string_data (\fBconst\fP \fBstring_allocator\fP & allocator)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename CharT , typename Alloc  = std::allocator<CharT>> \fBconst\fP \fBchar_type\fP* \fBjsoncons::basic_json\fP< CharT, Alloc >::variant::string_data::c_str () const\fC [inline]\fP"

.SS "template<typename CharT , typename Alloc  = std::allocator<CharT>> \fBconst\fP \fBchar_type\fP* \fBjsoncons::basic_json\fP< CharT, Alloc >::variant::string_data::data () const\fC [inline]\fP"

.SS "template<typename CharT , typename Alloc  = std::allocator<CharT>> \fBstring_allocator\fP \fBjsoncons::basic_json\fP< CharT, Alloc >::variant::string_data::get_allocator () const\fC [inline]\fP"

.SS "template<typename CharT , typename Alloc  = std::allocator<CharT>> size_t \fBjsoncons::basic_json\fP< CharT, Alloc >::variant::string_data::length () const\fC [inline]\fP"

.SS "template<typename CharT , typename Alloc  = std::allocator<CharT>> bool \fBjsoncons::basic_json\fP< CharT, Alloc >::variant::string_data::operator== (\fBconst\fP \fBstring_data\fP & rhs) const\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename CharT , typename Alloc  = std::allocator<CharT>> size_t \fBjsoncons::basic_json\fP< CharT, Alloc >::variant::string_data::length_"

.SS "template<typename CharT , typename Alloc  = std::allocator<CharT>> \fBchar_type\fP* \fBjsoncons::basic_json\fP< CharT, Alloc >::variant::string_data::p_"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
