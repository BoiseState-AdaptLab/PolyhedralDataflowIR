.TH "__gmp_expr< mpf_t, mpf_t >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gmp_expr< mpf_t, mpf_t >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gmpxx\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmp_bitcnt_t\fP \fBget_prec\fP () \fBconst\fP"
.br
.ti -1c
.RI "void \fBset_prec\fP (\fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "void \fBset_prec_raw\fP (\fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP ()"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (\fBconst\fP \fB__gmp_expr\fP &\fBf\fP)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (\fBconst\fP \fB__gmp_expr\fP &\fBf\fP, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "template<class T , class U > \fB__gmp_expr\fP (\fBconst\fP \fB__gmp_expr\fP< \fBT\fP, \fBU\fP > &expr)"
.br
.ti -1c
.RI "template<class T , class U > \fB__gmp_expr\fP (\fBconst\fP \fB__gmp_expr\fP< \fBT\fP, \fBU\fP > &expr, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__GMPXX_DEFINE_ARITHMETIC_CONSTRUCTORS\fP \fB__gmp_expr\fP (signed char \fBc\fP, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (unsigned char \fBc\fP, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (signed int \fBi\fP, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (unsigned int \fBi\fP, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (signed short int s, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (unsigned short int s, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (signed long int l, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (unsigned long int l, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (float \fBf\fP, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (double d, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (\fBconst\fP char *s)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (\fBconst\fP char *s, \fBmp_bitcnt_t\fP prec, int base=0)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (\fBconst\fP std::string &s)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (\fBconst\fP std::string &s, \fBmp_bitcnt_t\fP prec, int base=0)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (\fBmpf_srcptr\fP \fBf\fP)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP (\fBmpf_srcptr\fP \fBf\fP, \fBmp_bitcnt_t\fP prec)"
.br
.ti -1c
.RI "\fB~__gmp_expr\fP ()"
.br
.ti -1c
.RI "void \fBswap\fP (\fB__gmp_expr\fP &\fBf\fP) \fB__GMPXX_NOEXCEPT\fP"
.br
.ti -1c
.RI "\fB__gmp_expr\fP & \fBoperator=\fP (\fBconst\fP \fB__gmp_expr\fP &\fBf\fP)"
.br
.ti -1c
.RI "template<class T , class U > \fB__gmp_expr\fP< value_type, value_type > & \fBoperator=\fP (\fBconst\fP \fB__gmp_expr\fP< \fBT\fP, \fBU\fP > &expr)"
.br
.ti -1c
.RI "\fB__GMPXX_DEFINE_ARITHMETIC_ASSIGNMENTS\fP \fB__gmp_expr\fP & \fBoperator=\fP (\fBconst\fP char *s)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP & \fBoperator=\fP (\fBconst\fP std::string &s)"
.br
.ti -1c
.RI "int \fBset_str\fP (\fBconst\fP char *s, int base)"
.br
.ti -1c
.RI "int \fBset_str\fP (\fBconst\fP std::string &s, int base)"
.br
.ti -1c
.RI "std::string \fBget_str\fP (\fBmp_exp_t\fP &expo, int base=10, size_t \fBsize\fP=0) \fBconst\fP"
.br
.ti -1c
.RI "\fBmpf_srcptr\fP \fB__get_mp\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBmpf_ptr\fP \fB__get_mp\fP ()"
.br
.ti -1c
.RI "\fBmpf_srcptr\fP \fBget_mpf_t\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBmpf_ptr\fP \fBget_mpf_t\fP ()"
.br
.ti -1c
.RI "signed long int \fBget_si\fP () \fBconst\fP"
.br
.ti -1c
.RI "unsigned long int \fBget_ui\fP () \fBconst\fP"
.br
.ti -1c
.RI "double \fBget_d\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBfits_sint_p\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBfits_uint_p\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBfits_sshort_p\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBfits_ushort_p\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBfits_slong_p\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBfits_ulong_p\fP () \fBconst\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP ()\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (\fBconst\fP \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP > & f)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (\fBconst\fP \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP > & f, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "template<class T , class U > \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (\fBconst\fP \fB__gmp_expr\fP< \fBT\fP, \fBU\fP > & expr)\fC [inline]\fP"

.SS "template<class T , class U > \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (\fBconst\fP \fB__gmp_expr\fP< \fBT\fP, \fBU\fP > & expr, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__GMPXX_DEFINE_ARITHMETIC_CONSTRUCTORS\fP \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (signed char c, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (unsigned char c, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (signed int i, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (unsigned int i, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (signed short int s, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (unsigned short int s, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (signed long int l, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (unsigned long int l, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (float f, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (double d, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (\fBconst\fP char * s)\fC [inline]\fP, \fC [explicit]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (\fBconst\fP char * s, \fBmp_bitcnt_t\fP prec, int base = \fC0\fP)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (\fBconst\fP std::string & s)\fC [inline]\fP, \fC [explicit]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (\fBconst\fP std::string & s, \fBmp_bitcnt_t\fP prec, int base = \fC0\fP)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (\fBmpf_srcptr\fP f)\fC [inline]\fP, \fC [explicit]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::\fB__gmp_expr\fP (\fBmpf_srcptr\fP f, \fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::~\fB__gmp_expr\fP ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBmpf_ptr\fP \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::__get_mp ()\fC [inline]\fP"

.SS "\fBmpf_srcptr\fP \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::__get_mp () const\fC [inline]\fP"

.SS "bool \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::fits_sint_p () const\fC [inline]\fP"

.SS "bool \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::fits_slong_p () const\fC [inline]\fP"

.SS "bool \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::fits_sshort_p () const\fC [inline]\fP"

.SS "bool \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::fits_uint_p () const\fC [inline]\fP"

.SS "bool \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::fits_ulong_p () const\fC [inline]\fP"

.SS "bool \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::fits_ushort_p () const\fC [inline]\fP"

.SS "double \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::get_d () const\fC [inline]\fP"

.SS "\fBmpf_ptr\fP \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::get_mpf_t ()\fC [inline]\fP"

.SS "\fBmpf_srcptr\fP \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::get_mpf_t () const\fC [inline]\fP"

.SS "\fBmp_bitcnt_t\fP \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::get_prec () const\fC [inline]\fP"

.SS "signed long int \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::get_si () const\fC [inline]\fP"

.SS "std::string \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::get_str (\fBmp_exp_t\fP & expo, int base = \fC10\fP, size_t size = \fC0\fP) const\fC [inline]\fP"

.SS "unsigned long int \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::get_ui () const\fC [inline]\fP"

.SS "\fB__gmp_expr\fP& \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::operator= (\fBconst\fP \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP > & f)\fC [inline]\fP"

.SS "template<class T , class U > \fB__gmp_expr\fP<value_type, value_type>& \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::operator= (\fBconst\fP \fB__gmp_expr\fP< \fBT\fP, \fBU\fP > & expr)\fC [inline]\fP"

.SS "\fB__GMPXX_DEFINE_ARITHMETIC_ASSIGNMENTS\fP \fB__gmp_expr\fP& \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::operator= (\fBconst\fP char * s)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP& \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::operator= (\fBconst\fP std::string & s)\fC [inline]\fP"

.SS "void \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::set_prec (\fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "void \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::set_prec_raw (\fBmp_bitcnt_t\fP prec)\fC [inline]\fP"

.SS "int \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::set_str (\fBconst\fP char * s, int base)\fC [inline]\fP"

.SS "int \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::set_str (\fBconst\fP std::string & s, int base)\fC [inline]\fP"

.SS "void \fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP >::swap (\fB__gmp_expr\fP< \fBmpf_t\fP, \fBmpf_t\fP > & f)\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
