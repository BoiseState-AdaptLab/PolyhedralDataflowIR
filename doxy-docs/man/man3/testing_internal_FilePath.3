.TH "testing::internal::FilePath" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
testing::internal::FilePath
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gtest\-filepath\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFilePath\fP ()"
.br
.ti -1c
.RI "\fBFilePath\fP (\fBconst\fP \fBFilePath\fP &\fBrhs\fP)"
.br
.ti -1c
.RI "\fBFilePath\fP (\fBconst\fP std::string &pathname)"
.br
.ti -1c
.RI "\fBFilePath\fP & \fBoperator=\fP (\fBconst\fP \fBFilePath\fP &\fBrhs\fP)"
.br
.ti -1c
.RI "void \fBSet\fP (\fBconst\fP \fBFilePath\fP &\fBrhs\fP)"
.br
.ti -1c
.RI "\fBconst\fP std::string & \fBstring\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP char * \fBc_str\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBIsEmpty\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBFilePath\fP \fBRemoveTrailingPathSeparator\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBFilePath\fP \fBRemoveDirectoryName\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBFilePath\fP \fBRemoveFileName\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBFilePath\fP \fBRemoveExtension\fP (\fBconst\fP char *extension) \fBconst\fP"
.br
.ti -1c
.RI "bool \fBCreateDirectoriesRecursively\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBCreateFolder\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBFileOrDirectoryExists\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBDirectoryExists\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBIsDirectory\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBIsRootDirectory\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBIsAbsolutePath\fP () \fBconst\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBFilePath\fP \fBGetCurrentDir\fP ()"
.br
.ti -1c
.RI "static \fBFilePath\fP \fBMakeFileName\fP (\fBconst\fP \fBFilePath\fP &directory, \fBconst\fP \fBFilePath\fP &base_name, int number, \fBconst\fP char *extension)"
.br
.ti -1c
.RI "static \fBFilePath\fP \fBConcatPaths\fP (\fBconst\fP \fBFilePath\fP &directory, \fBconst\fP \fBFilePath\fP &relative_path)"
.br
.ti -1c
.RI "static \fBFilePath\fP \fBGenerateUniqueFileName\fP (\fBconst\fP \fBFilePath\fP &directory, \fBconst\fP \fBFilePath\fP &base_name, \fBconst\fP char *extension)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "testing::internal::FilePath::FilePath ()\fC [inline]\fP"

.SS "testing::internal::FilePath::FilePath (\fBconst\fP \fBFilePath\fP & rhs)\fC [inline]\fP"

.SS "testing::internal::FilePath::FilePath (\fBconst\fP std::string & pathname)\fC [inline]\fP, \fC [explicit]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBconst\fP char* testing::internal::FilePath::c_str () const\fC [inline]\fP"

.SS "\fBFilePath\fP testing::internal::FilePath::ConcatPaths (\fBconst\fP \fBFilePath\fP & directory, \fBconst\fP \fBFilePath\fP & relative_path)\fC [static]\fP"

.SS "bool testing::internal::FilePath::CreateDirectoriesRecursively () const"

.SS "bool testing::internal::FilePath::CreateFolder () const"

.SS "bool testing::internal::FilePath::DirectoryExists () const"

.SS "bool testing::internal::FilePath::FileOrDirectoryExists () const"

.SS "\fBFilePath\fP testing::internal::FilePath::GenerateUniqueFileName (\fBconst\fP \fBFilePath\fP & directory, \fBconst\fP \fBFilePath\fP & base_name, \fBconst\fP char * extension)\fC [static]\fP"

.SS "\fBFilePath\fP testing::internal::FilePath::GetCurrentDir ()\fC [static]\fP"

.SS "bool testing::internal::FilePath::IsAbsolutePath () const"

.SS "bool testing::internal::FilePath::IsDirectory () const"

.SS "bool testing::internal::FilePath::IsEmpty () const\fC [inline]\fP"

.SS "bool testing::internal::FilePath::IsRootDirectory () const"

.SS "\fBFilePath\fP testing::internal::FilePath::MakeFileName (\fBconst\fP \fBFilePath\fP & directory, \fBconst\fP \fBFilePath\fP & base_name, int number, \fBconst\fP char * extension)\fC [static]\fP"

.SS "\fBFilePath\fP& testing::internal::FilePath::operator= (\fBconst\fP \fBFilePath\fP & rhs)\fC [inline]\fP"

.SS "\fBFilePath\fP testing::internal::FilePath::RemoveDirectoryName () const"

.SS "\fBFilePath\fP testing::internal::FilePath::RemoveExtension (\fBconst\fP char * extension) const"

.SS "\fBFilePath\fP testing::internal::FilePath::RemoveFileName () const"

.SS "\fBFilePath\fP testing::internal::FilePath::RemoveTrailingPathSeparator () const"

.SS "void testing::internal::FilePath::Set (\fBconst\fP \fBFilePath\fP & rhs)\fC [inline]\fP"

.SS "\fBconst\fP std::string& testing::internal::FilePath::string () const\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
