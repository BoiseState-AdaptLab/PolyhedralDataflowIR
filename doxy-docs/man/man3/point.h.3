.TH "lib/isl/include/isl/point.h" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/isl/include/isl/point.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <isl/space\&.h>\fP
.br
\fC#include <isl/val\&.h>\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBisl_point\fP \fBisl_point\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fB__isl_subclass\fP (\fBisl_basic_set\fP) \fBisl_point\fP"
.br
.ti -1c
.RI "\fBisl_ctx\fP * \fBisl_point_get_ctx\fP (\fB__isl_keep\fP \fBisl_point\fP *pnt)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_space\fP * \fBisl_point_get_space\fP (\fB__isl_keep\fP \fBisl_point\fP *pnt)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_point\fP * \fBisl_point_zero\fP (\fB__isl_take\fP \fBisl_space\fP *\fBdim\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_point\fP * \fBisl_point_copy\fP (\fB__isl_keep\fP \fBisl_point\fP *pnt)"
.br
.ti -1c
.RI "void \fBisl_point_free\fP (\fB__isl_take\fP \fBisl_point\fP *pnt)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_val\fP * \fBisl_point_get_coordinate_val\fP (\fB__isl_keep\fP \fBisl_point\fP *pnt, enum \fBisl_dim_type\fP type, int \fBpos\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_point\fP * \fBisl_point_set_coordinate_val\fP (\fB__isl_take\fP \fBisl_point\fP *pnt, enum \fBisl_dim_type\fP type, int \fBpos\fP, \fB__isl_take\fP \fBisl_val\fP *v)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_point\fP * \fBisl_point_add_ui\fP (\fB__isl_take\fP \fBisl_point\fP *pnt, enum \fBisl_dim_type\fP type, int \fBpos\fP, unsigned \fBval\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_point\fP * \fBisl_point_sub_ui\fP (\fB__isl_take\fP \fBisl_point\fP *pnt, enum \fBisl_dim_type\fP type, int \fBpos\fP, unsigned \fBval\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_point\fP * \fBisl_point_void\fP (\fB__isl_take\fP \fBisl_space\fP *\fBdim\fP)"
.br
.ti -1c
.RI "\fBisl_bool\fP \fBisl_point_is_void\fP (\fB__isl_keep\fP \fBisl_point\fP *pnt)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_printer\fP * \fBisl_printer_print_point\fP (\fB__isl_take\fP \fBisl_printer\fP *printer, \fB__isl_keep\fP \fBisl_point\fP *pnt)"
.br
.ti -1c
.RI "void \fBisl_point_dump\fP (\fB__isl_keep\fP \fBisl_point\fP *pnt)"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBisl_point\fP \fBisl_point\fP"

.SH "Function Documentation"
.PP 
.SS "struct __isl_subclass (\fBisl_basic_set\fP)"

.SS "\fB__isl_give\fP \fBisl_point\fP* isl_point_add_ui (\fB__isl_take\fP \fBisl_point\fP * pnt, enum \fBisl_dim_type\fP type, int pos, unsigned val)"

.SS "\fB__isl_give\fP \fBisl_point\fP* isl_point_copy (\fB__isl_keep\fP \fBisl_point\fP * pnt)"

.SS "void isl_point_dump (\fB__isl_keep\fP \fBisl_point\fP * pnt)"

.SS "void isl_point_free (\fB__isl_take\fP \fBisl_point\fP * pnt)"

.SS "\fB__isl_give\fP \fBisl_val\fP* isl_point_get_coordinate_val (\fB__isl_keep\fP \fBisl_point\fP * pnt, enum \fBisl_dim_type\fP type, int pos)"

.SS "\fBisl_ctx\fP* isl_point_get_ctx (\fB__isl_keep\fP \fBisl_point\fP * pnt)"

.SS "\fB__isl_give\fP \fBisl_space\fP* isl_point_get_space (\fB__isl_keep\fP \fBisl_point\fP * pnt)"

.SS "\fBisl_bool\fP isl_point_is_void (\fB__isl_keep\fP \fBisl_point\fP * pnt)"

.SS "\fB__isl_give\fP \fBisl_point\fP* isl_point_set_coordinate_val (\fB__isl_take\fP \fBisl_point\fP * pnt, enum \fBisl_dim_type\fP type, int pos, \fB__isl_take\fP \fBisl_val\fP * v)"

.SS "\fB__isl_give\fP \fBisl_point\fP* isl_point_sub_ui (\fB__isl_take\fP \fBisl_point\fP * pnt, enum \fBisl_dim_type\fP type, int pos, unsigned val)"

.SS "\fB__isl_give\fP \fBisl_point\fP* isl_point_void (\fB__isl_take\fP \fBisl_space\fP * dim)"

.SS "\fB__isl_give\fP \fBisl_point\fP* isl_point_zero (\fB__isl_take\fP \fBisl_space\fP * dim)"

.SS "\fB__isl_give\fP \fBisl_printer\fP* isl_printer_print_point (\fB__isl_take\fP \fBisl_printer\fP * printer, \fB__isl_keep\fP \fBisl_point\fP * pnt)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
