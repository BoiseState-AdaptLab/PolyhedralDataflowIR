.TH "jsoncons::json_exception_1< Base >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jsoncons::json_exception_1< Base >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <jsoncons\&.hpp>\fP
.PP
Inherits Base, and \fBjsoncons::json_exception\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBjson_exception_1\fP (\fBconst\fP std::string &format, \fBconst\fP std::string &\fBarg1\fP) \fBJSONCONS_NOEXCEPT\fP"
.br
.ti -1c
.RI "\fBjson_exception_1\fP (\fBconst\fP std::string &format, \fBconst\fP std::wstring &\fBarg1\fP) \fBJSONCONS_NOEXCEPT\fP"
.br
.ti -1c
.RI "\fB~json_exception_1\fP () \fBJSONCONS_NOEXCEPT\fP"
.br
.ti -1c
.RI "\fBconst\fP char * \fBwhat\fP () \fBconst\fP \fBJSONCONS_NOEXCEPT\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename Base > \fBjsoncons::json_exception_1\fP< Base >::\fBjson_exception_1\fP (\fBconst\fP std::string & format, \fBconst\fP std::string & arg1)\fC [inline]\fP"

.SS "template<typename Base > \fBjsoncons::json_exception_1\fP< Base >::\fBjson_exception_1\fP (\fBconst\fP std::string & format, \fBconst\fP std::wstring & arg1)\fC [inline]\fP"

.SS "template<typename Base > \fBjsoncons::json_exception_1\fP< Base >::~\fBjson_exception_1\fP ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename Base > \fBconst\fP char* \fBjsoncons::json_exception_1\fP< Base >::what () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBjsoncons::json_exception\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
