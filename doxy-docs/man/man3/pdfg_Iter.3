.TH "pdfg::Iter" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pdfg::Iter
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <GraphIL\&.hpp>\fP
.PP
Inherits \fBpdfg::Expr\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBIter\fP (\fBconst\fP string &\fBname\fP='')"
.br
.ti -1c
.RI "\fBIter\fP (\fBconst\fP \fBExpr\fP &expr)"
.br
.ti -1c
.RI "\fBIter\fP (char chr)"
.br
.ti -1c
.RI "\fBIter\fP (\fBconst\fP \fBIter\fP &other)"
.br
.ti -1c
.RI "\fBIter\fP & \fBoperator=\fP (\fBconst\fP \fBExpr\fP &expr) override"
.br
.ti -1c
.RI "bool \fBequals\fP (\fBconst\fP string &\fBname\fP) \fBconst\fP"
.br
.ti -1c
.RI "bool \fBequals\fP (\fBconst\fP \fBIter\fP &other) \fBconst\fP"
.br
.ti -1c
.RI "bool \fBoperator<\fP (\fBconst\fP \fBIter\fP &other) \fBconst\fP"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBconst\fP \fBIter\fP &other)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBconst\fP string &\fBtext\fP)"
.br
.ti -1c
.RI "\fBMath\fP \fBoperator=\fP (\fBconst\fP \fBMath\fP &math)"
.br
.ti -1c
.RI "\fBoperator int\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBis_iter\fP () \fBconst\fP override"
.br
.ti -1c
.RI "bool \fBis_int\fP () \fBconst\fP"
.br
.ti -1c
.RI "string \fBname\fP () \fBconst\fP"
.br
.ti -1c
.RI "void \fBname\fP (\fBconst\fP char name)"
.br
.ti -1c
.RI "void \fBname\fP (\fBconst\fP string &name)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBcopy\fP (\fBconst\fP \fBIter\fP &other)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "string \fB_name\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "pdfg::Iter::Iter (\fBconst\fP string & name = \fC''\fP)\fC [inline]\fP, \fC [explicit]\fP"

.SS "pdfg::Iter::Iter (\fBconst\fP \fBExpr\fP & expr)\fC [inline]\fP, \fC [explicit]\fP"

.SS "pdfg::Iter::Iter (char chr)\fC [inline]\fP, \fC [explicit]\fP"

.SS "pdfg::Iter::Iter (\fBconst\fP \fBIter\fP & other)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void pdfg::Iter::copy (\fBconst\fP \fBIter\fP & other)\fC [inline]\fP, \fC [protected]\fP"

.SS "bool pdfg::Iter::equals (\fBconst\fP \fBIter\fP & other) const\fC [inline]\fP"

.SS "bool pdfg::Iter::equals (\fBconst\fP string & name) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBpdfg::Expr\fP\&.
.SS "bool pdfg::Iter::is_int () const\fC [inline]\fP"

.SS "bool pdfg::Iter::is_iter () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBpdfg::Expr\fP\&.
.SS "string pdfg::Iter::name () const\fC [inline]\fP"

.SS "void pdfg::Iter::name (\fBconst\fP char name)\fC [inline]\fP"

.SS "void pdfg::Iter::name (\fBconst\fP string & name)\fC [inline]\fP"

.SS "pdfg::Iter::operator int () const\fC [inline]\fP, \fC [explicit]\fP"

.SS "bool pdfg::Iter::operator< (\fBconst\fP \fBIter\fP & other) const\fC [inline]\fP"

.SS "\fBIter\fP& pdfg::Iter::operator= (\fBconst\fP \fBExpr\fP & expr)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBpdfg::Expr\fP\&.
.SS "\fBMath\fP pdfg::Iter::operator= (\fBconst\fP \fBMath\fP & math)\fC [inline]\fP"

.SS "bool pdfg::Iter::operator== (\fBconst\fP \fBIter\fP & other)\fC [inline]\fP"

.SS "bool pdfg::Iter::operator== (\fBconst\fP string & text)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "string pdfg::Iter::_name\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
