.TH "testing::EmptyTestEventListener" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
testing::EmptyTestEventListener
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gtest\&.h>\fP
.PP
Inherits \fBtesting::TestEventListener\fP\&.
.PP
Inherited by \fBtesting::internal::XmlUnitTestResultPrinter\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBOnTestProgramStart\fP (\fBconst\fP \fBUnitTest\fP &)"
.br
.ti -1c
.RI "virtual void \fBOnTestIterationStart\fP (\fBconst\fP \fBUnitTest\fP &, int)"
.br
.ti -1c
.RI "virtual void \fBOnEnvironmentsSetUpStart\fP (\fBconst\fP \fBUnitTest\fP &)"
.br
.ti -1c
.RI "virtual void \fBOnEnvironmentsSetUpEnd\fP (\fBconst\fP \fBUnitTest\fP &)"
.br
.ti -1c
.RI "virtual void \fBOnTestCaseStart\fP (\fBconst\fP \fBTestCase\fP &)"
.br
.ti -1c
.RI "virtual void \fBOnTestStart\fP (\fBconst\fP \fBTestInfo\fP &)"
.br
.ti -1c
.RI "virtual void \fBOnTestPartResult\fP (\fBconst\fP \fBTestPartResult\fP &)"
.br
.ti -1c
.RI "virtual void \fBOnTestEnd\fP (\fBconst\fP \fBTestInfo\fP &)"
.br
.ti -1c
.RI "virtual void \fBOnTestCaseEnd\fP (\fBconst\fP \fBTestCase\fP &)"
.br
.ti -1c
.RI "virtual void \fBOnEnvironmentsTearDownStart\fP (\fBconst\fP \fBUnitTest\fP &)"
.br
.ti -1c
.RI "virtual void \fBOnEnvironmentsTearDownEnd\fP (\fBconst\fP \fBUnitTest\fP &)"
.br
.ti -1c
.RI "virtual void \fBOnTestIterationEnd\fP (\fBconst\fP \fBUnitTest\fP &, int)"
.br
.ti -1c
.RI "virtual void \fBOnTestProgramEnd\fP (\fBconst\fP \fBUnitTest\fP &)"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "virtual void testing::EmptyTestEventListener::OnEnvironmentsSetUpEnd (\fBconst\fP \fBUnitTest\fP &)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnEnvironmentsSetUpStart (\fBconst\fP \fBUnitTest\fP &)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnEnvironmentsTearDownEnd (\fBconst\fP \fBUnitTest\fP &)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnEnvironmentsTearDownStart (\fBconst\fP \fBUnitTest\fP &)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnTestCaseEnd (\fBconst\fP \fBTestCase\fP &)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnTestCaseStart (\fBconst\fP \fBTestCase\fP &)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnTestEnd (\fBconst\fP \fBTestInfo\fP &)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnTestIterationEnd (\fBconst\fP \fBUnitTest\fP &, int)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.PP
Reimplemented in \fBtesting::internal::XmlUnitTestResultPrinter\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnTestIterationStart (\fBconst\fP \fBUnitTest\fP &, int)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnTestPartResult (\fBconst\fP \fBTestPartResult\fP &)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnTestProgramEnd (\fBconst\fP \fBUnitTest\fP &)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnTestProgramStart (\fBconst\fP \fBUnitTest\fP &)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.
.SS "virtual void testing::EmptyTestEventListener::OnTestStart (\fBconst\fP \fBTestInfo\fP &)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::TestEventListener\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
