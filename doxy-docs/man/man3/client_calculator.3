.TH "client::calculator< Iterator >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
client::calculator< Iterator >
.SH SYNOPSIS
.br
.PP
.PP
Inherits grammar< Iterator, ascii::space_type >\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBcalculator\fP (std::vector< \fBCG_outputRepr\fP * > &\fBcode\fP, std::vector< std::string > &code_string_, \fBCG_outputBuilder\fP &builder, std::vector< std::string > &index_names)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "qi::rule< \fBIterator\fP, ascii::space_type > \fBexpression\fP"
.br
.ti -1c
.RI "qi::rule< \fBIterator\fP, ascii::space_type > \fBterm\fP"
.br
.ti -1c
.RI "qi::rule< \fBIterator\fP, ascii::space_type > \fBidentifier\fP"
.br
.ti -1c
.RI "qi::rule< \fBIterator\fP, ascii::space_type > \fBidentifyP\fP"
.br
.ti -1c
.RI "std::vector< \fBCG_outputRepr\fP * > & \fBcode\fP"
.br
.ti -1c
.RI "std::vector< std::string > & \fBcode_string\fP"
.br
.ti -1c
.RI "std::vector< std::string > & \fBindex_names_\fP"
.br
.ti -1c
.RI "std::string \fBglobal_string\fP"
.br
.ti -1c
.RI "\fBCG_outputBuilder\fP & \fBbuilder_\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename Iterator > \fBclient::calculator\fP< \fBIterator\fP >::\fBcalculator\fP (std::vector< \fBCG_outputRepr\fP * > & code, std::vector< std::string > & code_string_, \fBCG_outputBuilder\fP & builder, std::vector< std::string > & index_names)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename Iterator > \fBCG_outputBuilder\fP& \fBclient::calculator\fP< \fBIterator\fP >::builder_"

.SS "template<typename Iterator > std::vector<\fBCG_outputRepr\fP *>& \fBclient::calculator\fP< \fBIterator\fP >::code"

.SS "template<typename Iterator > std::vector<std::string>& \fBclient::calculator\fP< \fBIterator\fP >::code_string"

.SS "template<typename Iterator > qi::rule<\fBIterator\fP, ascii::space_type> \fBclient::calculator\fP< \fBIterator\fP >::expression"

.SS "template<typename Iterator > std::string \fBclient::calculator\fP< \fBIterator\fP >::global_string"

.SS "template<typename Iterator > qi::rule<\fBIterator\fP, ascii::space_type> \fBclient::calculator\fP< \fBIterator\fP >::identifier"

.SS "template<typename Iterator > qi::rule<\fBIterator\fP, ascii::space_type> \fBclient::calculator\fP< \fBIterator\fP >::identifyP"

.SS "template<typename Iterator > std::vector<std::string>& \fBclient::calculator\fP< \fBIterator\fP >::index_names_"

.SS "template<typename Iterator > qi::rule<\fBIterator\fP, ascii::space_type> \fBclient::calculator\fP< \fBIterator\fP >::term"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
