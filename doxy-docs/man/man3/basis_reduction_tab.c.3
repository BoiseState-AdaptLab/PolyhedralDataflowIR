.TH "lib/isl/basis_reduction_tab.c" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/isl/basis_reduction_tab.c
.SH SYNOPSIS
.br
.PP
\fC#include <assert\&.h>\fP
.br
\fC#include <isl_map_private\&.h>\fP
.br
\fC#include <isl_seq\&.h>\fP
.br
\fC#include 'isl_tab\&.h'\fP
.br
\fC#include <isl_int\&.h>\fP
.br
\fC#include <isl_config\&.h>\fP
.br
\fC#include 'basis_reduction_templ\&.c'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBtab_lp\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGBR_LP\fP   struct \fBtab_lp\fP"
.br
.ti -1c
.RI "#define \fBGBR_lp_init\fP(\fBP\fP)   init_lp(\fBP\fP)"
.br
.ti -1c
.RI "#define \fBGBR_lp_set_obj\fP(lp,  obj,  \fBdim\fP)   set_lp_obj(lp, obj, \fBdim\fP)"
.br
.ti -1c
.RI "#define \fBGBR_lp_solve\fP(lp)   solve_lp(lp)"
.br
.ti -1c
.RI "#define \fBGBR_lp_get_obj_val\fP(lp,  F)   get_obj_val(lp, F)"
.br
.ti -1c
.RI "#define \fBGBR_lp_delete\fP(lp)   delete_lp(lp)"
.br
.ti -1c
.RI "#define \fBGBR_lp_next_row\fP(lp)   lp\->\fBneq\fP"
.br
.ti -1c
.RI "#define \fBGBR_lp_add_row\fP(lp,  \fBrow\fP,  \fBdim\fP)   add_lp_row(lp, \fBrow\fP, \fBdim\fP)"
.br
.ti -1c
.RI "#define \fBGBR_lp_get_alpha\fP(lp,  \fBrow\fP,  alpha)   get_alpha(lp, \fBrow\fP, alpha)"
.br
.ti -1c
.RI "#define \fBGBR_lp_del_row\fP(lp)   del_lp_row(lp)"
.br
.ti -1c
.RI "#define \fBGBR_lp_is_fixed\fP(lp)   (lp)\->is_fixed"
.br
.ti -1c
.RI "#define \fBGBR_lp_cut\fP(lp,  obj)   cut_lp_to_hyperplane(lp, obj)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define GBR_LP   struct \fBtab_lp\fP"

.SS "#define GBR_lp_add_row(lp, \fBrow\fP, \fBdim\fP)   add_lp_row(lp, \fBrow\fP, \fBdim\fP)"

.SS "#define GBR_lp_cut(lp, obj)   cut_lp_to_hyperplane(lp, obj)"

.SS "#define GBR_lp_del_row(lp)   del_lp_row(lp)"

.SS "#define GBR_lp_delete(lp)   delete_lp(lp)"

.SS "#define GBR_lp_get_alpha(lp, \fBrow\fP, alpha)   get_alpha(lp, \fBrow\fP, alpha)"

.SS "#define GBR_lp_get_obj_val(lp, F)   get_obj_val(lp, F)"

.SS "#define GBR_lp_init(\fBP\fP)   init_lp(\fBP\fP)"

.SS "#define GBR_lp_is_fixed(lp)   (lp)\->is_fixed"

.SS "#define GBR_lp_next_row(lp)   lp\->\fBneq\fP"

.SS "#define GBR_lp_set_obj(lp, obj, \fBdim\fP)   set_lp_obj(lp, obj, \fBdim\fP)"

.SS "#define GBR_lp_solve(lp)   solve_lp(lp)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
