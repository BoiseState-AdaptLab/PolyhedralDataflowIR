.TH "testing::internal::String" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
testing::internal::String
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gtest\-string\&.h>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBconst\fP char * \fBCloneCString\fP (\fBconst\fP char *c_str)"
.br
.ti -1c
.RI "static bool \fBCStringEquals\fP (\fBconst\fP char *\fBlhs\fP, \fBconst\fP char *\fBrhs\fP)"
.br
.ti -1c
.RI "static std::string \fBShowWideCString\fP (\fBconst\fP wchar_t *wide_c_str)"
.br
.ti -1c
.RI "static bool \fBWideCStringEquals\fP (\fBconst\fP wchar_t *\fBlhs\fP, \fBconst\fP wchar_t *\fBrhs\fP)"
.br
.ti -1c
.RI "static bool \fBCaseInsensitiveCStringEquals\fP (\fBconst\fP char *\fBlhs\fP, \fBconst\fP char *\fBrhs\fP)"
.br
.ti -1c
.RI "static bool \fBCaseInsensitiveWideCStringEquals\fP (\fBconst\fP wchar_t *\fBlhs\fP, \fBconst\fP wchar_t *\fBrhs\fP)"
.br
.ti -1c
.RI "static bool \fBEndsWithCaseInsensitive\fP (\fBconst\fP std::string &\fBstr\fP, \fBconst\fP std::string &suffix)"
.br
.ti -1c
.RI "static std::string \fBFormatIntWidth2\fP (int value)"
.br
.ti -1c
.RI "static std::string \fBFormatHexInt\fP (int value)"
.br
.ti -1c
.RI "static std::string \fBFormatByte\fP (unsigned char value)"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "bool testing::internal::String::CaseInsensitiveCStringEquals (\fBconst\fP char * lhs, \fBconst\fP char * rhs)\fC [static]\fP"

.SS "bool testing::internal::String::CaseInsensitiveWideCStringEquals (\fBconst\fP wchar_t * lhs, \fBconst\fP wchar_t * rhs)\fC [static]\fP"

.SS "static \fBconst\fP char* testing::internal::String::CloneCString (\fBconst\fP char * c_str)\fC [static]\fP"

.SS "bool testing::internal::String::CStringEquals (\fBconst\fP char * lhs, \fBconst\fP char * rhs)\fC [static]\fP"

.SS "bool testing::internal::String::EndsWithCaseInsensitive (\fBconst\fP std::string & str, \fBconst\fP std::string & suffix)\fC [static]\fP"

.SS "std::string testing::internal::String::FormatByte (unsigned char value)\fC [static]\fP"

.SS "std::string testing::internal::String::FormatHexInt (int value)\fC [static]\fP"

.SS "std::string testing::internal::String::FormatIntWidth2 (int value)\fC [static]\fP"

.SS "std::string testing::internal::String::ShowWideCString (\fBconst\fP wchar_t * wide_c_str)\fC [static]\fP"

.SS "bool testing::internal::String::WideCStringEquals (\fBconst\fP wchar_t * lhs, \fBconst\fP wchar_t * rhs)\fC [static]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
