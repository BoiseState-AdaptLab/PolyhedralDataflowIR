.TH "lib/chill/ir_code.hh" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/chill/ir_code.hh \- CHiLL's compiler intermediate representation interface that extends Omega's builder interface to accomodate compiler analyses and extra code generation\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <ir_enums\&.hh>\fP
.br
\fC#include <chill_ast\&.hh>\fP
.br
\fC#include 'chill_io\&.hh'\fP
.br
\fC#include <vector>\fP
.br
\fC#include <basic/util\&.h>\fP
.br
\fC#include <code_gen/CG_outputRepr\&.h>\fP
.br
\fC#include <code_gen/CG_outputBuilder\&.h>\fP
.br
\fC#include <code_gen/CG_stringBuilder\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBIR_Symbol\fP"
.br
.RI "Base abstract class for scalar and array symbols\&. "
.ti -1c
.RI "struct \fBIR_ScalarSymbol\fP"
.br
.ti -1c
.RI "struct \fBIR_FunctionSymbol\fP"
.br
.ti -1c
.RI "struct \fBIR_ArraySymbol\fP"
.br
.ti -1c
.RI "struct \fBIR_PointerSymbol\fP"
.br
.ti -1c
.RI "struct \fBIR_Ref\fP"
.br
.RI "Base abstract class for scalar and array references\&. "
.ti -1c
.RI "struct \fBIR_ConstantRef\fP"
.br
.ti -1c
.RI "struct \fBIR_ScalarRef\fP"
.br
.ti -1c
.RI "struct \fBIR_FunctionRef\fP"
.br
.ti -1c
.RI "struct \fBIR_ArrayRef\fP"
.br
.ti -1c
.RI "struct \fBIR_PointerArrayRef\fP"
.br
.ti -1c
.RI "struct \fBIR_Control\fP"
.br
.RI "Base abstract class for code structures\&. "
.ti -1c
.RI "struct \fBIR_Loop\fP"
.br
.ti -1c
.RI "struct \fBIR_Block\fP"
.br
.ti -1c
.RI "struct \fBIR_If\fP"
.br
.ti -1c
.RI "struct \fBIR_While\fP"
.br
.ti -1c
.RI "class \fBIR_Code\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
CHiLL's compiler intermediate representation interface that extends Omega's builder interface to accomodate compiler analyses and extra code generation\&. 

Unlike CG_outputRepr, \fBIR_Symbol\fP,\fBIR_Ref\fP and \fBIR_Control\fP are place holders to the underlying code, thus deleting or duplicating them does not affect the actual code\&. Similar to Omega builder's memory allocation strategy, all non-const pointer parameters of CG_outputRepr/IR_Symbol/IR_Ref/IR_Control are destroyed after the call\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
