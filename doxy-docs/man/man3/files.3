.TH "files" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
files
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "def \fBexists\fP (path)"
.br
.ti -1c
.RI "def \fBgetSize\fP (path)"
.br
.ti -1c
.RI "def \fBaccTime\fP (path)"
.br
.ti -1c
.RI "def \fBmodTime\fP (path)"
.br
.ti -1c
.RI "def \fBcreationTime\fP (path)"
.br
.ti -1c
.RI "def \fBcopy\fP (src, dst)"
.br
.ti -1c
.RI "def \fBmove\fP (src, dst)"
.br
.ti -1c
.RI "def \fBremove\fP (file)"
.br
.ti -1c
.RI "def \fBisDir\fP (path)"
.br
.ti -1c
.RI "def \fBzip\fP (path)"
.br
.ti -1c
.RI "def \fBlist\fP (dir, pattern='')"
.br
.ti -1c
.RI "def \fBgetDir\fP (path)"
.br
.ti -1c
.RI "def \fBgetName\fP (path)"
.br
.ti -1c
.RI "def \fBgetExt\fP (path)"
.br
.ti -1c
.RI "def \fBgetPathWithoutExt\fP (path)"
.br
.ti -1c
.RI "def \fBgetNameWithoutExt\fP (path)"
.br
.ti -1c
.RI "def \fBread\fP (path)"
.br
.ti -1c
.RI "def \fBreadCSV\fP (path, delim=',', asDict=False)"
.br
.ti -1c
.RI "def \fBwrite\fP (path, lines)"
.br
.ti -1c
.RI "def \fBwriteCSV\fP (path, rows)"
.br
.ti -1c
.RI "def \fBappend\fP (path, lines)"
.br
.ti -1c
.RI "def \fBmakedir\fP (newDir)"
.br
.ti -1c
.RI "def \fBchmod\fP (path, mode='')"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "def files\&.accTime ( path)"

.SS "def files\&.append ( path,  lines)"

.SS "def files\&.chmod ( path,  mode = \fC''\fP)"

.SS "def files\&.copy ( src,  dst)"

.SS "def files\&.creationTime ( path)"

.SS "def files\&.exists ( path)"

.SS "def files\&.getDir ( path)"

.SS "def files\&.getExt ( path)"

.SS "def files\&.getName ( path)"

.SS "def files\&.getNameWithoutExt ( path)"

.SS "def files\&.getPathWithoutExt ( path)"

.SS "def files\&.getSize ( path)"

.SS "def files\&.isDir ( path)"

.SS "def files\&.list ( dir,  pattern = \fC''\fP)"

.SS "def files\&.makedir ( newDir)"

.SS "def files\&.modTime ( path)"

.SS "def files\&.move ( src,  dst)"

.SS "def files\&.read ( path)"

.SS "def files\&.readCSV ( path,  delim = \fC','\fP,  asDict = \fCFalse\fP)"

.SS "def files\&.remove ( file)"

.SS "def files\&.write ( path,  lines)"

.SS "def files\&.writeCSV ( path,  rows)"

.SS "def files\&.zip ( path)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
