.TH "lib/isl/include/isl/id.h" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/isl/include/isl/id.h
.SH SYNOPSIS
.br
.PP
\fC#include <isl/ctx\&.h>\fP
.br
\fC#include <isl/list\&.h>\fP
.br
\fC#include <isl/printer\&.h>\fP
.br
\fC#include <isl/stdint\&.h>\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBisl_id\fP \fBisl_id\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBisl_ctx\fP * \fBisl_id_get_ctx\fP (\fB__isl_keep\fP \fBisl_id\fP *id)"
.br
.ti -1c
.RI "uint32_t \fBisl_id_get_hash\fP (\fB__isl_keep\fP \fBisl_id\fP *id)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_id\fP * \fBisl_id_alloc\fP (\fBisl_ctx\fP *ctx, \fB__isl_keep\fP \fBconst\fP char *\fBname\fP, void *\fBuser\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_id\fP * \fBisl_id_copy\fP (\fBisl_id\fP *id)"
.br
.ti -1c
.RI "\fB__isl_null\fP \fBisl_id\fP * \fBisl_id_free\fP (\fB__isl_take\fP \fBisl_id\fP *id)"
.br
.ti -1c
.RI "void * \fBisl_id_get_user\fP (\fB__isl_keep\fP \fBisl_id\fP *id)"
.br
.ti -1c
.RI "\fBconst\fP \fB__isl_keep\fP char * \fBisl_id_get_name\fP (\fB__isl_keep\fP \fBisl_id\fP *id)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_id\fP * \fBisl_id_set_free_user\fP (\fB__isl_take\fP \fBisl_id\fP *id, \fB__isl_give\fP void(*free_user)(void *\fBuser\fP))"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_printer\fP * \fBisl_printer_print_id\fP (\fB__isl_take\fP \fBisl_printer\fP *\fBp\fP, \fB__isl_keep\fP \fBisl_id\fP *id)"
.br
.ti -1c
.RI "void \fBisl_id_dump\fP (\fB__isl_keep\fP \fBisl_id\fP *id)"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBisl_id\fP \fBisl_id\fP"

.SH "Function Documentation"
.PP 
.SS "\fB__isl_give\fP \fBisl_id\fP* isl_id_alloc (\fBisl_ctx\fP * ctx, \fB__isl_keep\fP \fBconst\fP char * name, void * user)"

.SS "\fB__isl_give\fP \fBisl_id\fP* isl_id_copy (\fBisl_id\fP * id)"

.SS "void isl_id_dump (\fB__isl_keep\fP \fBisl_id\fP * id)"

.SS "\fB__isl_null\fP \fBisl_id\fP* isl_id_free (\fB__isl_take\fP \fBisl_id\fP * id)"

.SS "\fBisl_ctx\fP* isl_id_get_ctx (\fB__isl_keep\fP \fBisl_id\fP * id)"

.SS "uint32_t isl_id_get_hash (\fB__isl_keep\fP \fBisl_id\fP * id)"

.SS "\fBconst\fP \fB__isl_keep\fP char* isl_id_get_name (\fB__isl_keep\fP \fBisl_id\fP * id)"

.SS "void* isl_id_get_user (\fB__isl_keep\fP \fBisl_id\fP * id)"

.SS "\fB__isl_give\fP \fBisl_id\fP* isl_id_set_free_user (\fB__isl_take\fP \fBisl_id\fP * id, \fB__isl_give\fP void(*)(void *\fBuser\fP) free_user)"

.SS "\fB__isl_give\fP \fBisl_printer\fP* isl_printer_print_id (\fB__isl_take\fP \fBisl_printer\fP * p, \fB__isl_keep\fP \fBisl_id\fP * id)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
