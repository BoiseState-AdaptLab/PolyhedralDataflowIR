.TH "jsoncons::basic_json_parser< CharT >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jsoncons::basic_json_parser< CharT >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json_parser\&.hpp>\fP
.PP
Inherits \fBjsoncons::basic_parsing_context< CharT >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBbasic_json_parser\fP (\fBbasic_json_input_handler\fP< CharT > &handler)"
.br
.ti -1c
.RI "\fBbasic_json_parser\fP (\fBbasic_json_input_handler\fP< CharT > &handler, \fBbasic_parse_error_handler\fP< CharT > &err_handler)"
.br
.ti -1c
.RI "\fBconst\fP \fBbasic_parsing_context\fP< CharT > & \fBparsing_context\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fB~basic_json_parser\fP ()"
.br
.ti -1c
.RI "size_t \fBmax_nesting_depth\fP () \fBconst\fP"
.br
.ti -1c
.RI "void \fBmax_nesting_depth\fP (size_t max_nesting_depth)"
.br
.ti -1c
.RI "\fBstates\fP \fBparent\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBdone\fP () \fBconst\fP"
.br
.ti -1c
.RI "void \fBdo_space\fP ()"
.br
.ti -1c
.RI "void \fBdo_begin_object\fP ()"
.br
.ti -1c
.RI "void \fBdo_end_object\fP ()"
.br
.ti -1c
.RI "void \fBdo_begin_array\fP ()"
.br
.ti -1c
.RI "void \fBdo_end_array\fP ()"
.br
.ti -1c
.RI "void \fBbegin_parse\fP ()"
.br
.ti -1c
.RI "void \fBcheck_done\fP (\fBconst\fP CharT *input, size_t start, size_t length)"
.br
.ti -1c
.RI "void \fBparse_string\fP ()"
.br
.ti -1c
.RI "void \fBparse\fP (\fBconst\fP CharT *\fBconst\fP input, size_t start, size_t length)"
.br
.ti -1c
.RI "void \fBend_parse\fP ()"
.br
.ti -1c
.RI "\fBstates\fP \fBstate\fP () \fBconst\fP"
.br
.ti -1c
.RI "size_t \fBindex\fP () \fBconst\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename CharT > \fBjsoncons::basic_json_parser\fP< CharT >::\fBbasic_json_parser\fP (\fBbasic_json_input_handler\fP< CharT > & handler)\fC [inline]\fP"

.SS "template<typename CharT > \fBjsoncons::basic_json_parser\fP< CharT >::\fBbasic_json_parser\fP (\fBbasic_json_input_handler\fP< CharT > & handler, \fBbasic_parse_error_handler\fP< CharT > & err_handler)\fC [inline]\fP"

.SS "template<typename CharT > \fBjsoncons::basic_json_parser\fP< CharT >::~\fBbasic_json_parser\fP ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename CharT > void \fBjsoncons::basic_json_parser\fP< CharT >::begin_parse ()\fC [inline]\fP"

.SS "template<typename CharT > void \fBjsoncons::basic_json_parser\fP< CharT >::check_done (\fBconst\fP CharT * input, size_t start, size_t length)\fC [inline]\fP"

.SS "template<typename CharT > void \fBjsoncons::basic_json_parser\fP< CharT >::do_begin_array ()\fC [inline]\fP"

.SS "template<typename CharT > void \fBjsoncons::basic_json_parser\fP< CharT >::do_begin_object ()\fC [inline]\fP"

.SS "template<typename CharT > void \fBjsoncons::basic_json_parser\fP< CharT >::do_end_array ()\fC [inline]\fP"

.SS "template<typename CharT > void \fBjsoncons::basic_json_parser\fP< CharT >::do_end_object ()\fC [inline]\fP"

.SS "template<typename CharT > void \fBjsoncons::basic_json_parser\fP< CharT >::do_space ()\fC [inline]\fP"

.SS "template<typename CharT > bool \fBjsoncons::basic_json_parser\fP< CharT >::done () const\fC [inline]\fP"

.SS "template<typename CharT > void \fBjsoncons::basic_json_parser\fP< CharT >::end_parse ()\fC [inline]\fP"

.SS "template<typename CharT > size_t \fBjsoncons::basic_json_parser\fP< CharT >::index () const\fC [inline]\fP"

.SS "template<typename CharT > size_t \fBjsoncons::basic_json_parser\fP< CharT >::max_nesting_depth () const\fC [inline]\fP"

.SS "template<typename CharT > void \fBjsoncons::basic_json_parser\fP< CharT >::max_nesting_depth (size_t max_nesting_depth)\fC [inline]\fP"

.SS "template<typename CharT > \fBstates\fP \fBjsoncons::basic_json_parser\fP< CharT >::parent () const\fC [inline]\fP"

.SS "template<typename CharT > void \fBjsoncons::basic_json_parser\fP< CharT >::parse (\fBconst\fP CharT *\fBconst\fP input, size_t start, size_t length)\fC [inline]\fP"

.SS "template<typename CharT > void \fBjsoncons::basic_json_parser\fP< CharT >::parse_string ()\fC [inline]\fP"

.SS "template<typename CharT > \fBconst\fP \fBbasic_parsing_context\fP<CharT>& \fBjsoncons::basic_json_parser\fP< CharT >::\fBparsing_context\fP () const\fC [inline]\fP"

.SS "template<typename CharT > \fBstates\fP \fBjsoncons::basic_json_parser\fP< CharT >::state () const\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
