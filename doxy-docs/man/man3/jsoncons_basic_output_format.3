.TH "jsoncons::basic_output_format< CharT >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jsoncons::basic_output_format< CharT >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <output_format\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBbasic_output_format\fP ()"
.br
.ti -1c
.RI "\fBblock_options\fP \fBobject_array_block_option\fP ()"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBobject_array_block_option\fP (\fBblock_options\fP value)"
.br
.ti -1c
.RI "\fBblock_options\fP \fBobject_object_block_option\fP ()"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBobject_object_block_option\fP (\fBblock_options\fP value)"
.br
.ti -1c
.RI "\fBblock_options\fP \fBarray_array_block_option\fP ()"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBarray_array_block_option\fP (\fBblock_options\fP value)"
.br
.ti -1c
.RI "\fBblock_options\fP \fBarray_object_block_option\fP ()"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBarray_object_block_option\fP (\fBblock_options\fP value)"
.br
.ti -1c
.RI "int \fBindent\fP () \fBconst\fP"
.br
.ti -1c
.RI "uint8_t \fBprecision\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBescape_all_non_ascii\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBescape_solidus\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBreplace_nan\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBreplace_pos_inf\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBreplace_neg_inf\fP () \fBconst\fP"
.br
.ti -1c
.RI "std::basic_string< CharT > \fBnan_replacement\fP () \fBconst\fP"
.br
.ti -1c
.RI "std::basic_string< CharT > \fBpos_inf_replacement\fP () \fBconst\fP"
.br
.ti -1c
.RI "std::basic_string< CharT > \fBneg_inf_replacement\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBprecision\fP (uint8_t prec)"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBescape_all_non_ascii\fP (bool value)"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBescape_solidus\fP (bool value)"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBreplace_nan\fP (bool replace)"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBreplace_inf\fP (bool replace)"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBreplace_pos_inf\fP (bool replace)"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBreplace_neg_inf\fP (bool replace)"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBnan_replacement\fP (\fBconst\fP std::basic_string< CharT > &replacement)"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBpos_inf_replacement\fP (\fBconst\fP std::basic_string< CharT > &replacement)"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBneg_inf_replacement\fP (\fBconst\fP std::basic_string< CharT > &replacement)"
.br
.ti -1c
.RI "\fBbasic_output_format\fP< CharT > & \fBindent\fP (int value)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBconst\fP size_t \fBdefault_indent\fP = 4"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename CharT > \fBjsoncons::basic_output_format\fP< CharT >::\fBbasic_output_format\fP ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename CharT > \fBblock_options\fP \fBjsoncons::basic_output_format\fP< CharT >::array_array_block_option ()\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::array_array_block_option (\fBblock_options\fP value)\fC [inline]\fP"

.SS "template<typename CharT > \fBblock_options\fP \fBjsoncons::basic_output_format\fP< CharT >::array_object_block_option ()\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::array_object_block_option (\fBblock_options\fP value)\fC [inline]\fP"

.SS "template<typename CharT > bool \fBjsoncons::basic_output_format\fP< CharT >::escape_all_non_ascii () const\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::escape_all_non_ascii (bool value)\fC [inline]\fP"

.SS "template<typename CharT > bool \fBjsoncons::basic_output_format\fP< CharT >::escape_solidus () const\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::escape_solidus (bool value)\fC [inline]\fP"

.SS "template<typename CharT > int \fBjsoncons::basic_output_format\fP< CharT >::indent () const\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::indent (int value)\fC [inline]\fP"

.SS "template<typename CharT > std::basic_string<CharT> \fBjsoncons::basic_output_format\fP< CharT >::nan_replacement () const\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::nan_replacement (\fBconst\fP std::basic_string< CharT > & replacement)\fC [inline]\fP"

.SS "template<typename CharT > std::basic_string<CharT> \fBjsoncons::basic_output_format\fP< CharT >::neg_inf_replacement () const\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::neg_inf_replacement (\fBconst\fP std::basic_string< CharT > & replacement)\fC [inline]\fP"

.SS "template<typename CharT > \fBblock_options\fP \fBjsoncons::basic_output_format\fP< CharT >::object_array_block_option ()\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::object_array_block_option (\fBblock_options\fP value)\fC [inline]\fP"

.SS "template<typename CharT > \fBblock_options\fP \fBjsoncons::basic_output_format\fP< CharT >::object_object_block_option ()\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::object_object_block_option (\fBblock_options\fP value)\fC [inline]\fP"

.SS "template<typename CharT > std::basic_string<CharT> \fBjsoncons::basic_output_format\fP< CharT >::pos_inf_replacement () const\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::pos_inf_replacement (\fBconst\fP std::basic_string< CharT > & replacement)\fC [inline]\fP"

.SS "template<typename CharT > uint8_t \fBjsoncons::basic_output_format\fP< CharT >::precision () const\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::precision (uint8_t prec)\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::replace_inf (bool replace)\fC [inline]\fP"

.SS "template<typename CharT > bool \fBjsoncons::basic_output_format\fP< CharT >::replace_nan () const\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::replace_nan (bool replace)\fC [inline]\fP"

.SS "template<typename CharT > bool \fBjsoncons::basic_output_format\fP< CharT >::replace_neg_inf () const\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::replace_neg_inf (bool replace)\fC [inline]\fP"

.SS "template<typename CharT > bool \fBjsoncons::basic_output_format\fP< CharT >::replace_pos_inf () const\fC [inline]\fP"

.SS "template<typename CharT > \fBbasic_output_format\fP<CharT>& \fBjsoncons::basic_output_format\fP< CharT >::replace_pos_inf (bool replace)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename CharT > \fBconst\fP size_t \fBjsoncons::basic_output_format\fP< CharT >::default_indent = 4\fC [static]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
