.TH "jsoncons::json_type_traits< JsonT, typename JsonT::string_type >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jsoncons::json_type_traits< JsonT, typename JsonT::string_type >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json_type_traits\&.hpp>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef JsonT::string_type \fBstring_type\fP"
.br
.ti -1c
.RI "typedef string_type::allocator_type \fBstring_allocator\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBis\fP (\fBconst\fP JsonT &\fBrhs\fP) \fBJSONCONS_NOEXCEPT\fP"
.br
.ti -1c
.RI "static \fBstring_type\fP \fBas\fP (\fBconst\fP JsonT &\fBrhs\fP) \fBJSONCONS_NOEXCEPT\fP"
.br
.ti -1c
.RI "static \fBstring_type\fP \fBas\fP (\fBconst\fP JsonT &\fBrhs\fP, \fBconst\fP \fBstring_allocator\fP &allocator) \fBJSONCONS_NOEXCEPT\fP"
.br
.ti -1c
.RI "static void \fBassign\fP (JsonT &\fBlhs\fP, \fBconst\fP \fBstring_type\fP &\fBrhs\fP)"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<class JsonT > typedef string_type::allocator_type \fBjsoncons::json_type_traits\fP< JsonT, typename JsonT::string_type >::\fBstring_allocator\fP"

.SS "template<class JsonT > typedef JsonT::string_type \fBjsoncons::json_type_traits\fP< JsonT, typename JsonT::string_type >::\fBstring_type\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<class JsonT > static \fBstring_type\fP \fBjsoncons::json_type_traits\fP< JsonT, typename JsonT::string_type >::as (\fBconst\fP JsonT & rhs)\fC [inline]\fP, \fC [static]\fP"

.SS "template<class JsonT > static \fBstring_type\fP \fBjsoncons::json_type_traits\fP< JsonT, typename JsonT::string_type >::as (\fBconst\fP JsonT & rhs, \fBconst\fP \fBstring_allocator\fP & allocator)\fC [inline]\fP, \fC [static]\fP"

.SS "template<class JsonT > static void \fBjsoncons::json_type_traits\fP< JsonT, typename JsonT::string_type >::assign (JsonT & lhs, \fBconst\fP \fBstring_type\fP & rhs)\fC [inline]\fP, \fC [static]\fP"

.SS "template<class JsonT > static bool \fBjsoncons::json_type_traits\fP< JsonT, typename JsonT::string_type >::is (\fBconst\fP JsonT & rhs)\fC [inline]\fP, \fC [static]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
