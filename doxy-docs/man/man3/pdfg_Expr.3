.TH "pdfg::Expr" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pdfg::Expr
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <GraphIL\&.hpp>\fP
.PP
Inherited by \fBpdfg::Access\fP, \fBpdfg::Comp\fP, \fBpdfg::Condition\fP, \fBpdfg::Constr\fP, \fBpdfg::Func\fP, \fBpdfg::Int\fP, \fBpdfg::Iter\fP, \fBpdfg::Math\fP, \fBpdfg::Pointer\fP, \fBpdfg::Real\fP, \fBpdfg::Rel\fP, and \fBpdfg::Space\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBExpr\fP (\fBconst\fP string &\fBtext\fP='', char \fBtype\fP='E')"
.br
.ti -1c
.RI "\fBExpr\fP (\fBconst\fP \fBExpr\fP &other)"
.br
.ti -1c
.RI "virtual \fBExpr\fP & \fBoperator=\fP (\fBconst\fP \fBExpr\fP &other)"
.br
.ti -1c
.RI "virtual bool \fBis_iter\fP () \fBconst\fP"
.br
.ti -1c
.RI "virtual bool \fBis_func\fP () \fBconst\fP"
.br
.ti -1c
.RI "virtual bool \fBis_macro\fP () \fBconst\fP"
.br
.ti -1c
.RI "virtual bool \fBis_math\fP () \fBconst\fP"
.br
.ti -1c
.RI "virtual bool \fBis_number\fP () \fBconst\fP"
.br
.ti -1c
.RI "virtual bool \fBis_scalar\fP () \fBconst\fP"
.br
.ti -1c
.RI "virtual bool \fBis_space\fP () \fBconst\fP"
.br
.ti -1c
.RI "virtual string \fBtext\fP () \fBconst\fP"
.br
.ti -1c
.RI "virtual void \fBtext\fP (\fBconst\fP string &text)"
.br
.ti -1c
.RI "bool \fBempty\fP () \fBconst\fP"
.br
.ti -1c
.RI "char \fBtype\fP () \fBconst\fP"
.br
.ti -1c
.RI "virtual bool \fBless\fP (\fBconst\fP \fBExpr\fP &other) \fBconst\fP"
.br
.ti -1c
.RI "virtual bool \fBoperator<\fP (\fBconst\fP \fBExpr\fP &other) \fBconst\fP"
.br
.ti -1c
.RI "virtual bool \fBequals\fP (\fBconst\fP string &\fBtext\fP) \fBconst\fP"
.br
.ti -1c
.RI "virtual bool \fBequals\fP (\fBconst\fP \fBExpr\fP &other) \fBconst\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBcopy\fP (\fBconst\fP \fBExpr\fP &other)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "string \fB_text\fP"
.br
.ti -1c
.RI "char \fB_type\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "istream & \fBoperator>>\fP (istream &is, \fBExpr\fP &expr)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "pdfg::Expr::Expr (\fBconst\fP string & text = \fC''\fP, char type = \fC'E'\fP)\fC [inline]\fP, \fC [explicit]\fP"

.SS "pdfg::Expr::Expr (\fBconst\fP \fBExpr\fP & other)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void pdfg::Expr::copy (\fBconst\fP \fBExpr\fP & other)\fC [inline]\fP, \fC [protected]\fP"

.SS "bool pdfg::Expr::empty () const\fC [inline]\fP"

.SS "virtual bool pdfg::Expr::equals (\fBconst\fP \fBExpr\fP & other) const\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual bool pdfg::Expr::equals (\fBconst\fP string & text) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBpdfg::Iter\fP\&.
.SS "virtual bool pdfg::Expr::is_func () const\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual bool pdfg::Expr::is_iter () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBpdfg::Iter\fP\&.
.SS "virtual bool pdfg::Expr::is_macro () const\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual bool pdfg::Expr::is_math () const\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual bool pdfg::Expr::is_number () const\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual bool pdfg::Expr::is_scalar () const\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual bool pdfg::Expr::is_space () const\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual bool pdfg::Expr::less (\fBconst\fP \fBExpr\fP & other) const\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual bool pdfg::Expr::operator< (\fBconst\fP \fBExpr\fP & other) const\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual \fBExpr\fP& pdfg::Expr::operator= (\fBconst\fP \fBExpr\fP & other)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBpdfg::Comp\fP, \fBpdfg::Rel\fP, \fBpdfg::Space\fP, \fBpdfg::Access\fP, \fBpdfg::Constr\fP, \fBpdfg::Func\fP, \fBpdfg::Iter\fP, \fBpdfg::Math\fP, \fBpdfg::Pointer\fP, \fBpdfg::Real\fP, \fBpdfg::Int\fP, and \fBpdfg::Const\fP\&.
.SS "virtual string pdfg::Expr::text () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBpdfg::Space\fP\&.
.SS "virtual void pdfg::Expr::text (\fBconst\fP string & text)\fC [inline]\fP, \fC [virtual]\fP"

.SS "char pdfg::Expr::type () const\fC [inline]\fP"

.SH "Friends And Related Function Documentation"
.PP 
.SS "istream& operator>> (istream & is, \fBExpr\fP & expr)\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "string pdfg::Expr::_text\fC [protected]\fP"

.SS "char pdfg::Expr::_type\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
