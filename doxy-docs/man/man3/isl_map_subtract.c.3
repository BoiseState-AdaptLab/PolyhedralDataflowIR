.TH "lib/isl/isl_map_subtract.c" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/isl/isl_map_subtract.c
.SH SYNOPSIS
.br
.PP
\fC#include <isl_map_private\&.h>\fP
.br
\fC#include <isl_seq\&.h>\fP
.br
\fC#include <isl/set\&.h>\fP
.br
\fC#include <isl/map\&.h>\fP
.br
\fC#include 'isl_tab\&.h'\fP
.br
\fC#include <isl_point_private\&.h>\fP
.br
\fC#include <isl_vec_private\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBisl_diff_collector\fP"
.br
.ti -1c
.RI "struct \fBisl_subtract_diff_collector\fP"
.br
.ti -1c
.RI "struct \fBisl_is_empty_diff_collector\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fB__isl_give\fP \fBisl_map\fP * \fBisl_map_subtract\fP (\fB__isl_take\fP \fBisl_map\fP *\fBmap1\fP, \fB__isl_take\fP \fBisl_map\fP *\fBmap2\fP)"
.br
.ti -1c
.RI "struct \fBisl_set\fP * \fBisl_set_subtract\fP (struct \fBisl_set\fP *\fBset1\fP, struct \fBisl_set\fP *\fBset2\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_map\fP * \fBisl_map_subtract_domain\fP (\fB__isl_take\fP \fBisl_map\fP *\fBmap\fP, \fB__isl_take\fP \fBisl_set\fP *dom)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_map\fP * \fBisl_map_subtract_range\fP (\fB__isl_take\fP \fBisl_map\fP *\fBmap\fP, \fB__isl_take\fP \fBisl_set\fP *dom)"
.br
.ti -1c
.RI "int \fBisl_basic_map_plain_is_singleton\fP (\fB__isl_keep\fP \fBisl_basic_map\fP *\fBbmap\fP)"
.br
.ti -1c
.RI "int \fBisl_map_plain_is_singleton\fP (\fB__isl_keep\fP \fBisl_map\fP *\fBmap\fP)"
.br
.ti -1c
.RI "\fBisl_bool\fP \fBisl_map_is_subset\fP (\fB__isl_keep\fP \fBisl_map\fP *\fBmap1\fP, \fB__isl_keep\fP \fBisl_map\fP *\fBmap2\fP)"
.br
.ti -1c
.RI "\fBisl_bool\fP \fBisl_set_is_subset\fP (\fB__isl_keep\fP \fBisl_set\fP *\fBset1\fP, \fB__isl_keep\fP \fBisl_set\fP *\fBset2\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_map\fP * \fBisl_map_make_disjoint\fP (\fB__isl_take\fP \fBisl_map\fP *\fBmap\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_set\fP * \fBisl_set_make_disjoint\fP (\fB__isl_take\fP \fBisl_set\fP *\fBset\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_map\fP * \fBisl_map_complement\fP (\fB__isl_take\fP \fBisl_map\fP *\fBmap\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_set\fP * \fBisl_set_complement\fP (\fB__isl_take\fP \fBisl_set\fP *\fBset\fP)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int isl_basic_map_plain_is_singleton (\fB__isl_keep\fP \fBisl_basic_map\fP * bmap)"

.SS "\fB__isl_give\fP \fBisl_map\fP* isl_map_complement (\fB__isl_take\fP \fBisl_map\fP * map)"

.SS "\fBisl_bool\fP isl_map_is_subset (\fB__isl_keep\fP \fBisl_map\fP * map1, \fB__isl_keep\fP \fBisl_map\fP * map2)"

.SS "\fB__isl_give\fP \fBisl_map\fP* isl_map_make_disjoint (\fB__isl_take\fP \fBisl_map\fP * map)"

.SS "int isl_map_plain_is_singleton (\fB__isl_keep\fP \fBisl_map\fP * map)"

.SS "\fB__isl_give\fP \fBisl_map\fP* isl_map_subtract (\fB__isl_take\fP \fBisl_map\fP * map1, \fB__isl_take\fP \fBisl_map\fP * map2)"

.SS "\fB__isl_give\fP \fBisl_map\fP* isl_map_subtract_domain (\fB__isl_take\fP \fBisl_map\fP * map, \fB__isl_take\fP \fBisl_set\fP * dom)"

.SS "\fB__isl_give\fP \fBisl_map\fP* isl_map_subtract_range (\fB__isl_take\fP \fBisl_map\fP * map, \fB__isl_take\fP \fBisl_set\fP * dom)"

.SS "\fB__isl_give\fP \fBisl_set\fP* isl_set_complement (\fB__isl_take\fP \fBisl_set\fP * set)"

.SS "\fBisl_bool\fP isl_set_is_subset (\fB__isl_keep\fP \fBisl_set\fP * set1, \fB__isl_keep\fP \fBisl_set\fP * set2)"

.SS "\fB__isl_give\fP \fBisl_set\fP* isl_set_make_disjoint (\fB__isl_take\fP \fBisl_set\fP * set)"

.SS "struct \fBisl_set\fP* isl_set_subtract (struct \fBisl_set\fP * set1, struct \fBisl_set\fP * set2)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
