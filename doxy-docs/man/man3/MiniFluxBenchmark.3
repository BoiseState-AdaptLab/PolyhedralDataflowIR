.TH "MiniFluxBenchmark" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MiniFluxBenchmark
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <MiniFluxBenchmark\-fuseAll\&.h>\fP
.PP
Inherits \fBBenchmark\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMiniFluxBenchmark\fP ()"
.br
.ti -1c
.RI "\fBMiniFluxBenchmark\fP (int argc, char *argv[])"
.br
.ti -1c
.RI "virtual \fB~MiniFluxBenchmark\fP ()"
.br
.ti -1c
.RI "void \fBinit\fP ()"
.br
.ti -1c
.RI "void \fBfinish\fP ()"
.br
.ti -1c
.RI "string \fBerror\fP ()"
.br
.ti -1c
.RI "void \fBtoCSV\fP ()"
.br
.ti -1c
.RI "\fBMiniFluxBenchmark\fP ()"
.br
.ti -1c
.RI "\fBMiniFluxBenchmark\fP (int argc, char *argv[])"
.br
.ti -1c
.RI "virtual \fB~MiniFluxBenchmark\fP ()"
.br
.ti -1c
.RI "void \fBinit\fP ()"
.br
.ti -1c
.RI "void \fBfinish\fP ()"
.br
.ti -1c
.RI "string \fBerror\fP ()"
.br
.ti -1c
.RI "void \fBtoCSV\fP ()"
.br
.ti -1c
.RI "\fBMiniFluxBenchmark\fP ()"
.br
.ti -1c
.RI "\fBMiniFluxBenchmark\fP (int argc, char *argv[])"
.br
.ti -1c
.RI "virtual \fB~MiniFluxBenchmark\fP ()"
.br
.ti -1c
.RI "void \fBinit\fP ()"
.br
.ti -1c
.RI "void \fBfinish\fP ()"
.br
.ti -1c
.RI "string \fBerror\fP ()"
.br
.ti -1c
.RI "void \fBtoCSV\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Constructor & Destructor Documentation"
.PP 
.SS "MiniFluxBenchmark::MiniFluxBenchmark ()"

.SS "MiniFluxBenchmark::MiniFluxBenchmark (int argc, char * argv[])"

.SS "MiniFluxBenchmark::~MiniFluxBenchmark ()\fC [virtual]\fP"

.SS "MiniFluxBenchmark::MiniFluxBenchmark ()"

.SS "MiniFluxBenchmark::MiniFluxBenchmark (int argc, char * argv[])"

.SS "virtual MiniFluxBenchmark::~MiniFluxBenchmark ()\fC [virtual]\fP"

.SS "MiniFluxBenchmark::MiniFluxBenchmark ()"

.SS "MiniFluxBenchmark::MiniFluxBenchmark (int argc, char * argv[])"

.SS "virtual MiniFluxBenchmark::~MiniFluxBenchmark ()\fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "string MiniFluxBenchmark::error ()\fC [virtual]\fP"

.PP
Implements \fBBenchmark\fP\&.
.SS "string MiniFluxBenchmark::error ()\fC [virtual]\fP"

.PP
Implements \fBBenchmark\fP\&.
.SS "string MiniFluxBenchmark::error ()\fC [virtual]\fP"

.PP
Implements \fBBenchmark\fP\&.
.SS "void MiniFluxBenchmark::finish ()\fC [virtual]\fP"

.PP
Implements \fBBenchmark\fP\&.
.SS "void MiniFluxBenchmark::finish ()\fC [virtual]\fP"

.PP
Implements \fBBenchmark\fP\&.
.SS "void MiniFluxBenchmark::finish ()\fC [virtual]\fP"

.PP
Implements \fBBenchmark\fP\&.
.SS "void MiniFluxBenchmark::init ()\fC [virtual]\fP"

.PP
Implements \fBBenchmark\fP\&.
.SS "void MiniFluxBenchmark::init ()\fC [virtual]\fP"

.PP
Implements \fBBenchmark\fP\&.
.SS "void MiniFluxBenchmark::init ()\fC [virtual]\fP"

.PP
Implements \fBBenchmark\fP\&.
.SS "void MiniFluxBenchmark::toCSV ()"

.SS "void MiniFluxBenchmark::toCSV ()"

.SS "void MiniFluxBenchmark::toCSV ()"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
