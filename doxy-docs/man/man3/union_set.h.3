.TH "lib/isl/include/isl/union_set.h" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/isl/include/isl/union_set.h
.SH SYNOPSIS
.br
.PP
\fC#include <isl/point\&.h>\fP
.br
\fC#include <isl/union_map\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "unsigned \fBisl_union_set_dim\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset, enum \fBisl_dim_type\fP type)"
.br
.ti -1c
.RI "\fB__isl_constructor\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_from_basic_set\fP (\fB__isl_take\fP \fBisl_basic_set\fP *bset)"
.br
.ti -1c
.RI "\fB__isl_constructor\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_from_set\fP (\fB__isl_take\fP \fBisl_set\fP *\fBset\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_empty\fP (\fB__isl_take\fP \fBisl_space\fP *\fBdim\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_copy\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_null\fP \fBisl_union_set\fP * \fBisl_union_set_free\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fBisl_ctx\fP * \fBisl_union_set_get_ctx\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_space\fP * \fBisl_union_set_get_space\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_reset_user\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_universe\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_set\fP * \fBisl_union_set_params\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_detect_equalities\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_affine_hull\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_polyhedral_hull\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_remove_redundancies\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_simple_hull\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_coalesce\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_compute_divs\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_lexmin\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_lexmax\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_add_set\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset, \fB__isl_take\fP \fBisl_set\fP *\fBset\fP)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_union\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset1, \fB__isl_take\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_subtract\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset1, \fB__isl_take\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_intersect\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset1, \fB__isl_take\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_intersect_params\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset, \fB__isl_take\fP \fBisl_set\fP *\fBset\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_product\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset1, \fB__isl_take\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_gist\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset, \fB__isl_take\fP \fBisl_union_set\fP *\fBcontext\fP)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_gist_params\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset, \fB__isl_take\fP \fBisl_set\fP *\fBset\fP)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_apply\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset, \fB__isl_take\fP \fBisl_union_map\fP *umap)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_preimage_multi_aff\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset, \fB__isl_take\fP \fBisl_multi_aff\fP *\fBma\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_preimage_pw_multi_aff\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset, \fB__isl_take\fP \fBisl_pw_multi_aff\fP *pma)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_preimage_union_pw_multi_aff\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset, \fB__isl_take\fP \fBisl_union_pw_multi_aff\fP *upma)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_project_out\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset, enum \fBisl_dim_type\fP type, unsigned first, unsigned \fBn\fP)"
.br
.ti -1c
.RI "\fBisl_bool\fP \fBisl_union_set_is_params\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fBisl_bool\fP \fBisl_union_set_is_empty\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fBisl_bool\fP \fBisl_union_set_is_subset\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset1, \fB__isl_keep\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fBisl_bool\fP \fBisl_union_set_is_equal\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset1, \fB__isl_keep\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "\fBisl_bool\fP \fBisl_union_set_is_disjoint\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset1, \fB__isl_keep\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fBisl_bool\fP \fBisl_union_set_is_strict_subset\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset1, \fB__isl_keep\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "int \fBisl_union_set_n_set\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fBisl_stat\fP \fBisl_union_set_foreach_set\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset, \fBisl_stat\fP(*\fBfn\fP)(\fB__isl_take\fP \fBisl_set\fP *\fBset\fP, void *\fBuser\fP), void *\fBuser\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP int \fBisl_union_set_contains\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset, \fB__isl_keep\fP \fBisl_space\fP *\fBdim\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_set\fP * \fBisl_union_set_extract_set\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset, \fB__isl_take\fP \fBisl_space\fP *\fBdim\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_set\fP * \fBisl_set_from_union_set\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fBisl_stat\fP \fBisl_union_set_foreach_point\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset, \fBisl_stat\fP(*\fBfn\fP)(\fB__isl_take\fP \fBisl_point\fP *pnt, void *\fBuser\fP), void *\fBuser\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_basic_set\fP * \fBisl_union_set_sample\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_export\fP \fB__isl_give\fP \fBisl_point\fP * \fBisl_union_set_sample_point\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_constructor\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_from_point\fP (\fB__isl_take\fP \fBisl_point\fP *pnt)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_lift\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_map\fP * \fBisl_union_set_lex_lt_union_set\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset1, \fB__isl_take\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_map\fP * \fBisl_union_set_lex_le_union_set\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset1, \fB__isl_take\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_map\fP * \fBisl_union_set_lex_gt_union_set\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset1, \fB__isl_take\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_map\fP * \fBisl_union_set_lex_ge_union_set\fP (\fB__isl_take\fP \fBisl_union_set\fP *uset1, \fB__isl_take\fP \fBisl_union_set\fP *uset2)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_coefficients\fP (\fB__isl_take\fP \fBisl_union_set\fP *bset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_solutions\fP (\fB__isl_take\fP \fBisl_union_set\fP *bset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_read_from_file\fP (\fBisl_ctx\fP *ctx, FILE *input)"
.br
.ti -1c
.RI "\fB__isl_constructor\fP \fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_read_from_str\fP (\fBisl_ctx\fP *ctx, \fBconst\fP char *\fBstr\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP char * \fBisl_union_set_to_str\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_printer\fP * \fBisl_printer_print_union_set\fP (\fB__isl_take\fP \fBisl_printer\fP *\fBp\fP, \fB__isl_keep\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "void \fBisl_union_set_dump\fP (\fB__isl_keep\fP \fBisl_union_set\fP *uset)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_set\fP * \fBisl_union_set_list_union\fP (\fB__isl_take\fP \fBisl_union_set_list\fP *list)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fB__isl_give\fP \fBisl_printer\fP* isl_printer_print_union_set (\fB__isl_take\fP \fBisl_printer\fP * p, \fB__isl_keep\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_set\fP* isl_set_from_union_set (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_add_set (\fB__isl_take\fP \fBisl_union_set\fP * uset, \fB__isl_take\fP \fBisl_set\fP * set)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_affine_hull (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_apply (\fB__isl_take\fP \fBisl_union_set\fP * uset, \fB__isl_take\fP \fBisl_union_map\fP * umap)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_coalesce (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_coefficients (\fB__isl_take\fP \fBisl_union_set\fP * bset)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_compute_divs (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP int isl_union_set_contains (\fB__isl_keep\fP \fBisl_union_set\fP * uset, \fB__isl_keep\fP \fBisl_space\fP * dim)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_copy (\fB__isl_keep\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_detect_equalities (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "unsigned isl_union_set_dim (\fB__isl_keep\fP \fBisl_union_set\fP * uset, enum \fBisl_dim_type\fP type)"

.SS "void isl_union_set_dump (\fB__isl_keep\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_empty (\fB__isl_take\fP \fBisl_space\fP * dim)"

.SS "\fB__isl_give\fP \fBisl_set\fP* isl_union_set_extract_set (\fB__isl_keep\fP \fBisl_union_set\fP * uset, \fB__isl_take\fP \fBisl_space\fP * dim)"

.SS "\fB__isl_export\fP \fBisl_stat\fP isl_union_set_foreach_point (\fB__isl_keep\fP \fBisl_union_set\fP * uset, \fBisl_stat\fP(*)(\fB__isl_take\fP \fBisl_point\fP *pnt, void *\fBuser\fP) fn, void * user)"

.SS "\fB__isl_export\fP \fBisl_stat\fP isl_union_set_foreach_set (\fB__isl_keep\fP \fBisl_union_set\fP * uset, \fBisl_stat\fP(*)(\fB__isl_take\fP \fBisl_set\fP *\fBset\fP, void *\fBuser\fP) fn, void * user)"

.SS "\fB__isl_null\fP \fBisl_union_set\fP* isl_union_set_free (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_constructor\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_from_basic_set (\fB__isl_take\fP \fBisl_basic_set\fP * bset)"

.SS "\fB__isl_constructor\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_from_point (\fB__isl_take\fP \fBisl_point\fP * pnt)"

.SS "\fB__isl_constructor\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_from_set (\fB__isl_take\fP \fBisl_set\fP * set)"

.SS "\fBisl_ctx\fP* isl_union_set_get_ctx (\fB__isl_keep\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_space\fP* isl_union_set_get_space (\fB__isl_keep\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_gist (\fB__isl_take\fP \fBisl_union_set\fP * uset, \fB__isl_take\fP \fBisl_union_set\fP * context)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_gist_params (\fB__isl_take\fP \fBisl_union_set\fP * uset, \fB__isl_take\fP \fBisl_set\fP * set)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_intersect (\fB__isl_take\fP \fBisl_union_set\fP * uset1, \fB__isl_take\fP \fBisl_union_set\fP * uset2)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_intersect_params (\fB__isl_take\fP \fBisl_union_set\fP * uset, \fB__isl_take\fP \fBisl_set\fP * set)"

.SS "\fBisl_bool\fP isl_union_set_is_disjoint (\fB__isl_keep\fP \fBisl_union_set\fP * uset1, \fB__isl_keep\fP \fBisl_union_set\fP * uset2)"

.SS "\fB__isl_export\fP \fBisl_bool\fP isl_union_set_is_empty (\fB__isl_keep\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_export\fP \fBisl_bool\fP isl_union_set_is_equal (\fB__isl_keep\fP \fBisl_union_set\fP * uset1, \fB__isl_keep\fP \fBisl_union_set\fP * uset2)"

.SS "\fBisl_bool\fP isl_union_set_is_params (\fB__isl_keep\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_export\fP \fBisl_bool\fP isl_union_set_is_strict_subset (\fB__isl_keep\fP \fBisl_union_set\fP * uset1, \fB__isl_keep\fP \fBisl_union_set\fP * uset2)"

.SS "\fB__isl_export\fP \fBisl_bool\fP isl_union_set_is_subset (\fB__isl_keep\fP \fBisl_union_set\fP * uset1, \fB__isl_keep\fP \fBisl_union_set\fP * uset2)"

.SS "\fB__isl_give\fP \fBisl_union_map\fP* isl_union_set_lex_ge_union_set (\fB__isl_take\fP \fBisl_union_set\fP * uset1, \fB__isl_take\fP \fBisl_union_set\fP * uset2)"

.SS "\fB__isl_give\fP \fBisl_union_map\fP* isl_union_set_lex_gt_union_set (\fB__isl_take\fP \fBisl_union_set\fP * uset1, \fB__isl_take\fP \fBisl_union_set\fP * uset2)"

.SS "\fB__isl_give\fP \fBisl_union_map\fP* isl_union_set_lex_le_union_set (\fB__isl_take\fP \fBisl_union_set\fP * uset1, \fB__isl_take\fP \fBisl_union_set\fP * uset2)"

.SS "\fB__isl_give\fP \fBisl_union_map\fP* isl_union_set_lex_lt_union_set (\fB__isl_take\fP \fBisl_union_set\fP * uset1, \fB__isl_take\fP \fBisl_union_set\fP * uset2)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_lexmax (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_lexmin (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_lift (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_list_union (\fB__isl_take\fP \fBisl_union_set_list\fP * list)"

.SS "int isl_union_set_n_set (\fB__isl_keep\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_set\fP* isl_union_set_params (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_polyhedral_hull (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_preimage_multi_aff (\fB__isl_take\fP \fBisl_union_set\fP * uset, \fB__isl_take\fP \fBisl_multi_aff\fP * ma)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_preimage_pw_multi_aff (\fB__isl_take\fP \fBisl_union_set\fP * uset, \fB__isl_take\fP \fBisl_pw_multi_aff\fP * pma)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_preimage_union_pw_multi_aff (\fB__isl_take\fP \fBisl_union_set\fP * uset, \fB__isl_take\fP \fBisl_union_pw_multi_aff\fP * upma)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_product (\fB__isl_take\fP \fBisl_union_set\fP * uset1, \fB__isl_take\fP \fBisl_union_set\fP * uset2)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_project_out (\fB__isl_take\fP \fBisl_union_set\fP * uset, enum \fBisl_dim_type\fP type, unsigned first, unsigned n)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_read_from_file (\fBisl_ctx\fP * ctx, FILE * input)"

.SS "\fB__isl_constructor\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_read_from_str (\fBisl_ctx\fP * ctx, \fBconst\fP char * str)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_remove_redundancies (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_reset_user (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_basic_set\fP* isl_union_set_sample (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_point\fP* isl_union_set_sample_point (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_simple_hull (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_solutions (\fB__isl_take\fP \fBisl_union_set\fP * bset)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_subtract (\fB__isl_take\fP \fBisl_union_set\fP * uset1, \fB__isl_take\fP \fBisl_union_set\fP * uset2)"

.SS "\fB__isl_give\fP char* isl_union_set_to_str (\fB__isl_keep\fP \fBisl_union_set\fP * uset)"

.SS "\fB__isl_export\fP \fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_union (\fB__isl_take\fP \fBisl_union_set\fP * uset1, \fB__isl_take\fP \fBisl_union_set\fP * uset2)"

.SS "\fB__isl_give\fP \fBisl_union_set\fP* isl_union_set_universe (\fB__isl_take\fP \fBisl_union_set\fP * uset)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
