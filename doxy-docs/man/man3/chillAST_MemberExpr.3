.TH "chillAST_MemberExpr" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
chillAST_MemberExpr
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <chill_ast\&.hh>\fP
.PP
Inherits \fBchillAST_node\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCHILL_ASTNODE_TYPE\fP \fBgetType\fP () override"
.br
.ti -1c
.RI "\fBchillAST_MemberExpr\fP ()"
.br
.ti -1c
.RI "\fBchillAST_MemberExpr\fP (\fBchillAST_node\fP *bas, \fBconst\fP char *mem, void *unique, \fBCHILL_MEMBER_EXP_TYPE\fP \fBt\fP=\fBCHILL_MEMBER_EXP_DOT\fP)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBconst\fP \fBchillAST_MemberExpr\fP &)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBconst\fP \fBchillAST_MemberExpr\fP &)"
.br
.ti -1c
.RI "\fBchillAST_node\fP * \fBconstantFold\fP () override"
.br
.RI "Folding constant, to some degree\&. "
.ti -1c
.RI "\fBchillAST_node\fP * \fBclone\fP () override"
.br
.ti -1c
.RI "void \fBgatherArrayRefs\fP (std::vector< \fBchillAST_ArraySubscriptExpr\fP * > &refs, bool writtento) override"
.br
.ti -1c
.RI "void \fBgatherScalarRefs\fP (std::vector< \fBchillAST_DeclRefExpr\fP * > &refs, bool writtento) override"
.br
.ti -1c
.RI "void \fBgatherVarDecls\fP (vector< \fBchillAST_VarDecl\fP * > &decls) override"
.br
.RI "gather ACTUAL variable declarations "
.ti -1c
.RI "void \fBgatherVarDeclsMore\fP (vector< \fBchillAST_VarDecl\fP * > &decls) override"
.br
.ti -1c
.RI "void \fBgatherScalarVarDecls\fP (vector< \fBchillAST_VarDecl\fP * > &decls) override"
.br
.RI "gather ACTUAL scalar variable declarations "
.ti -1c
.RI "void \fBgatherArrayVarDecls\fP (vector< \fBchillAST_VarDecl\fP * > &decls) override"
.br
.RI "gather ACTUAL array variable declarations "
.ti -1c
.RI "void \fBreplaceVarDecls\fP (\fBchillAST_VarDecl\fP *olddecl, \fBchillAST_VarDecl\fP *newdecl) override"
.br
.ti -1c
.RI "bool \fBfindLoopIndexesToReplace\fP (\fBchillAST_SymbolTable\fP *symtab, bool forcesync=false) override"
.br
.RI "this just looks for ForStmts with preferred index metacomment attached "
.ti -1c
.RI "\fBchillAST_VarDecl\fP * \fBgetUnderlyingVarDecl\fP () override"
.br
.ti -1c
.RI "void \fBreplaceChild\fP (\fBchillAST_node\fP *old, \fBchillAST_node\fP *newchild) override"
.br
.ti -1c
.RI "void \fBsetType\fP (\fBCHILL_MEMBER_EXP_TYPE\fP \fBt\fP)"
.br
.ti -1c
.RI "\fBCHILL_MEMBER_EXP_TYPE\fP \fBgetType\fP (\fBCHILL_MEMBER_EXP_TYPE\fP \fBt\fP)"
.br
.ti -1c
.RI "\fBchillAST_VarDecl\fP * \fBmultibase\fP () override"
.br
.RI "Find the base declaration that this node refers to\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBchillAST_Child\fP< \fBchillAST_node\fP > \fBbase\fP"
.br
.ti -1c
.RI "char * \fBmember\fP"
.br
.ti -1c
.RI "char * \fBprintstring\fP"
.br
.ti -1c
.RI "void * \fBuniquePtr\fP"
.br
.ti -1c
.RI "\fBCHILL_MEMBER_EXP_TYPE\fP \fBexptype\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Constructor & Destructor Documentation"
.PP 
.SS "chillAST_MemberExpr::chillAST_MemberExpr ()"

.SS "chillAST_MemberExpr::chillAST_MemberExpr (\fBchillAST_node\fP * bas, \fBconst\fP char * mem, void * unique, \fBCHILL_MEMBER_EXP_TYPE\fP t = \fC\fBCHILL_MEMBER_EXP_DOT\fP\fP)"

.SH "Member Function Documentation"
.PP 
.SS "class \fBchillAST_node\fP * chillAST_MemberExpr::clone ()\fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "class \fBchillAST_node\fP * chillAST_MemberExpr::constantFold ()\fC [override]\fP, \fC [virtual]\fP"

.PP
Folding constant, to some degree\&. We should need to delegate this to the backend compiler 
.PP
\fBReturns\fP
.RS 4
This node 
.RE
.PP

.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "bool chillAST_MemberExpr::findLoopIndexesToReplace (\fBchillAST_SymbolTable\fP * symtab, bool forcesync = \fCfalse\fP)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
this just looks for ForStmts with preferred index metacomment attached 
.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "void chillAST_MemberExpr::gatherArrayRefs (std::vector< \fBchillAST_ArraySubscriptExpr\fP * > & refs, bool writtento)\fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "void chillAST_MemberExpr::gatherArrayVarDecls (vector< \fBchillAST_VarDecl\fP * > & decls)\fC [override]\fP, \fC [virtual]\fP"

.PP
gather ACTUAL array variable declarations 
.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "void chillAST_MemberExpr::gatherScalarRefs (std::vector< \fBchillAST_DeclRefExpr\fP * > & refs, bool writtento)\fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "void chillAST_MemberExpr::gatherScalarVarDecls (vector< \fBchillAST_VarDecl\fP * > & decls)\fC [override]\fP, \fC [virtual]\fP"

.PP
gather ACTUAL scalar variable declarations 
.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "void chillAST_MemberExpr::gatherVarDecls (vector< \fBchillAST_VarDecl\fP * > & decls)\fC [override]\fP, \fC [virtual]\fP"

.PP
gather ACTUAL variable declarations 
.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "void chillAST_MemberExpr::gatherVarDeclsMore (vector< \fBchillAST_VarDecl\fP * > & decls)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "\fBCHILL_ASTNODE_TYPE\fP chillAST_MemberExpr::getType ()\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "\fBCHILL_MEMBER_EXP_TYPE\fP chillAST_MemberExpr::getType (\fBCHILL_MEMBER_EXP_TYPE\fP t)\fC [inline]\fP"

.SS "\fBchillAST_VarDecl\fP * chillAST_MemberExpr::getUnderlyingVarDecl ()\fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "\fBchillAST_VarDecl\fP * chillAST_MemberExpr::multibase ()\fC [override]\fP, \fC [virtual]\fP"

.PP
Find the base declaration that this node refers to\&. This will step through:
.IP "\(bu" 2
ArraySubscriptExpression
.IP "\(bu" 2
MemberExpression 
.PP

.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "bool chillAST_MemberExpr::operator!= (\fBconst\fP \fBchillAST_MemberExpr\fP & other)"

.SS "bool chillAST_MemberExpr::operator== (\fBconst\fP \fBchillAST_MemberExpr\fP & other)"

.SS "void chillAST_MemberExpr::replaceChild (\fBchillAST_node\fP * old, \fBchillAST_node\fP * newchild)\fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "void chillAST_MemberExpr::replaceVarDecls (\fBchillAST_VarDecl\fP * olddecl, \fBchillAST_VarDecl\fP * newdecl)\fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBchillAST_node\fP\&.
.SS "void chillAST_MemberExpr::setType (\fBCHILL_MEMBER_EXP_TYPE\fP t)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBchillAST_Child\fP<\fBchillAST_node\fP> chillAST_MemberExpr::base"

.SS "\fBCHILL_MEMBER_EXP_TYPE\fP chillAST_MemberExpr::exptype"

.SS "char* chillAST_MemberExpr::member"

.SS "char* chillAST_MemberExpr::printstring"

.SS "void* chillAST_MemberExpr::uniquePtr"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
