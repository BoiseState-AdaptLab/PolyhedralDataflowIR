.TH "jsoncons::serializable_any< CharT, Alloc >::any_handle_impl< T >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jsoncons::serializable_any< CharT, Alloc >::any_handle_impl< T >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json\&.hpp>\fP
.PP
Inherits \fBjsoncons::serializable_any< CharT, Alloc >::any_handle\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBany_handle_impl\fP (\fBT\fP value, \fBconst\fP Alloc &allocator=Alloc())"
.br
.ti -1c
.RI "virtual \fBany_handle\fP * \fBclone\fP (\fBconst\fP Alloc &allocator) \fBconst\fP"
.br
.ti -1c
.RI "virtual void \fBto_stream\fP (\fBbasic_json_output_handler\fP< CharT > &os) \fBconst\fP"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBT\fP \fBvalue_\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename CharT , class Alloc > template<class T > \fBjsoncons::serializable_any\fP< CharT, Alloc >::\fBany_handle_impl\fP< \fBT\fP >::\fBany_handle_impl\fP (\fBT\fP value, \fBconst\fP Alloc & allocator = \fCAlloc()\fP)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename CharT , class Alloc > template<class T > virtual \fBany_handle\fP* \fBjsoncons::serializable_any\fP< CharT, Alloc >::\fBany_handle_impl\fP< \fBT\fP >::clone (\fBconst\fP Alloc & allocator) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBjsoncons::serializable_any< CharT, Alloc >::any_handle\fP\&.
.SS "template<typename CharT , class Alloc > template<class T > virtual void \fBjsoncons::serializable_any\fP< CharT, Alloc >::\fBany_handle_impl\fP< \fBT\fP >::to_stream (\fBbasic_json_output_handler\fP< CharT > & os) const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBjsoncons::serializable_any< CharT, Alloc >::any_handle\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename CharT , class Alloc > template<class T > \fBT\fP \fBjsoncons::serializable_any\fP< CharT, Alloc >::\fBany_handle_impl\fP< \fBT\fP >::value_"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
