.TH "OA::UnionFindUniverse" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
OA::UnionFindUniverse
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <UnionFindUniverse\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBUnionFindUniverse\fP (unsigned int highWaterMark)"
.br
.ti -1c
.RI "\fB~UnionFindUniverse\fP ()"
.br
.ti -1c
.RI "void \fBUnion\fP (int \fBi\fP, int \fBj\fP, int \fBk\fP)"
.br
.ti -1c
.RI "int \fBFind\fP (int \fBi\fP)"
.br
.RI "returns what set i is in "
.in -1c
.SH "Detailed Description"
.PP 
Here is example usage of this class:
.PP
\fBOA::UnionFindUniverse\fP ufset(10);
.PP
ufset\&.Union( ufset\&.Find(1), ufset\&.Find(5), ufset\&.Find(5) ) 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "OA::UnionFindUniverse::UnionFindUniverse (unsigned int highWaterMark)"

.SS "OA::UnionFindUniverse::~UnionFindUniverse ()"

.SH "Member Function Documentation"
.PP 
.SS "int OA::UnionFindUniverse::Find (int i)"

.PP
returns what set i is in 
.SS "void OA::UnionFindUniverse::Union (int i, int j, int k)"
merge set i with set j and name it k if you want to merge the sets that a and b are in then you need to call Union( Find(a), Find(b), \&.\&.\&.) 

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
