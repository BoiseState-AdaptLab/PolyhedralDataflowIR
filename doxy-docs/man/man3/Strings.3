.TH "Strings" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Strings
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Strings\&.hpp>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBin\fP (\fBconst\fP string &input, \fBconst\fP string &\fBsub\fP, bool \fBwords\fP=false)"
.br
.ti -1c
.RI "static vector< std::string > \fBsplit\fP (\fBconst\fP string &\fBstr\fP, char delim=' ')"
.br
.ti -1c
.RI "static vector< std::string > \fBsplit\fP (\fBconst\fP string &\fBstr\fP, \fBconst\fP string &delim)"
.br
.ti -1c
.RI "static vector< std::string > \fBsplit\fP (\fBconst\fP string &\fBstr\fP, \fBconst\fP vector< char > &delims)"
.br
.ti -1c
.RI "template<typename T  = string> static string \fBjoin\fP (\fBconst\fP vector< \fBT\fP > &items, \fBconst\fP string &delim='\\n')"
.br
.ti -1c
.RI "static vector< std::string > \fBfilter\fP (\fBconst\fP vector< string > &items, \fBconst\fP string &pattern, bool \fBnegate\fP=false)"
.br
.ti -1c
.RI "static string \fBltrim\fP (\fBconst\fP string &\fBstr\fP)"
.br
.ti -1c
.RI "static string \fBltrim\fP (\fBconst\fP string &\fBstr\fP, char tchar)"
.br
.ti -1c
.RI "static string \fBltrim\fP (\fBconst\fP string &\fBstr\fP, initializer_list< char > tchars)"
.br
.ti -1c
.RI "static string \fBrtrim\fP (\fBconst\fP string &\fBstr\fP)"
.br
.ti -1c
.RI "static string \fBrtrim\fP (\fBconst\fP string &\fBstr\fP, char tchar)"
.br
.ti -1c
.RI "static string \fBrtrim\fP (\fBconst\fP string &\fBstr\fP, initializer_list< char > tchars)"
.br
.ti -1c
.RI "static string \fBtrim\fP (\fBconst\fP string &\fBstr\fP)"
.br
.ti -1c
.RI "static string \fBtrim\fP (\fBconst\fP string &\fBstr\fP, char tchar)"
.br
.ti -1c
.RI "static string \fBtrim\fP (\fBconst\fP string &\fBstr\fP, initializer_list< char > tchars)"
.br
.ti -1c
.RI "static string \fBremoveWhitespace\fP (\fBconst\fP string &\fBin\fP)"
.br
.ti -1c
.RI "static bool \fBisDigit\fP (\fBconst\fP string &\fBstr\fP)"
.br
.ti -1c
.RI "static bool \fBisDigit\fP (\fBconst\fP char ch)"
.br
.ti -1c
.RI "static bool \fBisNumber\fP (\fBconst\fP string &\fBstr\fP)"
.br
.ti -1c
.RI "static bool \fBisOperator\fP (\fBconst\fP char ch)"
.br
.ti -1c
.RI "static vector< string > \fBwords\fP (\fBconst\fP string &\fBin\fP)"
.br
.ti -1c
.RI "static string \fBlower\fP (\fBconst\fP string &\fBstr\fP)"
.br
.ti -1c
.RI "static string \fBupper\fP (\fBconst\fP string &\fBstr\fP)"
.br
.ti -1c
.RI "static string \fBreplace\fP (\fBconst\fP string &input, \fBconst\fP string &from, \fBconst\fP string &to, bool \fBwords\fP=false)"
.br
.ti -1c
.RI "static string \fBdigits\fP (\fBconst\fP string &input)"
.br
.ti -1c
.RI "static string \fBnumber\fP (\fBconst\fP string &input)"
.br
.ti -1c
.RI "static string \fBfixParens\fP (\fBconst\fP string &input)"
.br
.ti -1c
.RI "template<typename T > static string \fBstr\fP (\fBconst\fP vector< \fBT\fP > &vec)"
.br
.ti -1c
.RI "template<typename T > static \fBT\fP \fBconvert\fP (\fBconst\fP string &\fBin\fP)"
.br
.ti -1c
.RI "template<typename T > static vector< string > \fBconvert\fP (\fBconst\fP vector< \fBT\fP > &vec)"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "template<typename T > static \fBT\fP Strings::convert (\fBconst\fP string & in)\fC [inline]\fP, \fC [static]\fP"

.SS "template<typename T > static vector<string> Strings::convert (\fBconst\fP vector< \fBT\fP > & vec)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::digits (\fBconst\fP string & input)\fC [inline]\fP, \fC [static]\fP"

.SS "static vector<std::string> Strings::filter (\fBconst\fP vector< string > & items, \fBconst\fP string & pattern, bool negate = \fCfalse\fP)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::fixParens (\fBconst\fP string & input)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool Strings::in (\fBconst\fP string & input, \fBconst\fP string & sub, bool words = \fCfalse\fP)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool Strings::isDigit (\fBconst\fP char ch)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool Strings::isDigit (\fBconst\fP string & str)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool Strings::isNumber (\fBconst\fP string & str)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool Strings::isOperator (\fBconst\fP char ch)\fC [inline]\fP, \fC [static]\fP"

.SS "template<typename T  = string> static string Strings::join (\fBconst\fP vector< \fBT\fP > & items, \fBconst\fP string & delim = \fC'\\n'\fP)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::lower (\fBconst\fP string & str)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::ltrim (\fBconst\fP string & str)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::ltrim (\fBconst\fP string & str, char tchar)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::ltrim (\fBconst\fP string & str, initializer_list< char > tchars)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::number (\fBconst\fP string & input)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::removeWhitespace (\fBconst\fP string & in)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::replace (\fBconst\fP string & input, \fBconst\fP string & from, \fBconst\fP string & to, bool words = \fCfalse\fP)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::rtrim (\fBconst\fP string & str)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::rtrim (\fBconst\fP string & str, char tchar)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::rtrim (\fBconst\fP string & str, initializer_list< char > tchars)\fC [inline]\fP, \fC [static]\fP"

.SS "static vector<std::string> Strings::split (\fBconst\fP string & str, char delim = \fC' '\fP)\fC [inline]\fP, \fC [static]\fP"

.SS "static vector<std::string> Strings::split (\fBconst\fP string & str, \fBconst\fP string & delim)\fC [inline]\fP, \fC [static]\fP"

.SS "static vector<std::string> Strings::split (\fBconst\fP string & str, \fBconst\fP vector< char > & delims)\fC [inline]\fP, \fC [static]\fP"

.SS "template<typename T > static string Strings::str (\fBconst\fP vector< \fBT\fP > & vec)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::trim (\fBconst\fP string & str)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::trim (\fBconst\fP string & str, char tchar)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::trim (\fBconst\fP string & str, initializer_list< char > tchars)\fC [inline]\fP, \fC [static]\fP"

.SS "static string Strings::upper (\fBconst\fP string & str)\fC [inline]\fP, \fC [static]\fP"

.SS "static vector<string> Strings::words (\fBconst\fP string & in)\fC [inline]\fP, \fC [static]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
