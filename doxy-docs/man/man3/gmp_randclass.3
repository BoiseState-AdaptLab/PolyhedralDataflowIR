.TH "gmp_randclass" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gmp_randclass
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gmpxx\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBgmp_randclass\fP (\fBgmp_randalg_t\fP alg, unsigned long int \fBsize\fP)"
.br
.ti -1c
.RI "\fBgmp_randclass\fP (\fB__gmp_randinit_default_t\fP *\fBf\fP)"
.br
.ti -1c
.RI "\fBgmp_randclass\fP (\fB__gmp_randinit_lc_2exp_t\fP *\fBf\fP, \fBmpz_class\fP \fBz\fP, unsigned long int l1, \fBmp_bitcnt_t\fP l2)"
.br
.ti -1c
.RI "\fBgmp_randclass\fP (\fB__gmp_randinit_lc_2exp_size_t\fP *\fBf\fP, \fBmp_bitcnt_t\fP \fBsize\fP)"
.br
.ti -1c
.RI "\fB~gmp_randclass\fP ()"
.br
.ti -1c
.RI "void \fBseed\fP ()"
.br
.ti -1c
.RI "void \fBseed\fP (unsigned long int s)"
.br
.ti -1c
.RI "void \fBseed\fP (\fBconst\fP \fBmpz_class\fP &\fBz\fP)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP< \fBmpz_t\fP, \fB__gmp_urandomb_value\fP > \fBget_z_bits\fP (\fBmp_bitcnt_t\fP l)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP< \fBmpz_t\fP, \fB__gmp_urandomb_value\fP > \fBget_z_bits\fP (\fBconst\fP \fBmpz_class\fP &\fBz\fP)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP< \fBmpz_t\fP, \fB__gmp_urandomm_value\fP > \fBget_z_range\fP (\fBconst\fP \fBmpz_class\fP &\fBz\fP)"
.br
.ti -1c
.RI "\fB__gmp_expr\fP< \fBmpf_t\fP, \fB__gmp_urandomb_value\fP > \fBget_f\fP (\fBmp_bitcnt_t\fP prec=0)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "gmp_randclass::gmp_randclass (\fBgmp_randalg_t\fP alg, unsigned long int size)\fC [inline]\fP"

.SS "gmp_randclass::gmp_randclass (\fB__gmp_randinit_default_t\fP * f)\fC [inline]\fP"

.SS "gmp_randclass::gmp_randclass (\fB__gmp_randinit_lc_2exp_t\fP * f, \fBmpz_class\fP z, unsigned long int l1, \fBmp_bitcnt_t\fP l2)\fC [inline]\fP"

.SS "gmp_randclass::gmp_randclass (\fB__gmp_randinit_lc_2exp_size_t\fP * f, \fBmp_bitcnt_t\fP size)\fC [inline]\fP"

.SS "gmp_randclass::~gmp_randclass ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fB__gmp_expr\fP<\fBmpf_t\fP, \fB__gmp_urandomb_value\fP> gmp_randclass::get_f (\fBmp_bitcnt_t\fP prec = \fC0\fP)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP<\fBmpz_t\fP, \fB__gmp_urandomb_value\fP> gmp_randclass::get_z_bits (\fBconst\fP \fBmpz_class\fP & z)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP<\fBmpz_t\fP, \fB__gmp_urandomb_value\fP> gmp_randclass::get_z_bits (\fBmp_bitcnt_t\fP l)\fC [inline]\fP"

.SS "\fB__gmp_expr\fP<\fBmpz_t\fP, \fB__gmp_urandomm_value\fP> gmp_randclass::get_z_range (\fBconst\fP \fBmpz_class\fP & z)\fC [inline]\fP"

.SS "void gmp_randclass::seed ()"

.SS "void gmp_randclass::seed (\fBconst\fP \fBmpz_class\fP & z)\fC [inline]\fP"

.SS "void gmp_randclass::seed (unsigned long int s)\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
