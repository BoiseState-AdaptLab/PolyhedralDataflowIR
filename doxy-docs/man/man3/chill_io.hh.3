.TH "lib/chill/chill_io.hh" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/chill/chill_io.hh
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBchill_fprintf\fP(\fBf\fP, \&.\&.\&.)   do { fprintf(\fBf\fP, __VA_ARGS__); fflush(\fBf\fP); } while (false)"
.br
.ti -1c
.RI "#define \fBchill_printf\fP(\&.\&.\&.)   do { printf(__VA_ARGS__); fflush(stdout); } while (false)"
.br
.ti -1c
.RI "#define \fBchill_error_fprintf\fP(\fBf\fP, \&.\&.\&.)   \fBchill_fprintf\fP(\fBf\fP, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBchill_error_printf\fP(\&.\&.\&.)   \fBchill_fprintf\fP(stderr, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBdebug_enable\fP(\&.\&.\&.)   do {} while (false)"
.br
.ti -1c
.RI "#define \fBdebug_define\fP(\&.\&.\&.)   do {} while (false)"
.br
.ti -1c
.RI "#define \fBdebug_fprintf\fP(\&.\&.\&.)   do {} while (false)"
.br
.ti -1c
.RI "#define \fBdebug_printf\fP(\&.\&.\&.)   do {} while (false)"
.br
.ti -1c
.RI "#define \fBdebug_begin\fP   \fBif\fP (false){"
.br
.ti -1c
.RI "#define \fBdebug_end\fP   }"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define chill_error_fprintf(\fBf\fP,  \&.\&.\&.)   \fBchill_fprintf\fP(\fBf\fP, __VA_ARGS__)"

.SS "#define chill_error_printf( \&.\&.\&.)   \fBchill_fprintf\fP(stderr, __VA_ARGS__)"

.SS "#define chill_fprintf(\fBf\fP,  \&.\&.\&.)   do { fprintf(\fBf\fP, __VA_ARGS__); fflush(\fBf\fP); } while (false)"

.SS "#define chill_printf( \&.\&.\&.)   do { printf(__VA_ARGS__); fflush(stdout); } while (false)"

.SS "#define debug_begin   \fBif\fP (false){"

.SS "#define debug_define( \&.\&.\&.)   do {} while (false)"

.SS "#define debug_enable( \&.\&.\&.)   do {} while (false)"

.SS "#define debug_end   }"

.SS "#define debug_fprintf( \&.\&.\&.)   do {} while (false)"

.SS "#define debug_printf( \&.\&.\&.)   do {} while (false)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
