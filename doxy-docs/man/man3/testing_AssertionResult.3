.TH "testing::AssertionResult" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
testing::AssertionResult
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gtest\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAssertionResult\fP (\fBconst\fP \fBAssertionResult\fP &other)"
.br
.ti -1c
.RI "template<typename T > \fBAssertionResult\fP (\fBconst\fP \fBT\fP &success, typename \fBinternal::EnableIf\fP< !\fBinternal::ImplicitlyConvertible\fP< \fBT\fP, \fBAssertionResult\fP >::value >::type *=\fBNULL\fP)"
.br
.ti -1c
.RI "\fBAssertionResult\fP & \fBoperator=\fP (\fBAssertionResult\fP other)"
.br
.ti -1c
.RI "\fBoperator bool\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBAssertionResult\fP \fBoperator!\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP char * \fBmessage\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP char * \fBfailure_message\fP () \fBconst\fP"
.br
.ti -1c
.RI "template<typename T > \fBAssertionResult\fP & \fBoperator<<\fP (\fBconst\fP \fBT\fP &value)"
.br
.ti -1c
.RI "\fBAssertionResult\fP & \fBoperator<<\fP (::std::ostream &(*basic_manipulator)(::std::ostream &stream))"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "testing::AssertionResult::AssertionResult (\fBconst\fP \fBAssertionResult\fP & other)"

.SS "template<typename T > testing::AssertionResult::AssertionResult (\fBconst\fP \fBT\fP & success, typename \fBinternal::EnableIf\fP< !\fBinternal::ImplicitlyConvertible\fP< \fBT\fP, \fBAssertionResult\fP >::value >::type * = \fC\fBNULL\fP\fP)\fC [inline]\fP, \fC [explicit]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBconst\fP char* testing::AssertionResult::failure_message () const\fC [inline]\fP"

.SS "\fBconst\fP char* testing::AssertionResult::message () const\fC [inline]\fP"

.SS "testing::AssertionResult::operator bool () const\fC [inline]\fP"

.SS "\fBAssertionResult\fP testing::AssertionResult::operator! () const"

.SS "\fBAssertionResult\fP& testing::AssertionResult::operator<< (::std::ostream &(*)(::std::ostream &stream) basic_manipulator)\fC [inline]\fP"

.SS "template<typename T > \fBAssertionResult\fP& testing::AssertionResult::operator<< (\fBconst\fP \fBT\fP & value)\fC [inline]\fP"

.SS "\fBAssertionResult\fP& testing::AssertionResult::operator= (\fBAssertionResult\fP other)\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
