.TH "jsoncons::basic_json_deserializer< JsonT >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jsoncons::basic_json_deserializer< JsonT >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json_deserializer\&.hpp>\fP
.PP
Inherits \fBjsoncons::basic_json_input_handler< JsonT::char_type >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBbasic_json_deserializer\fP (\fBconst\fP string_allocator &sa=string_allocator(), \fBconst\fP allocator_type &allocator=allocator_type())"
.br
.ti -1c
.RI "bool \fBis_valid\fP () \fBconst\fP"
.br
.ti -1c
.RI "JsonT \fBget_result\fP ()"
.br
.ti -1c
.RI "JsonT & \fBroot\fP ()"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class JsonT > \fBjsoncons::basic_json_deserializer\fP< JsonT >::\fBbasic_json_deserializer\fP (\fBconst\fP string_allocator & sa = \fCstring_allocator()\fP, \fBconst\fP allocator_type & allocator = \fCallocator_type()\fP)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<class JsonT > JsonT \fBjsoncons::basic_json_deserializer\fP< JsonT >::get_result ()\fC [inline]\fP"

.SS "template<class JsonT > bool \fBjsoncons::basic_json_deserializer\fP< JsonT >::is_valid () const\fC [inline]\fP"

.SS "template<class JsonT > JsonT& \fBjsoncons::basic_json_deserializer\fP< JsonT >::root ()\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
