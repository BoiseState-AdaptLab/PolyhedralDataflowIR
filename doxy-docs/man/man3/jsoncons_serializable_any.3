.TH "jsoncons::serializable_any< CharT, Alloc >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jsoncons::serializable_any< CharT, Alloc >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json\&.hpp>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBany_handle\fP"
.br
.ti -1c
.RI "class \fBany_handle_impl\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Alloc \fBallocator_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBserializable_any\fP (\fBconst\fP Alloc &allocator=Alloc())"
.br
.ti -1c
.RI "\fBserializable_any\fP (\fBconst\fP \fBserializable_any\fP &\fBval\fP)"
.br
.ti -1c
.RI "\fBserializable_any\fP (\fBconst\fP \fBserializable_any\fP &\fBval\fP, \fBconst\fP Alloc &allocator)"
.br
.ti -1c
.RI "\fBserializable_any\fP (\fBserializable_any\fP &&\fBval\fP)"
.br
.ti -1c
.RI "\fBserializable_any\fP (\fBserializable_any\fP &&\fBval\fP, \fBconst\fP Alloc &allocator)"
.br
.ti -1c
.RI "\fB~serializable_any\fP ()"
.br
.ti -1c
.RI "template<typename T > \fBserializable_any\fP (\fBT\fP \fBval\fP)"
.br
.ti -1c
.RI "Alloc \fBget_allocator\fP () \fBconst\fP"
.br
.ti -1c
.RI "template<typename T > \fBtype_wrapper\fP< \fBT\fP >::reference \fBcast\fP ()"
.br
.ti -1c
.RI "template<typename T > \fBtype_wrapper\fP< \fBT\fP >::const_reference \fBcast\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBserializable_any\fP & \fBoperator=\fP (\fBserializable_any\fP \fBrhs\fP)"
.br
.ti -1c
.RI "void \fBto_stream\fP (\fBbasic_json_output_handler\fP< CharT > &os) \fBconst\fP"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "Alloc \fBallocator_\fP"
.br
.ti -1c
.RI "\fBany_handle\fP * \fBimpl_\fP"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename CharT , class Alloc > typedef Alloc \fBjsoncons::serializable_any\fP< CharT, Alloc >::\fBallocator_type\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename CharT , class Alloc > \fBjsoncons::serializable_any\fP< CharT, Alloc >::\fBserializable_any\fP (\fBconst\fP Alloc & allocator = \fCAlloc()\fP)\fC [inline]\fP"

.SS "template<typename CharT , class Alloc > \fBjsoncons::serializable_any\fP< CharT, Alloc >::\fBserializable_any\fP (\fBconst\fP \fBserializable_any\fP< CharT, Alloc > & val)\fC [inline]\fP"

.SS "template<typename CharT , class Alloc > \fBjsoncons::serializable_any\fP< CharT, Alloc >::\fBserializable_any\fP (\fBconst\fP \fBserializable_any\fP< CharT, Alloc > & val, \fBconst\fP Alloc & allocator)\fC [inline]\fP"

.SS "template<typename CharT , class Alloc > \fBjsoncons::serializable_any\fP< CharT, Alloc >::\fBserializable_any\fP (\fBserializable_any\fP< CharT, Alloc > && val)\fC [inline]\fP"

.SS "template<typename CharT , class Alloc > \fBjsoncons::serializable_any\fP< CharT, Alloc >::\fBserializable_any\fP (\fBserializable_any\fP< CharT, Alloc > && val, \fBconst\fP Alloc & allocator)\fC [inline]\fP"

.SS "template<typename CharT , class Alloc > \fBjsoncons::serializable_any\fP< CharT, Alloc >::~\fBserializable_any\fP ()\fC [inline]\fP"

.SS "template<typename CharT , class Alloc > template<typename T > \fBjsoncons::serializable_any\fP< CharT, Alloc >::\fBserializable_any\fP (\fBT\fP val)\fC [inline]\fP, \fC [explicit]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename CharT , class Alloc > template<typename T > \fBtype_wrapper\fP<\fBT\fP>::reference \fBjsoncons::serializable_any\fP< CharT, Alloc >::cast ()\fC [inline]\fP"

.SS "template<typename CharT , class Alloc > template<typename T > \fBtype_wrapper\fP<\fBT\fP>::const_reference \fBjsoncons::serializable_any\fP< CharT, Alloc >::cast () const\fC [inline]\fP"

.SS "template<typename CharT , class Alloc > Alloc \fBjsoncons::serializable_any\fP< CharT, Alloc >::get_allocator () const\fC [inline]\fP"

.SS "template<typename CharT , class Alloc > \fBserializable_any\fP& \fBjsoncons::serializable_any\fP< CharT, Alloc >::operator= (\fBserializable_any\fP< CharT, Alloc > rhs)\fC [inline]\fP"

.SS "template<typename CharT , class Alloc > void \fBjsoncons::serializable_any\fP< CharT, Alloc >::to_stream (\fBbasic_json_output_handler\fP< CharT > & os) const\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename CharT , class Alloc > Alloc \fBjsoncons::serializable_any\fP< CharT, Alloc >::allocator_"

.SS "template<typename CharT , class Alloc > \fBany_handle\fP* \fBjsoncons::serializable_any\fP< CharT, Alloc >::impl_"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
