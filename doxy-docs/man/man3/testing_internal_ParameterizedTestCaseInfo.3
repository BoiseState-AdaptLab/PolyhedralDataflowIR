.TH "testing::internal::ParameterizedTestCaseInfo< TestCase >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
testing::internal::ParameterizedTestCaseInfo< TestCase >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gtest\-param\-util\&.h>\fP
.PP
Inherits \fBtesting::internal::ParameterizedTestCaseInfoBase\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef TestCase::ParamType \fBParamType\fP"
.br
.ti -1c
.RI "typedef \fBParamNameGenFunc\fP< \fBParamType\fP >::\fBType\fP \fBParamNameGeneratorFunc\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "typedef \fBParamGenerator\fP (GeneratorCreationFunc)()"
.br
.ti -1c
.RI "\fBParameterizedTestCaseInfo\fP (\fBconst\fP char *\fBname\fP, \fBCodeLocation\fP code_location)"
.br
.ti -1c
.RI "virtual \fBconst\fP std::string & \fBGetTestCaseName\fP () \fBconst\fP"
.br
.ti -1c
.RI "virtual \fBTypeId\fP \fBGetTestCaseTypeId\fP () \fBconst\fP"
.br
.ti -1c
.RI "void \fBAddTestPattern\fP (\fBconst\fP char *test_case_name, \fBconst\fP char *test_base_name, \fBTestMetaFactoryBase\fP< \fBParamType\fP > *meta_factory)"
.br
.ti -1c
.RI "int \fBAddTestCaseInstantiation\fP (\fBconst\fP std::string &instantiation_name, GeneratorCreationFunc *func, \fBParamNameGeneratorFunc\fP *name_func, \fBconst\fP char *file, int line)"
.br
.ti -1c
.RI "virtual void \fBRegisterTests\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Member Typedef Documentation"
.PP 
.SS "template<class TestCase > typedef \fBParamNameGenFunc\fP<\fBParamType\fP>::\fBType\fP \fBtesting::internal::ParameterizedTestCaseInfo\fP< \fBTestCase\fP >::\fBParamNameGeneratorFunc\fP"

.SS "template<class TestCase > typedef TestCase::ParamType \fBtesting::internal::ParameterizedTestCaseInfo\fP< \fBTestCase\fP >::\fBParamType\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class TestCase > \fBtesting::internal::ParameterizedTestCaseInfo\fP< \fBTestCase\fP >::\fBParameterizedTestCaseInfo\fP (\fBconst\fP char * name, \fBCodeLocation\fP code_location)\fC [inline]\fP, \fC [explicit]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<class TestCase > int \fBtesting::internal::ParameterizedTestCaseInfo\fP< \fBTestCase\fP >::AddTestCaseInstantiation (\fBconst\fP std::string & instantiation_name, GeneratorCreationFunc * func, \fBParamNameGeneratorFunc\fP * name_func, \fBconst\fP char * file, int line)\fC [inline]\fP"

.SS "template<class TestCase > void \fBtesting::internal::ParameterizedTestCaseInfo\fP< \fBTestCase\fP >::AddTestPattern (\fBconst\fP char * test_case_name, \fBconst\fP char * test_base_name, \fBTestMetaFactoryBase\fP< \fBParamType\fP > * meta_factory)\fC [inline]\fP"

.SS "template<class TestCase > virtual \fBconst\fP std::string& \fBtesting::internal::ParameterizedTestCaseInfo\fP< \fBTestCase\fP >::GetTestCaseName () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::internal::ParameterizedTestCaseInfoBase\fP\&.
.SS "template<class TestCase > virtual \fBTypeId\fP \fBtesting::internal::ParameterizedTestCaseInfo\fP< \fBTestCase\fP >::GetTestCaseTypeId () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::internal::ParameterizedTestCaseInfoBase\fP\&.
.SS "template<class TestCase > typedef \fBtesting::internal::ParameterizedTestCaseInfo\fP< \fBTestCase\fP >::\fBParamGenerator\fP (GeneratorCreationFunc)"

.SS "template<class TestCase > virtual void \fBtesting::internal::ParameterizedTestCaseInfo\fP< \fBTestCase\fP >::RegisterTests ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtesting::internal::ParameterizedTestCaseInfoBase\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
