.TH "lib/isl/isl_bound.c" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/isl/isl_bound.c
.SH SYNOPSIS
.br
.PP
\fC#include <isl_ctx_private\&.h>\fP
.br
\fC#include <isl_map_private\&.h>\fP
.br
\fC#include <isl_bound\&.h>\fP
.br
\fC#include <isl_bernstein\&.h>\fP
.br
\fC#include <isl_range\&.h>\fP
.br
\fC#include <isl_polynomial_private\&.h>\fP
.br
\fC#include <isl_options_private\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBisl_union_bound_data\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fB__isl_give\fP \fBisl_pw_qpolynomial_fold\fP * \fBisl_pw_qpolynomial_fold_bound\fP (\fB__isl_take\fP \fBisl_pw_qpolynomial_fold\fP *pwf, int *tight)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_pw_qpolynomial_fold\fP * \fBisl_pw_qpolynomial_bound\fP (\fB__isl_take\fP \fBisl_pw_qpolynomial\fP *\fBpwqp\fP, enum \fBisl_fold\fP type, int *tight)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_union_pw_qpolynomial_fold\fP * \fBisl_union_pw_qpolynomial_bound\fP (\fB__isl_take\fP \fBisl_union_pw_qpolynomial\fP *upwqp, enum \fBisl_fold\fP type, int *tight)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fB__isl_give\fP \fBisl_pw_qpolynomial_fold\fP* isl_pw_qpolynomial_bound (\fB__isl_take\fP \fBisl_pw_qpolynomial\fP * pwqp, enum \fBisl_fold\fP type, int * tight)"

.SS "\fB__isl_give\fP \fBisl_pw_qpolynomial_fold\fP* isl_pw_qpolynomial_fold_bound (\fB__isl_take\fP \fBisl_pw_qpolynomial_fold\fP * pwf, int * tight)"

.SS "\fB__isl_give\fP \fBisl_union_pw_qpolynomial_fold\fP* isl_union_pw_qpolynomial_bound (\fB__isl_take\fP \fBisl_union_pw_qpolynomial\fP * upwqp, enum \fBisl_fold\fP type, int * tight)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
