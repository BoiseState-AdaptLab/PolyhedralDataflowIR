.TH "testing::internal::RE" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
testing::internal::RE
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gtest\-port\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRE\fP (\fBconst\fP \fBRE\fP &other)"
.br
.ti -1c
.RI "\fBRE\fP (\fBconst\fP ::std::string &regex)"
.br
.ti -1c
.RI "\fBRE\fP (\fBconst\fP char *regex)"
.br
.ti -1c
.RI "\fB~RE\fP ()"
.br
.ti -1c
.RI "\fBconst\fP char * \fBpattern\fP () \fBconst\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBFullMatch\fP (\fBconst\fP ::std::string &\fBstr\fP, \fBconst\fP \fBRE\fP &re)"
.br
.ti -1c
.RI "static bool \fBPartialMatch\fP (\fBconst\fP ::std::string &\fBstr\fP, \fBconst\fP \fBRE\fP &re)"
.br
.ti -1c
.RI "static bool \fBFullMatch\fP (\fBconst\fP char *\fBstr\fP, \fBconst\fP \fBRE\fP &re)"
.br
.ti -1c
.RI "static bool \fBPartialMatch\fP (\fBconst\fP char *\fBstr\fP, \fBconst\fP \fBRE\fP &re)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "testing::internal::RE::RE (\fBconst\fP \fBRE\fP & other)\fC [inline]\fP"

.SS "testing::internal::RE::RE (\fBconst\fP ::std::string & regex)\fC [inline]\fP"

.SS "testing::internal::RE::RE (\fBconst\fP char * regex)\fC [inline]\fP"

.SS "testing::internal::RE::~RE ()"

.SH "Member Function Documentation"
.PP 
.SS "static bool testing::internal::RE::FullMatch (\fBconst\fP ::std::string & str, \fBconst\fP \fBRE\fP & re)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool testing::internal::RE::FullMatch (\fBconst\fP char * str, \fBconst\fP \fBRE\fP & re)\fC [static]\fP"

.SS "static bool testing::internal::RE::PartialMatch (\fBconst\fP ::std::string & str, \fBconst\fP \fBRE\fP & re)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool testing::internal::RE::PartialMatch (\fBconst\fP char * str, \fBconst\fP \fBRE\fP & re)\fC [static]\fP"

.SS "\fBconst\fP char* testing::internal::RE::pattern () const\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
