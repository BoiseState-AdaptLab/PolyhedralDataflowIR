.TH "IR_chillPointerArrayRef" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IR_chillPointerArrayRef
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ir_chill\&.hh>\fP
.PP
Inherits \fBIR_PointerArrayRef\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBIR_chillPointerArrayRef\fP (\fBconst\fP \fBIR_Code\fP *ir, \fBchillAST_ArraySubscriptExpr\fP *ase, bool \fBwrite\fP)"
.br
.ti -1c
.RI "bool \fBis_write\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBomega::CG_outputRepr\fP * \fBindex\fP (int \fBdim\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBIR_PointerSymbol\fP * \fBsymbol\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBconst\fP \fBIR_Ref\fP &that) \fBconst\fP"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBconst\fP \fBIR_Ref\fP &that) \fBconst\fP"
.br
.ti -1c
.RI "\fBomega::CG_outputRepr\fP * \fBconvert\fP ()"
.br
.ti -1c
.RI "\fBIR_Ref\fP * \fBclone\fP () \fBconst\fP"
.br
.RI "shallow copy "
.ti -1c
.RI "virtual void \fBDump\fP () \fBconst\fP"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBchillAST_ArraySubscriptExpr\fP * \fBchillASE\fP"
.br
.ti -1c
.RI "int \fBiswrite\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "IR_chillPointerArrayRef::IR_chillPointerArrayRef (\fBconst\fP \fBIR_Code\fP * ir, \fBchillAST_ArraySubscriptExpr\fP * ase, bool write)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBIR_Ref\fP * IR_chillPointerArrayRef::clone () const\fC [virtual]\fP"

.PP
shallow copy 
.PP
Implements \fBIR_Ref\fP\&.
.SS "\fBomega::CG_outputRepr\fP * IR_chillPointerArrayRef::convert ()\fC [virtual]\fP"

.PP
Implements \fBIR_Ref\fP\&.
.SS "void IR_chillPointerArrayRef::Dump () const\fC [virtual]\fP"

.PP
Reimplemented from \fBIR_Ref\fP\&.
.SS "\fBomega::CG_outputRepr\fP * IR_chillPointerArrayRef::index (int dim) const\fC [virtual]\fP"

.PP
Implements \fBIR_PointerArrayRef\fP\&.
.SS "bool IR_chillPointerArrayRef::is_write () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBIR_Ref\fP\&.
.SS "bool IR_chillPointerArrayRef::operator!= (\fBconst\fP \fBIR_Ref\fP & that) const\fC [virtual]\fP"

.PP
Reimplemented from \fBIR_Ref\fP\&.
.SS "bool IR_chillPointerArrayRef::operator== (\fBconst\fP \fBIR_Ref\fP & that) const\fC [virtual]\fP"

.PP
Implements \fBIR_Ref\fP\&.
.SS "\fBIR_PointerSymbol\fP * IR_chillPointerArrayRef::symbol () const\fC [virtual]\fP"

.PP
Implements \fBIR_PointerArrayRef\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBchillAST_ArraySubscriptExpr\fP* IR_chillPointerArrayRef::chillASE"

.SS "int IR_chillPointerArrayRef::iswrite"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
