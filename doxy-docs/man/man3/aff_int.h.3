.TH "lib/isl/include/isl/deprecated/aff_int.h" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/isl/include/isl/deprecated/aff_int.h
.SH SYNOPSIS
.br
.PP
\fC#include <isl/deprecated/int\&.h>\fP
.br
\fC#include <isl/aff_type\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBisl_aff_get_constant\fP (\fB__isl_keep\fP \fBisl_aff\fP *aff, \fBisl_int\fP *v)"
.br
.ti -1c
.RI "int \fBisl_aff_get_coefficient\fP (\fB__isl_keep\fP \fBisl_aff\fP *aff, enum \fBisl_dim_type\fP type, int \fBpos\fP, \fBisl_int\fP *v)"
.br
.ti -1c
.RI "int \fBisl_aff_get_denominator\fP (\fB__isl_keep\fP \fBisl_aff\fP *aff, \fBisl_int\fP *v)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_aff\fP * \fBisl_aff_set_constant\fP (\fB__isl_take\fP \fBisl_aff\fP *aff, \fBisl_int\fP v)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_aff\fP * \fBisl_aff_set_coefficient\fP (\fB__isl_take\fP \fBisl_aff\fP *aff, enum \fBisl_dim_type\fP type, int \fBpos\fP, \fBisl_int\fP v)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_aff\fP * \fBisl_aff_set_denominator\fP (\fB__isl_take\fP \fBisl_aff\fP *aff, \fBisl_int\fP v)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_aff\fP * \fBisl_aff_add_constant\fP (\fB__isl_take\fP \fBisl_aff\fP *aff, \fBisl_int\fP v)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_aff\fP * \fBisl_aff_add_constant_num\fP (\fB__isl_take\fP \fBisl_aff\fP *aff, \fBisl_int\fP v)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_aff\fP * \fBisl_aff_add_coefficient\fP (\fB__isl_take\fP \fBisl_aff\fP *aff, enum \fBisl_dim_type\fP type, int \fBpos\fP, \fBisl_int\fP v)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_aff\fP * \fBisl_aff_mod\fP (\fB__isl_take\fP \fBisl_aff\fP *aff, \fBisl_int\fP mod)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_aff\fP * \fBisl_aff_scale\fP (\fB__isl_take\fP \fBisl_aff\fP *aff, \fBisl_int\fP \fBf\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_aff\fP * \fBisl_aff_scale_down\fP (\fB__isl_take\fP \fBisl_aff\fP *aff, \fBisl_int\fP \fBf\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_pw_aff\fP * \fBisl_pw_aff_mod\fP (\fB__isl_take\fP \fBisl_pw_aff\fP *pwaff, \fBisl_int\fP mod)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_pw_aff\fP * \fBisl_pw_aff_scale\fP (\fB__isl_take\fP \fBisl_pw_aff\fP *pwaff, \fBisl_int\fP \fBf\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_pw_aff\fP * \fBisl_pw_aff_scale_down\fP (\fB__isl_take\fP \fBisl_pw_aff\fP *pwaff, \fBisl_int\fP \fBf\fP)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_multi_aff\fP * \fBisl_multi_aff_scale\fP (\fB__isl_take\fP \fBisl_multi_aff\fP *maff, \fBisl_int\fP \fBf\fP)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fB__isl_give\fP \fBisl_aff\fP* isl_aff_add_coefficient (\fB__isl_take\fP \fBisl_aff\fP * aff, enum \fBisl_dim_type\fP type, int pos, \fBisl_int\fP v)"

.SS "\fB__isl_give\fP \fBisl_aff\fP* isl_aff_add_constant (\fB__isl_take\fP \fBisl_aff\fP * aff, \fBisl_int\fP v)"

.SS "\fB__isl_give\fP \fBisl_aff\fP* isl_aff_add_constant_num (\fB__isl_take\fP \fBisl_aff\fP * aff, \fBisl_int\fP v)"

.SS "int isl_aff_get_coefficient (\fB__isl_keep\fP \fBisl_aff\fP * aff, enum \fBisl_dim_type\fP type, int pos, \fBisl_int\fP * v)"

.SS "int isl_aff_get_constant (\fB__isl_keep\fP \fBisl_aff\fP * aff, \fBisl_int\fP * v)"

.SS "int isl_aff_get_denominator (\fB__isl_keep\fP \fBisl_aff\fP * aff, \fBisl_int\fP * v)"

.SS "\fB__isl_give\fP \fBisl_aff\fP* isl_aff_mod (\fB__isl_take\fP \fBisl_aff\fP * aff, \fBisl_int\fP mod)"

.SS "\fB__isl_give\fP \fBisl_aff\fP* isl_aff_scale (\fB__isl_take\fP \fBisl_aff\fP * aff, \fBisl_int\fP f)"

.SS "\fB__isl_give\fP \fBisl_aff\fP* isl_aff_scale_down (\fB__isl_take\fP \fBisl_aff\fP * aff, \fBisl_int\fP f)"

.SS "\fB__isl_give\fP \fBisl_aff\fP* isl_aff_set_coefficient (\fB__isl_take\fP \fBisl_aff\fP * aff, enum \fBisl_dim_type\fP type, int pos, \fBisl_int\fP v)"

.SS "\fB__isl_give\fP \fBisl_aff\fP* isl_aff_set_constant (\fB__isl_take\fP \fBisl_aff\fP * aff, \fBisl_int\fP v)"

.SS "\fB__isl_give\fP \fBisl_aff\fP* isl_aff_set_denominator (\fB__isl_take\fP \fBisl_aff\fP * aff, \fBisl_int\fP v)"

.SS "\fB__isl_give\fP \fBisl_multi_aff\fP* isl_multi_aff_scale (\fB__isl_take\fP \fBisl_multi_aff\fP * maff, \fBisl_int\fP f)"

.SS "\fB__isl_give\fP \fBisl_pw_aff\fP* isl_pw_aff_mod (\fB__isl_take\fP \fBisl_pw_aff\fP * pwaff, \fBisl_int\fP mod)"

.SS "\fB__isl_give\fP \fBisl_pw_aff\fP* isl_pw_aff_scale (\fB__isl_take\fP \fBisl_pw_aff\fP * pwaff, \fBisl_int\fP f)"

.SS "\fB__isl_give\fP \fBisl_pw_aff\fP* isl_pw_aff_scale_down (\fB__isl_take\fP \fBisl_pw_aff\fP * pwaff, \fBisl_int\fP f)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
