.TH "iegenlib::VisitorProjectOut" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
iegenlib::VisitorProjectOut \- Vistor Classes used in projection process\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBVisitor\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVisitorProjectOut\fP (int itvar, int ia=0)"
.br
.ti -1c
.RI "void \fBpostVisitConjunction\fP (\fBiegenlib::Conjunction\fP *\fBc\fP)"
.br
.ti -1c
.RI "void \fBpostVisitSet\fP (\fBiegenlib::Set\fP *s)"
.br
.RI "Add Conjunctions in mnewConj to newSet\&. "
.ti -1c
.RI "void \fBpostVisitRelation\fP (\fBiegenlib::Relation\fP *r)"
.br
.RI "Add Conjunctions in mnewConj to newRelation\&. "
.ti -1c
.RI "\fBSet\fP * \fBgetSet\fP ()"
.br
.ti -1c
.RI "\fBRelation\fP * \fBgetRelation\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Vistor Classes used in projection process\&. 

The main class for projecting out tuple variables from affine Set/Relation We use ISL library to project out tvar from each conjunction 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "iegenlib::VisitorProjectOut::VisitorProjectOut (int itvar, int ia = \fC0\fP)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBRelation\fP* iegenlib::VisitorProjectOut::getRelation ()\fC [inline]\fP"

.SS "\fBSet\fP* iegenlib::VisitorProjectOut::getSet ()\fC [inline]\fP"

.SS "void iegenlib::VisitorProjectOut::postVisitConjunction (\fBiegenlib::Conjunction\fP * c)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBVisitor\fP\&.
.SS "void iegenlib::VisitorProjectOut::postVisitRelation (\fBiegenlib::Relation\fP * r)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Add Conjunctions in mnewConj to newRelation\&. 
.PP
Reimplemented from \fBVisitor\fP\&.
.SS "void iegenlib::VisitorProjectOut::postVisitSet (\fBiegenlib::Set\fP * s)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Add Conjunctions in mnewConj to newSet\&. 
.PP
Reimplemented from \fBVisitor\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
