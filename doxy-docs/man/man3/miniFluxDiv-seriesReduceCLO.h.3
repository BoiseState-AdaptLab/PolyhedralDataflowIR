.TH "artifact/include/mfd/miniFluxDiv-seriesReduceCLO.h" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
artifact/include/mfd/miniFluxDiv-seriesReduceCLO.h
.SH SYNOPSIS
.br
.PP
\fC#include 'MiniFluxUtil\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fB_MiniFluxDivData\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBTILE_SIZE\fP   8"
.br
.ti -1c
.RI "#define \fBTILE_MASK\fP   7"
.br
.ti -1c
.RI "#define \fBTILE_SIZE2\fP   16"
.br
.ti -1c
.RI "#define \fBTILE_MASK2\fP   15"
.br
.ti -1c
.RI "#define \fBVAL_FLUX1X\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)   *(\fBGET_FACE_VAL_X\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"
.br
.ti -1c
.RI "#define \fBVAL_FLUX1Y\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)   *(\fBGET_FACE_VAL_Y\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"
.br
.ti -1c
.RI "#define \fBVAL_FLUX1Z\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)   *(\fBGET_FACE_VAL_Z\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"
.br
.ti -1c
.RI "#define \fBVAL_FLUX2X\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)   *(\fBGET_FACE_VAL_X\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"
.br
.ti -1c
.RI "#define \fBVAL_FLUX2Y\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)   *(\fBGET_FACE_VAL_Y\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"
.br
.ti -1c
.RI "#define \fBVAL_FLUX2Z\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)   *(\fBGET_FACE_VAL_Z\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"
.br
.ti -1c
.RI "#define \fBVAL_DIFFX\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)   \fBPHI_OUT\fP(\fBc\fP,\fBz\fP,\fBy\fP,\fBx\fP)"
.br
.ti -1c
.RI "#define \fBVAL_DIFFY\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)   \fBPHI_OUT\fP(\fBc\fP,\fBz\fP,\fBy\fP,\fBx\fP)"
.br
.ti -1c
.RI "#define \fBVAL_DIFFZ\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)   \fBPHI_OUT\fP(\fBc\fP,\fBz\fP,\fBy\fP,\fBx\fP)"
.br
.ti -1c
.RI "#define \fBSTM_FLUX1X\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)"
.br
.ti -1c
.RI "#define \fBSTM_FLUX1Y\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)"
.br
.ti -1c
.RI "#define \fBSTM_FLUX1Z\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)"
.br
.ti -1c
.RI "#define \fBSTM_FLUX2X\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)"
.br
.ti -1c
.RI "#define \fBSTM_FLUX2Y\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)"
.br
.ti -1c
.RI "#define \fBSTM_FLUX2Z\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)"
.br
.ti -1c
.RI "#define \fBSTM_DIFFX\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)"
.br
.ti -1c
.RI "#define \fBSTM_DIFFY\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)"
.br
.ti -1c
.RI "#define \fBSTM_DIFFZ\fP(\fBc\fP,  \fBz\fP,  \fBy\fP,  \fBx\fP)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fB_MiniFluxDivData\fP \fBMiniFluxDivData\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBminiFluxDiv_alloc\fP (\fBMiniFluxDivData\fP *data)"
.br
.ti -1c
.RI "void \fBminiFluxDiv_kernel\fP (\fBReal\fP **old_boxes, \fBReal\fP **new_boxes, \fBMiniFluxDivData\fP *data)"
.br
.ti -1c
.RI "void \fBminiFluxDiv_free\fP (\fBMiniFluxDivData\fP *data)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define STM_DIFFX(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)"
\fBValue:\fP
.PP
.nf
    {\
    VAL_DIFFX(c,z,y,x) += ((VAL_FLUX2X(c,z,y,(x)+1)) - (VAL_FLUX2X(c,z,y,x)));\
}
.fi
.SS "#define STM_DIFFY(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)"
\fBValue:\fP
.PP
.nf
    {\
    VAL_DIFFY(c,z,y,x) += ((VAL_FLUX2Y(c,z,(y)+1,x)) - (VAL_FLUX2Y(c,z,y,x)));\
}
.fi
.SS "#define STM_DIFFZ(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)"
\fBValue:\fP
.PP
.nf
    {\
    VAL_DIFFZ(c,z,y,x) += ((VAL_FLUX2Z(c,(z)+1,y,x)) - (VAL_FLUX2Z(c,z,y,x)));\
}
.fi
.SS "#define STM_FLUX1X(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)"
\fBValue:\fP
.PP
.nf
    {\
    VAL_FLUX1X(c,z,y,x) = factor1*((PHI_IN(c,z,y,(x)-2)) +\
                          7*(PHI_IN(c,z,y,(x)-1) + (PHI_IN(c,z,y,x))) +\
                          (PHI_IN(c,z,y,(x)+1)));\
}
.fi
.SS "#define STM_FLUX1Y(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)"
\fBValue:\fP
.PP
.nf
    {\
    VAL_FLUX1Y(c,z,y,x) = factor1*((PHI_IN(c,z,(y)-2,x)) +\
                          7*(PHI_IN(c,z,(y)-1,x) + (PHI_IN(c,z,y,x))) +\
                          (PHI_IN(c,z,(y)+1,x)));\
}
.fi
.SS "#define STM_FLUX1Z(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)"
\fBValue:\fP
.PP
.nf
    {\
    VAL_FLUX1Z(c,z,y,x) = factor1*((PHI_IN(c,(z)-2,y,x)) +\
                          7*(PHI_IN(c,(z)-1,y,x) + (PHI_IN(c,z,y,x))) +\
                          (PHI_IN(c,(z)+1,y,x)));\
}
.fi
.SS "#define STM_FLUX2X(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)"
\fBValue:\fP
.PP
.nf
    {\
    VAL_FLUX2X(c,z,y,x) = VAL_FLUX1X(c,z,y,x) * factor2*(VAL_FLUX1X(2,z,y,x));\
}
.fi
.SS "#define STM_FLUX2Y(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)"
\fBValue:\fP
.PP
.nf
    {\
    VAL_FLUX2Y(c,z,y,x) = VAL_FLUX1Y(c,z,y,x) * factor2*(VAL_FLUX1Y(3,z,y,x));\
}
.fi
.SS "#define STM_FLUX2Z(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)"
\fBValue:\fP
.PP
.nf
    {\
    VAL_FLUX2Z(c,z,y,x) = VAL_FLUX1Z(c,z,y,x) * factor2*(VAL_FLUX1Z(4,z,y,x));\
}
.fi
.SS "#define TILE_MASK   7"

.SS "#define TILE_MASK2   15"

.SS "#define TILE_SIZE   8"

.SS "#define TILE_SIZE2   16"

.SS "#define VAL_DIFFX(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)   \fBPHI_OUT\fP(\fBc\fP,\fBz\fP,\fBy\fP,\fBx\fP)"

.SS "#define VAL_DIFFY(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)   \fBPHI_OUT\fP(\fBc\fP,\fBz\fP,\fBy\fP,\fBx\fP)"

.SS "#define VAL_DIFFZ(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)   \fBPHI_OUT\fP(\fBc\fP,\fBz\fP,\fBy\fP,\fBx\fP)"

.SS "#define VAL_FLUX1X(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)   *(\fBGET_FACE_VAL_X\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"

.SS "#define VAL_FLUX1Y(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)   *(\fBGET_FACE_VAL_Y\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"

.SS "#define VAL_FLUX1Z(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)   *(\fBGET_FACE_VAL_Z\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"

.SS "#define VAL_FLUX2X(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)   *(\fBGET_FACE_VAL_X\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"

.SS "#define VAL_FLUX2Y(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)   *(\fBGET_FACE_VAL_Y\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"

.SS "#define VAL_FLUX2Z(\fBc\fP, \fBz\fP, \fBy\fP, \fBx\fP)   *(\fBGET_FACE_VAL_Z\fP(g_cache,(\fBc\fP),(\fBz\fP),(\fBy\fP),(\fBx\fP)))"

.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fB_MiniFluxDivData\fP \fBMiniFluxDivData\fP"

.SH "Function Documentation"
.PP 
.SS "void miniFluxDiv_alloc (\fBMiniFluxDivData\fP * data)\fC [inline]\fP"

.SS "void miniFluxDiv_free (\fBMiniFluxDivData\fP * data)\fC [inline]\fP"

.SS "void miniFluxDiv_kernel (\fBReal\fP ** old_boxes, \fBReal\fP ** new_boxes, \fBMiniFluxDivData\fP * data)\fC [inline]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
