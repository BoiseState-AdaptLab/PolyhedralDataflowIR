.TH "lib/iegenlib/src/set_relation/environment.h" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/iegenlib/src/set_relation/environment.h \- Declarations for the Environment class\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <string>\fP
.br
\fC#include <map>\fP
.br
\fC#include <set>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <sstream>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include 'UninterpFunc\&.h'\fP
.br
\fC#include <util/util\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBiegenlib::Environment\fP"
.br
.ti -1c
.RI "class \fBiegenlib::UniQuantRule\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBiegenlib\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBiegenlib::UniQuantRuleType\fP { \fBiegenlib::Monotonicity\fP, \fBiegenlib::CoMonotonicity\fP, \fBiegenlib::Triangularity\fP, \fBiegenlib::FuncConsistency\fP, \fBiegenlib::TheOthers\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBiegenlib::setCurrEnv\fP ()"
.br
.RI "Resets the current environment to empty\&. "
.ti -1c
.RI "void \fBiegenlib::setCurrEnv\fP (std::string funcName, Set *\fBdomain\fP, Set *range, bool \fBbijective\fP)"
.br
.ti -1c
.RI "void \fBiegenlib::appendCurrEnv\fP (std::string funcName, Set *\fBdomain\fP, Set *range, bool \fBbijective\fP, MonotonicType monoType)"
.br
.ti -1c
.RI "std::string \fBiegenlib::queryInverseCurrEnv\fP (\fBconst\fP std::string funcName)"
.br
.RI "search this environment for a function inverse "
.ti -1c
.RI "Set * \fBiegenlib::queryDomainCurrEnv\fP (\fBconst\fP std::string funcName)"
.br
.ti -1c
.RI "Set * \fBiegenlib::queryRangeCurrEnv\fP (\fBconst\fP std::string funcName)"
.br
.ti -1c
.RI "MonotonicType \fBiegenlib::queryMonoTypeEnv\fP (\fBconst\fP std::string funcName)"
.br
.RI "search this environment for a function monotonicity type "
.ti -1c
.RI "unsigned int \fBiegenlib::queryRangeArityCurrEnv\fP (\fBconst\fP std::string funcName)"
.br
.RI "search this environment for a function range arity "
.ti -1c
.RI "void \fBiegenlib::addUniQuantRule\fP (UniQuantRule *uqRule)"
.br
.RI "add an universially quantified Rule to environment "
.ti -1c
.RI "int \fBiegenlib::queryNoUniQuantRules\fP ()"
.br
.ti -1c
.RI "UniQuantRule * \fBiegenlib::queryUniQuantRuleEnv\fP (int idx)"
.br
.RI "The environment still owns returned object (user should not delete it) "
.in -1c
.SH "Detailed Description"
.PP 
Declarations for the Environment class\&. 

The Environment class keeps track of information about function inverses, domains, ranges, and symbolic constant constraints\&.
.PP
\fBDate\fP
.RS 4
Started: 5/1/12 
.RE
.PP
.SH "$Revision:: 819                $: last committed revision"
.PP
.SH "$Date:: 2014-01-07 16:27:03 -0#$: date of last committed revision"
.PP
.SH "$Author:: mstrout              $: author of last committed revision"
.PP
\fBAuthors\fP
.RS 4
Michelle Strout
.RE
.PP
Copyright (c) 2012-2013, Colorado State University 
.br
 All rights reserved\&. 
.br
 See \&.\&./\&.\&./COPYING for details\&. 
.br
 
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
