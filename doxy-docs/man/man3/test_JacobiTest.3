.TH "test::JacobiTest" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
test::JacobiTest
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBtest::InspExecTest\fP\&.
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBJacobiTest\fP (\fBconst\fP string &\fBname\fP='JacobiTest')"
.br
.ti -1c
.RI "virtual \fB~JacobiTest\fP ()"
.br
.ti -1c
.RI "virtual void \fBSetUp\fP (initializer_list< string > args)"
.br
.ti -1c
.RI "virtual void \fBInspect\fP ()"
.br
.ti -1c
.RI "virtual void \fBExecute\fP ()"
.br
.ti -1c
.RI "virtual void \fBEvaluate\fP ()"
.br
.ti -1c
.RI "virtual void \fBAssert\fP ()"
.br
.ti -1c
.RI "virtual void \fBTearDown\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "unsigned \fB_nnz\fP"
.br
.ti -1c
.RI "unsigned \fB_nrow\fP"
.br
.ti -1c
.RI "unsigned \fB_ncol\fP"
.br
.ti -1c
.RI "unsigned \fB_maxiter\fP"
.br
.ti -1c
.RI "unsigned \fB_niter\fP"
.br
.ti -1c
.RI "unsigned \fB_niter_ref\fP"
.br
.ti -1c
.RI "unsigned * \fB_rows\fP"
.br
.ti -1c
.RI "unsigned * \fB_cols\fP"
.br
.ti -1c
.RI "double \fB_error\fP"
.br
.ti -1c
.RI "double \fB_err_ref\fP"
.br
.ti -1c
.RI "double \fB_tolerance\fP"
.br
.ti -1c
.RI "double * \fB_vals\fP"
.br
.ti -1c
.RI "double * \fB_x\fP"
.br
.ti -1c
.RI "double * \fB_b\fP"
.br
.ti -1c
.RI "\fBconst\fP double * \fB_x_ref\fP"
.br
.ti -1c
.RI "\fBconst\fP double * \fB_b_ref\fP"
.br
.ti -1c
.RI "VectorXd \fB_xVec\fP"
.br
.ti -1c
.RI "VectorXd \fB_bVec\fP"
.br
.ti -1c
.RI "SparseMatrix< double > \fB_Aspm\fP"
.br
.ti -1c
.RI "ConjugateGradient< SparseMatrix< double >, Lower|Upper > \fB_cg\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Constructor & Destructor Documentation"
.PP 
.SS "test::JacobiTest::JacobiTest (\fBconst\fP string & name = \fC'JacobiTest'\fP)\fC [inline]\fP, \fC [protected]\fP"

.SS "virtual test::JacobiTest::~JacobiTest ()\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "virtual void test::JacobiTest::Assert ()\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBtest::BenchmarkTest\fP\&.
.SS "virtual void test::JacobiTest::Evaluate ()\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Implements \fBtest::BenchmarkTest\fP\&.
.SS "virtual void test::JacobiTest::Execute ()\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Implements \fBtest::BenchmarkTest\fP\&.
.SS "virtual void test::JacobiTest::Inspect ()\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Implements \fBtest::InspExecTest\fP\&.
.SS "virtual void test::JacobiTest::SetUp (initializer_list< string > args)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBtest::BenchmarkTest\fP\&.
.SS "virtual void test::JacobiTest::TearDown ()\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBtesting::Test\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "SparseMatrix<double> test::JacobiTest::_Aspm\fC [protected]\fP"

.SS "double* test::JacobiTest::_b\fC [protected]\fP"

.SS "\fBconst\fP double* test::JacobiTest::_b_ref\fC [protected]\fP"

.SS "VectorXd test::JacobiTest::_bVec\fC [protected]\fP"

.SS "ConjugateGradient<SparseMatrix<double>, Lower|Upper> test::JacobiTest::_cg\fC [protected]\fP"

.SS "unsigned* test::JacobiTest::_cols\fC [protected]\fP"

.SS "double test::JacobiTest::_err_ref\fC [protected]\fP"

.SS "double test::JacobiTest::_error\fC [protected]\fP"

.SS "unsigned test::JacobiTest::_maxiter\fC [protected]\fP"

.SS "unsigned test::JacobiTest::_ncol\fC [protected]\fP"

.SS "unsigned test::JacobiTest::_niter\fC [protected]\fP"

.SS "unsigned test::JacobiTest::_niter_ref\fC [protected]\fP"

.SS "unsigned test::JacobiTest::_nnz\fC [protected]\fP"

.SS "unsigned test::JacobiTest::_nrow\fC [protected]\fP"

.SS "unsigned* test::JacobiTest::_rows\fC [protected]\fP"

.SS "double test::JacobiTest::_tolerance\fC [protected]\fP"

.SS "double* test::JacobiTest::_vals\fC [protected]\fP"

.SS "double* test::JacobiTest::_x\fC [protected]\fP"

.SS "\fBconst\fP double* test::JacobiTest::_x_ref\fC [protected]\fP"

.SS "VectorXd test::JacobiTest::_xVec\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
