.TH "lib/isl/isl_multi_templ.c" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/isl/isl_multi_templ.c
.SH SYNOPSIS
.br
.PP
\fC#include <isl_space_private\&.h>\fP
.br
\fC#include <isl/set\&.h>\fP
.br
\fC#include <isl_reordering\&.h>\fP
.br
\fC#include <isl_multi_macro\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMULTI_NAME\fP(\fBBASE\fP)   'isl_multi_' #BASE"
.br
.ti -1c
.RI "#define \fBxLIST\fP(\fBEL\fP)   \fBEL\fP ## _list"
.br
.ti -1c
.RI "#define \fBLIST\fP(\fBEL\fP)   \fBxLIST\fP(\fBEL\fP)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBisl_ctx\fP * \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), get_ctx)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_space\fP * \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), get_space)"
.br
.ti -1c
.RI "int \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), find_dim_by_name)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_space\fP * \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), get_domain_space)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBMULTI\fP (\fBBASE\fP)"
.br
.ti -1c
.RI "\fBisl_bool\fP \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), involves_dims)"
.br
.ti -1c
.RI "unsigned \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), \fBdim\fP)"
.br
.ti -1c
.RI "int \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), find_dim_by_id)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_id\fP * \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), get_dim_id)"
.br
.ti -1c
.RI "\fBconst\fP char * \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), get_tuple_name)"
.br
.ti -1c
.RI "\fBisl_bool\fP \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), has_tuple_id)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_id\fP * \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), get_tuple_id)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBEL\fP * \fBFN\fP (FN(\fBMULTI\fP(\fBBASE\fP), get), \fBBASE\fP)"
.br
.ti -1c
.RI "\fBisl_bool\fP \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), range_is_wrapping)"
.br
.ti -1c
.RI "\fBisl_bool\fP \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), plain_is_equal)"
.br
.ti -1c
.RI "\fB__isl_give\fP \fBisl_set\fP * \fBFN\fP (\fBMULTI\fP(\fBBASE\fP), \fBdomain\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define LIST(\fBEL\fP)   \fBxLIST\fP(\fBEL\fP)"

.SS "#define MULTI_NAME(\fBBASE\fP)   'isl_multi_' #BASE"

.SS "#define xLIST(\fBEL\fP)   \fBEL\fP ## _list"

.SH "Function Documentation"
.PP 
.SS "\fB__isl_give\fP \fBEL\fP* FN (FN(\fBMULTI\fP(\fBBASE\fP), get), \fBBASE\fP)"

.SS "unsigned FN (\fBMULTI\fP(\fBBASE\fP), \fBdim\fP)"

.SS "\fB__isl_give\fP \fBisl_set\fP* FN (\fBMULTI\fP(\fBBASE\fP), \fBdomain\fP)"

.SS "int FN (\fBMULTI\fP(\fBBASE\fP), find_dim_by_id)"

.SS "int FN (\fBMULTI\fP(\fBBASE\fP), find_dim_by_name)"

.SS "\fBisl_ctx\fP* FN (\fBMULTI\fP(\fBBASE\fP), get_ctx)"

.SS "\fB__isl_give\fP \fBisl_id\fP* FN (\fBMULTI\fP(\fBBASE\fP), get_dim_id)"

.SS "\fB__isl_give\fP \fBisl_space\fP* FN (\fBMULTI\fP(\fBBASE\fP), get_domain_space)"

.SS "\fB__isl_give\fP \fBisl_space\fP* FN (\fBMULTI\fP(\fBBASE\fP), get_space)"

.SS "\fB__isl_give\fP \fBisl_id\fP* FN (\fBMULTI\fP(\fBBASE\fP), get_tuple_id)"

.SS "\fBconst\fP char* FN (\fBMULTI\fP(\fBBASE\fP), get_tuple_name)"

.SS "\fBisl_bool\fP FN (\fBMULTI\fP(\fBBASE\fP), has_tuple_id)"

.SS "\fBisl_bool\fP FN (\fBMULTI\fP(\fBBASE\fP), involves_dims)"

.SS "\fBisl_bool\fP FN (\fBMULTI\fP(\fBBASE\fP), plain_is_equal)"

.SS "\fBisl_bool\fP FN (\fBMULTI\fP(\fBBASE\fP), range_is_wrapping)"

.SS "\fB__isl_give\fP MULTI (\fBBASE\fP)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
