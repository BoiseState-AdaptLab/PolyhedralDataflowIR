.TH "pdfg::Constr" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pdfg::Constr
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <GraphIL\&.hpp>\fP
.PP
Inherits \fBpdfg::Expr\fP\&.
.PP
Inherited by \fBpdfg::Range\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBConstr\fP ()"
.br
.ti -1c
.RI "\fBConstr\fP (\fBconst\fP \fBExpr\fP &\fBlhs\fP, \fBconst\fP \fBExpr\fP &\fBrhs\fP, \fBconst\fP string &\fBrelop\fP='', bool \fBinexists\fP=false)"
.br
.ti -1c
.RI "\fBConstr\fP (\fBconst\fP \fBConstr\fP &other)"
.br
.ti -1c
.RI "\fBConstr\fP & \fBoperator=\fP (\fBconst\fP \fBExpr\fP &expr) override"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBconst\fP \fBConstr\fP &other)"
.br
.ti -1c
.RI "\fBExpr\fP \fBlhs\fP () \fBconst\fP"
.br
.ti -1c
.RI "void \fBlhs\fP (\fBconst\fP \fBExpr\fP &expr)"
.br
.ti -1c
.RI "\fBExpr\fP \fBrhs\fP () \fBconst\fP"
.br
.ti -1c
.RI "void \fBrhs\fP (\fBconst\fP \fBExpr\fP &expr)"
.br
.ti -1c
.RI "string \fBrelop\fP () \fBconst\fP"
.br
.ti -1c
.RI "void \fBrelop\fP (\fBconst\fP string &relop)"
.br
.ti -1c
.RI "bool \fBcontains\fP (\fBconst\fP \fBIter\fP &iter) \fBconst\fP"
.br
.ti -1c
.RI "bool \fBinexists\fP () \fBconst\fP"
.br
.ti -1c
.RI "void \fBinexists\fP (bool \fBexists\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBcopy\fP (\fBconst\fP \fBConstr\fP &other)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBExpr\fP \fB_lhs\fP"
.br
.ti -1c
.RI "\fBExpr\fP \fB_rhs\fP"
.br
.ti -1c
.RI "string \fB_relop\fP"
.br
.ti -1c
.RI "bool \fB_inexists\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "pdfg::Constr::Constr ()\fC [inline]\fP, \fC [explicit]\fP"

.SS "pdfg::Constr::Constr (\fBconst\fP \fBExpr\fP & lhs, \fBconst\fP \fBExpr\fP & rhs, \fBconst\fP string & relop = \fC''\fP, bool inexists = \fCfalse\fP)\fC [inline]\fP, \fC [explicit]\fP"

.SS "pdfg::Constr::Constr (\fBconst\fP \fBConstr\fP & other)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "bool pdfg::Constr::contains (\fBconst\fP \fBIter\fP & iter) const\fC [inline]\fP"

.SS "void pdfg::Constr::copy (\fBconst\fP \fBConstr\fP & other)\fC [inline]\fP, \fC [protected]\fP"

.SS "bool pdfg::Constr::inexists () const\fC [inline]\fP"

.SS "void pdfg::Constr::inexists (bool exists)\fC [inline]\fP"

.SS "\fBExpr\fP pdfg::Constr::lhs () const\fC [inline]\fP"

.SS "void pdfg::Constr::lhs (\fBconst\fP \fBExpr\fP & expr)\fC [inline]\fP"

.SS "\fBConstr\fP& pdfg::Constr::operator= (\fBconst\fP \fBExpr\fP & expr)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBpdfg::Expr\fP\&.
.SS "bool pdfg::Constr::operator== (\fBconst\fP \fBConstr\fP & other)\fC [inline]\fP"

.SS "string pdfg::Constr::relop () const\fC [inline]\fP"

.SS "void pdfg::Constr::relop (\fBconst\fP string & relop)\fC [inline]\fP"

.SS "\fBExpr\fP pdfg::Constr::rhs () const\fC [inline]\fP"

.SS "void pdfg::Constr::rhs (\fBconst\fP \fBExpr\fP & expr)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "bool pdfg::Constr::_inexists\fC [protected]\fP"

.SS "\fBExpr\fP pdfg::Constr::_lhs\fC [protected]\fP"

.SS "string pdfg::Constr::_relop\fC [protected]\fP"

.SS "\fBExpr\fP pdfg::Constr::_rhs\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
