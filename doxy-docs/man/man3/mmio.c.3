.TH "src/util/mmio.c" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/util/mmio.c
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <ctype\&.h>\fP
.br
\fC#include 'mmio\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBmm_read\fP (\fBconst\fP char *filepath, unsigned *nrows, unsigned **rows, unsigned *ncols, unsigned **cols, unsigned *nnz, \fBreal\fP **vals)"
.br
.ti -1c
.RI "int \fBmm_free\fP (unsigned **rows, unsigned **cols, \fBreal\fP **vals)"
.br
.ti -1c
.RI "int \fBmm_read_unsymmetric_sparse\fP (\fBconst\fP char *fname, int *M_, int *N_, int *nz_, double **val_, int **I_, int **J_)"
.br
.ti -1c
.RI "int \fBmm_is_valid\fP (\fBMM_typecode\fP matcode)"
.br
.ti -1c
.RI "int \fBmm_read_banner\fP (FILE *\fBf\fP, \fBMM_typecode\fP *matcode)"
.br
.ti -1c
.RI "int \fBmm_write_mtx_crd_size\fP (FILE *\fBf\fP, int M, int \fBN\fP, int nz)"
.br
.ti -1c
.RI "int \fBmm_read_mtx_crd_size\fP (FILE *\fBf\fP, int *M, int *\fBN\fP, int *nz)"
.br
.ti -1c
.RI "int \fBmm_read_mtx_array_size\fP (FILE *\fBf\fP, int *M, int *\fBN\fP)"
.br
.ti -1c
.RI "int \fBmm_write_mtx_array_size\fP (FILE *\fBf\fP, int M, int \fBN\fP)"
.br
.ti -1c
.RI "int \fBmm_read_mtx_crd_data\fP (FILE *\fBf\fP, int M, int \fBN\fP, int nz, int I[], int J[], double \fBval\fP[], \fBMM_typecode\fP matcode)"
.br
.ti -1c
.RI "int \fBmm_read_mtx_crd_entry\fP (FILE *\fBf\fP, int *I, int *J, double *\fBreal\fP, double *imag, \fBMM_typecode\fP matcode)"
.br
.ti -1c
.RI "int \fBmm_read_mtx_crd\fP (char *fname, int *M, int *\fBN\fP, int *nz, int **I, int **J, double **\fBval\fP, \fBMM_typecode\fP *matcode)"
.br
.ti -1c
.RI "int \fBmm_write_banner\fP (FILE *\fBf\fP, \fBMM_typecode\fP matcode)"
.br
.ti -1c
.RI "int \fBmm_write_mtx_crd\fP (char fname[], int M, int \fBN\fP, int nz, int I[], int J[], double \fBval\fP[], \fBMM_typecode\fP matcode)"
.br
.ti -1c
.RI "char * \fBmm_strdup\fP (\fBconst\fP char *s)"
.br
.ti -1c
.RI "char * \fBmm_typecode_to_str\fP (\fBMM_typecode\fP matcode)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int mm_free (unsigned ** rows, unsigned ** cols, \fBreal\fP ** vals)"

.SS "int mm_is_valid (\fBMM_typecode\fP matcode)"

.SS "int mm_read (\fBconst\fP char * filepath, unsigned * nrows, unsigned ** rows, unsigned * ncols, unsigned ** cols, unsigned * nnz, \fBreal\fP ** vals)"

.SS "int mm_read_banner (FILE * f, \fBMM_typecode\fP * matcode)"

.SS "int mm_read_mtx_array_size (FILE * f, int * M, int * N)"

.SS "int mm_read_mtx_crd (char * fname, int * M, int * N, int * nz, int ** I, int ** J, double ** val, \fBMM_typecode\fP * matcode)"

.SS "int mm_read_mtx_crd_data (FILE * f, int M, int N, int nz, int I[], int J[], double val[], \fBMM_typecode\fP matcode)"

.SS "int mm_read_mtx_crd_entry (FILE * f, int * I, int * J, double * real, double * imag, \fBMM_typecode\fP matcode)"

.SS "int mm_read_mtx_crd_size (FILE * f, int * M, int * N, int * nz)"

.SS "int mm_read_unsymmetric_sparse (\fBconst\fP char * fname, int * M_, int * N_, int * nz_, double ** val_, int ** I_, int ** J_)"

.SS "char* mm_strdup (\fBconst\fP char * s)"
Create a new copy of a string s\&. \fBmm_strdup()\fP is a common routine, but not part of ANSI C, so it is included here\&. Used by \fBmm_typecode_to_str()\fP\&. 
.SS "char* mm_typecode_to_str (\fBMM_typecode\fP matcode)"

.SS "int mm_write_banner (FILE * f, \fBMM_typecode\fP matcode)"

.SS "int mm_write_mtx_array_size (FILE * f, int M, int N)"

.SS "int mm_write_mtx_crd (char fname[], int M, int N, int nz, int I[], int J[], double val[], \fBMM_typecode\fP matcode)"

.SS "int mm_write_mtx_crd_size (FILE * f, int M, int N, int nz)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
