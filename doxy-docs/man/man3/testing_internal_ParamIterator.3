.TH "testing::internal::ParamIterator< T >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
testing::internal::ParamIterator< T >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gtest\-param\-util\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBT\fP \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBdifference_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBParamIterator\fP (\fBconst\fP \fBParamIterator\fP &other)"
.br
.ti -1c
.RI "\fBParamIterator\fP & \fBoperator=\fP (\fBconst\fP \fBParamIterator\fP &other)"
.br
.ti -1c
.RI "\fBconst\fP \fBT\fP & \fBoperator*\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBT\fP * \fBoperator\->\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBParamIterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBParamIterator\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBconst\fP \fBParamIterator\fP &other) \fBconst\fP"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBconst\fP \fBParamIterator\fP &other) \fBconst\fP"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBconst\fP typedef \fBT\fP & \fBreference\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBParamGenerator< T >\fP"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename T > typedef ptrdiff_t \fBtesting::internal::ParamIterator\fP< \fBT\fP >::\fBdifference_type\fP"

.SS "template<typename T > typedef \fBT\fP \fBtesting::internal::ParamIterator\fP< \fBT\fP >::\fBvalue_type\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T > \fBtesting::internal::ParamIterator\fP< \fBT\fP >::\fBParamIterator\fP (\fBconst\fP \fBParamIterator\fP< \fBT\fP > & other)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename T > bool \fBtesting::internal::ParamIterator\fP< \fBT\fP >::operator!= (\fBconst\fP \fBParamIterator\fP< \fBT\fP > & other) const\fC [inline]\fP"

.SS "template<typename T > \fBconst\fP \fBT\fP& \fBtesting::internal::ParamIterator\fP< \fBT\fP >::operator* () const\fC [inline]\fP"

.SS "template<typename T > \fBParamIterator\fP& \fBtesting::internal::ParamIterator\fP< \fBT\fP >::operator++ ()\fC [inline]\fP"

.SS "template<typename T > \fBParamIterator\fP \fBtesting::internal::ParamIterator\fP< \fBT\fP >::operator++ (int)\fC [inline]\fP"

.SS "template<typename T > \fBconst\fP \fBT\fP* \fBtesting::internal::ParamIterator\fP< \fBT\fP >::operator\-> () const\fC [inline]\fP"

.SS "template<typename T > \fBParamIterator\fP& \fBtesting::internal::ParamIterator\fP< \fBT\fP >::operator= (\fBconst\fP \fBParamIterator\fP< \fBT\fP > & other)\fC [inline]\fP"

.SS "template<typename T > bool \fBtesting::internal::ParamIterator\fP< \fBT\fP >::operator== (\fBconst\fP \fBParamIterator\fP< \fBT\fP > & other) const\fC [inline]\fP"

.SH "Friends And Related Function Documentation"
.PP 
.SS "template<typename T > friend class \fBParamGenerator\fP< \fBT\fP >\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<typename T > \fBconst\fP typedef \fBT\fP& \fBtesting::internal::ParamIterator\fP< \fBT\fP >::reference"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
