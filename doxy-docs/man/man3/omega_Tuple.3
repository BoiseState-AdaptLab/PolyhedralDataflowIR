.TH "omega::Tuple< T >" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
omega::Tuple< T >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Tuple\&.h>\fP
.PP
Inherits \fBomega::Sequence< T >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTuple\fP ()"
.br
.ti -1c
.RI "\fBTuple\fP (int \fBsize\fP)"
.br
.ti -1c
.RI "\fBTuple\fP (\fBconst\fP \fBTuple\fP< \fBT\fP > &tpl)"
.br
.ti -1c
.RI "virtual \fB~Tuple\fP ()"
.br
.ti -1c
.RI "\fBTuple\fP< \fBT\fP > & \fBoperator=\fP (\fBconst\fP \fBTuple\fP< \fBT\fP > &tpl)"
.br
.ti -1c
.RI "int \fBsize\fP () \fBconst\fP"
.br
.ti -1c
.RI "int \fBlength\fP () \fBconst\fP"
.br
.ti -1c
.RI "bool \fBoperator==\fP (\fBconst\fP \fBTuple\fP< \fBT\fP > &\fBb\fP) \fBconst\fP"
.br
.ti -1c
.RI "void \fBreallocate\fP (\fBconst\fP int)"
.br
.ti -1c
.RI "void \fBdelete_last\fP ()"
.br
.ti -1c
.RI "void \fBappend\fP (\fBconst\fP \fBTuple\fP< \fBT\fP > &v)"
.br
.ti -1c
.RI "void \fBappend\fP (\fBconst\fP \fBT\fP &v)"
.br
.ti -1c
.RI "void \fBjoin\fP (\fBTuple\fP< \fBT\fP > &v)"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "int \fBempty\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBIterator\fP< \fBT\fP > * \fBnew_iterator\fP ()"
.br
.ti -1c
.RI "virtual \fBT\fP & \fBoperator[]\fP (int \fBindex\fP)"
.br
.ti -1c
.RI "virtual \fBconst\fP \fBT\fP & \fBoperator[]\fP (int \fBindex\fP) \fBconst\fP"
.br
.ti -1c
.RI "int \fBindex\fP (\fBconst\fP \fBT\fP &) \fBconst\fP"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBT\fP * \fBdata\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBTuple_Iterator< T >\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class T > \fBomega::Tuple\fP< \fBT\fP >::\fBTuple\fP"

.SS "template<class T > \fBomega::Tuple\fP< \fBT\fP >::\fBTuple\fP (int size)"

.SS "template<class T > \fBomega::Tuple\fP< \fBT\fP >::\fBTuple\fP (\fBconst\fP \fBTuple\fP< \fBT\fP > & tpl)"

.SS "template<class T > \fBomega::Tuple\fP< \fBT\fP >::~\fBTuple\fP\fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<class T > void \fBomega::Tuple\fP< \fBT\fP >::append (\fBconst\fP \fBT\fP & v)"

.SS "template<class T > void \fBomega::Tuple\fP< \fBT\fP >::append (\fBconst\fP \fBTuple\fP< \fBT\fP > & v)"

.SS "template<class T > void \fBomega::Tuple\fP< \fBT\fP >::clear"

.SS "template<class T > void \fBomega::Tuple\fP< \fBT\fP >::delete_last"

.SS "template<class T > int \fBomega::Tuple\fP< \fBT\fP >::empty"

.SS "template<class T > int \fBomega::Tuple\fP< \fBT\fP >::index (\fBconst\fP \fBT\fP & var) const\fC [virtual]\fP"

.PP
Implements \fBomega::Sequence< T >\fP\&.
.SS "template<class T > void \fBomega::Tuple\fP< \fBT\fP >::join (\fBTuple\fP< \fBT\fP > & v)"

.SS "template<class T > int \fBomega::Tuple\fP< \fBT\fP >::length () const\fC [inline]\fP"

.SS "template<class T > \fBIterator\fP< \fBT\fP > * \fBomega::Tuple\fP< \fBT\fP >::new_iterator\fC [virtual]\fP"

.PP
Implements \fBomega::Collection< T >\fP\&.
.SS "template<class T > \fBTuple\fP< \fBT\fP > & \fBomega::Tuple\fP< \fBT\fP >::operator= (\fBconst\fP \fBTuple\fP< \fBT\fP > & tpl)"

.SS "template<class T > bool \fBomega::Tuple\fP< \fBT\fP >::operator== (\fBconst\fP \fBTuple\fP< \fBT\fP > & b) const"

.SS "template<class T > \fBT\fP & \fBomega::Tuple\fP< \fBT\fP >::operator[] (int index)\fC [virtual]\fP"

.PP
Implements \fBomega::Sequence< T >\fP\&.
.PP
Reimplemented in \fBomega::Global_Input_Output_Tuple\fP\&.
.SS "template<class T > \fBconst\fP \fBT\fP & \fBomega::Tuple\fP< \fBT\fP >::operator[] (int index) const\fC [virtual]\fP"

.PP
Implements \fBomega::Sequence< T >\fP\&.
.PP
Reimplemented in \fBomega::Global_Input_Output_Tuple\fP\&.
.SS "template<class T > void \fBomega::Tuple\fP< \fBT\fP >::reallocate (\fBconst\fP int req_size)"

.SS "template<class T > int \fBomega::Tuple\fP< \fBT\fP >::size () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBomega::Collection< T >\fP\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "template<class T > friend class \fBTuple_Iterator\fP< \fBT\fP >\fC [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<class T > \fBT\fP* \fBomega::Tuple\fP< \fBT\fP >::data\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
