.TH "out/coo_dns_insp.h" 3 "Sun Jul 12 2020" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
out/coo_dns_insp.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBmin\fP(\fBx\fP,  \fBy\fP)   (((\fBx\fP)<(\fBy\fP))?(\fBx\fP):(\fBy\fP))"
.br
.ti -1c
.RI "#define \fBmax\fP(\fBx\fP,  \fBy\fP)   (((\fBx\fP)>(\fBy\fP))?(\fBx\fP):(\fBy\fP))"
.br
.ti -1c
.RI "#define \fBabs\fP(\fBx\fP)   ((\fBx\fP)<0?\-(\fBx\fP):(\fBx\fP))"
.br
.ti -1c
.RI "#define \fBfloord\fP(\fBx\fP,  \fBy\fP)   ((\fBx\fP)/(\fBy\fP))"
.br
.ti -1c
.RI "#define \fBoffset2\fP(\fBi\fP,  \fBj\fP,  M)   ((\fBj\fP)+(\fBi\fP)*(M))"
.br
.ti -1c
.RI "#define \fBoffset3\fP(\fBi\fP,  \fBj\fP,  \fBk\fP,  J,  K)   ((\fBk\fP)+(K)*((\fBj\fP)+(J)*(\fBi\fP)))"
.br
.ti -1c
.RI "#define \fBoffset4\fP(\fBi\fP,  \fBj\fP,  \fBk\fP,  l,  M,  \fBN\fP,  \fBP\fP)   ((l)+((\fBk\fP)+((\fBj\fP)+(\fBi\fP)*(M))*(\fBN\fP))*(\fBP\fP))"
.br
.ti -1c
.RI "#define \fBarrinit\fP(ptr,  \fBval\fP,  \fBsize\fP)   for(unsigned __i__=0;__i__<(\fBsize\fP);__i__++) (ptr)[__i__]=(\fBval\fP)"
.br
.ti -1c
.RI "#define \fBfindx\fP(\fBn\fP,  \fBm\fP)   (*findx)[(\fBn\fP)][(\fBm\fP)]"
.br
.ti -1c
.RI "#define \fBfptr\fP(\fBn\fP,  \fBm\fP)   (*fptr)[(\fBn\fP)][(\fBm\fP)]"
.br
.ti -1c
.RI "#define \fBpos\fP(\fBn\fP)   pos[(\fBn\fP)]"
.br
.ti -1c
.RI "#define \fBloc\fP(\fBn\fP)   loc[(\fBn\fP)]"
.br
.ti -1c
.RI "#define \fBmark\fP(\fBn\fP)   mark[(\fBn\fP)]"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBcoo_dns_insp\fP (\fBconst\fP float *\fBval\fP, \fBconst\fP unsigned *dims, \fBconst\fP unsigned *indices, \fBconst\fP unsigned M, \fBconst\fP unsigned \fBN\fP, float **\fBdval\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define abs(\fBx\fP)   ((\fBx\fP)<0?\-(\fBx\fP):(\fBx\fP))"

.SS "#define arrinit(ptr, \fBval\fP, \fBsize\fP)   for(unsigned __i__=0;__i__<(\fBsize\fP);__i__++) (ptr)[__i__]=(\fBval\fP)"

.SS "#define findx(\fBn\fP, \fBm\fP)   (*findx)[(\fBn\fP)][(\fBm\fP)]"

.SS "#define floord(\fBx\fP, \fBy\fP)   ((\fBx\fP)/(\fBy\fP))"

.SS "#define fptr(\fBn\fP, \fBm\fP)   (*fptr)[(\fBn\fP)][(\fBm\fP)]"

.SS "#define loc(\fBn\fP)   loc[(\fBn\fP)]"

.SS "#define mark(\fBn\fP)   mark[(\fBn\fP)]"

.SS "#define max(\fBx\fP, \fBy\fP)   (((\fBx\fP)>(\fBy\fP))?(\fBx\fP):(\fBy\fP))"

.SS "#define min(\fBx\fP, \fBy\fP)   (((\fBx\fP)<(\fBy\fP))?(\fBx\fP):(\fBy\fP))"

.SS "#define offset2(\fBi\fP, \fBj\fP, M)   ((\fBj\fP)+(\fBi\fP)*(M))"

.SS "#define offset3(\fBi\fP, \fBj\fP, \fBk\fP, J, K)   ((\fBk\fP)+(K)*((\fBj\fP)+(J)*(\fBi\fP)))"

.SS "#define offset4(\fBi\fP, \fBj\fP, \fBk\fP, l, M, \fBN\fP, \fBP\fP)   ((l)+((\fBk\fP)+((\fBj\fP)+(\fBi\fP)*(M))*(\fBN\fP))*(\fBP\fP))"

.SS "#define pos(\fBn\fP)   pos[(\fBn\fP)]"

.SH "Function Documentation"
.PP 
.SS "void coo_dns_insp (\fBconst\fP float * val, \fBconst\fP unsigned * dims, \fBconst\fP unsigned * indices, \fBconst\fP unsigned M, \fBconst\fP unsigned N, float ** dval)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
